[{"path":"src/app/app-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { AuthModule } from \u0027./auth/auth.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthGuard } from \u0027./core/guards/auth.guard\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PhaseBugReportingModule } from \u0027./phase-bug-reporting/phase-bug-reporting.module\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PhaseModerationModule } from \u0027./phase-moderation/phase-moderation.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { PhaseTeamResponseModule } from \u0027./phase-team-response/phase-team-response.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { PhaseTesterResponseModule } from \u0027./phase-tester-response/phase-tester-response.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":11,"author":{"gitId":"-"},"content":"  { path: \u0027\u0027, loadChildren: () \u003d\u003e AuthModule },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  { path: \u0027phaseBugReporting\u0027, loadChildren: () \u003d\u003e PhaseBugReportingModule, canLoad: [AuthGuard] },"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  { path: \u0027phaseTeamResponse\u0027, loadChildren: () \u003d\u003e PhaseTeamResponseModule, canLoad: [AuthGuard] },"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  { path: \u0027phaseTesterResponse\u0027, loadChildren: () \u003d\u003e PhaseTesterResponseModule, canLoad: [AuthGuard] },"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  { path: \u0027phaseModeration\u0027, loadChildren: () \u003d\u003e PhaseModerationModule, canLoad: [AuthGuard] },"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"  { path: \u0027**\u0027, redirectTo: \u0027\u0027 }"},{"lineNumber":17,"author":{"gitId":"-"},"content":"];"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  imports: [RouterModule.forRoot(routes)],"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class AppRoutingModule {}"}],"authorContributionMap":{"NereusWB922":2,"-":21}},{"path":"src/app/core/directives/internal-link-disable.directive.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"import { Directive, HostListener } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"import { ErrorHandlingService } from \u0027../services/error-handling.service\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"class InvalidLinkError extends Error {"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"  constructor() {"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"    super(\u0027Invalid link!\u0027);"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"    Object.setPrototypeOf(this, InvalidLinkError.prototype);"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"@Directive({"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"  selector: \u0027[disableInternalLink]\u0027"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"})"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"export class InternalLinkDisableDirective {"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  constructor(private errorHandlingService: ErrorHandlingService) {}"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"  @HostListener(\u0027click\u0027, [\u0027$event\u0027])"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"  public onClick(e: MouseEvent): void {"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"    const srcElement \u003d e.target;"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":21,"author":{"gitId":"NereusWB922"},"content":"    if (srcElement instanceof HTMLAnchorElement) {"},{"lineNumber":22,"author":{"gitId":"NereusWB922"},"content":"      const baseURI \u003d srcElement.baseURI;"},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"      const href \u003d srcElement.href;"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"      if (href.startsWith(baseURI)) {"},{"lineNumber":26,"author":{"gitId":"NereusWB922"},"content":"        this.errorHandlingService.handleError(new InvalidLinkError());"},{"lineNumber":27,"author":{"gitId":"NereusWB922"},"content":"        e.preventDefault();"},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"        e.stopPropagation();"},{"lineNumber":29,"author":{"gitId":"NereusWB922"},"content":"      }"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"}"}],"authorContributionMap":{"NereusWB922":32}},{"path":"src/app/core/services/github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ApolloQueryResult } from \u0027@apollo/client/core\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Apollo, QueryRef } from \u0027apollo-angular\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { DocumentNode } from \u0027graphql\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, from, Observable, of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, filter, map, mergeMap, throwIfEmpty } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FetchIssue,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FetchIssueQuery,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FetchIssues,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FetchIssuesByTeam,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FetchIssuesByTeamQuery,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FetchIssuesQuery,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FetchLabels,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FetchLabelsQuery"},{"lineNumber":17,"author":{"gitId":"-"},"content":"} from \u0027../../../../graphql/graphql-types\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"import { throwIfFalse } from \u0027../../shared/lib/custom-ops\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { getNumberOfPages } from \u0027../../shared/lib/github-paginator-parser\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../models/comment.model\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../models/github-user.model\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { IssueLastModifiedManagerModel } from \u0027../models/github/cache-manager/issue-last-modified-manager.model\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { IssuesCacheManager } from \u0027../models/github/cache-manager/issues-cache-manager.model\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../models/github/github-comment.model\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssue } from \u0027../models/github/github-graphql.issue\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../models/github/github-label.model\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { GithubResponse } from \u0027../models/github/github-response.model\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { GithubRelease } from \u0027../models/github/github.release\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { ERRORCODE_NOT_FOUND, ErrorHandlingService } from \u0027./error-handling.service\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"const { Octokit } \u003d require(\u0027@octokit/rest\u0027);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"const CATCHER_ORG \u003d \u0027CATcher-org\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"const CATCHER_REPO \u003d \u0027CATcher\u0027;"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"const BRANCH \u003d \u0027main\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"const UNABLE_TO_OPEN_IN_BROWSER \u003d \u0027Unable to open this issue in Browser\u0027;"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"const BRANCH_CREATION_FAILED \u003d `Unable to create ${BRANCH} branch.`;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"function getSettingsUrl(org: string, repoName: string): string {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  return `https://raw.githubusercontent.com/${org}/${repoName}/master/settings.json`;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"let ORG_NAME \u003d \u0027\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"let MOD_ORG \u003d \u0027\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"let REPO \u003d \u0027\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"let DATA_REPO \u003d \u0027\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"const MAX_ITEMS_PER_PAGE \u003d 100;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"let octokit \u003d new Octokit();"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"})"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":59,"author":{"gitId":"-"},"content":" * Responsible for communicating with GitHub to create, update, read and delete"},{"lineNumber":60,"author":{"gitId":"-"},"content":" * features related to Github using GitHub API Requests."},{"lineNumber":61,"author":{"gitId":"-"},"content":" * For example, issues, issue labels and repositories."},{"lineNumber":62,"author":{"gitId":"-"},"content":" */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"export class GithubService {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  private static readonly IF_NONE_MATCH_EMPTY \u003d { \u0027If-None-Match\u0027: \u0027\u0027 };"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  private issuesCacheManager \u003d new IssuesCacheManager();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  private issuesLastModifiedManager \u003d new IssueLastModifiedManagerModel();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  private issueQueryRefs \u003d new Map\u003cNumber, QueryRef\u003cFetchIssueQuery\u003e\u003e();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  constructor(private errorHandlingService: ErrorHandlingService, private apollo: Apollo, private logger: LoggingService) {}"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(accessToken: string) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    octokit \u003d new Octokit({"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      auth() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return `Token ${accessToken}`;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      log: {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        debug: (message, ...otherInfo) \u003d\u003e this.logger.debug(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Do not log info for HTTP response 304 due to repeated polling"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        info: (message, ...otherInfo) \u003d\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          /304 in \\d+ms$/.test(message) ? undefined : this.logger.info(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        warn: (message, ...otherInfo) \u003d\u003e this.logger.warn(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        error: (message, ...otherInfo) \u003d\u003e this.logger.error(\u0027GithubService: \u0027 + message, ...otherInfo)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  storeOrganizationDetails(orgName: string, dataRepo: string) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    MOD_ORG \u003d orgName;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    DATA_REPO \u003d dataRepo;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  storePhaseDetails(phaseRepoOwner: string, repoName: string) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    REPO \u003d repoName;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    ORG_NAME \u003d phaseRepoOwner;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":99,"author":{"gitId":"-"},"content":"   * Fetches an array of filtered GitHubIssues using GraphQL query for a given team."},{"lineNumber":100,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * @param tutorial - The tutorial that the team belongs to."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   * @param team - The team\u0027s designated name."},{"lineNumber":103,"author":{"gitId":"-"},"content":"   * @param issuesFilter - The issue filter."},{"lineNumber":104,"author":{"gitId":"-"},"content":"   * @returns An observable array of filtered GithubIssues"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  fetchIssuesGraphqlByTeam(tutorial: string, team: string, issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    return this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":109,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      mergeMap(() \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesByTeamQuery, GithubGraphqlIssue\u003e("},{"lineNumber":112,"author":{"gitId":"-"},"content":"          FetchIssuesByTeam,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            owner: ORG_NAME,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            name: REPO,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            filter: {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              ...graphqlFilter,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              labels: [...(graphqlFilter.labels ? graphqlFilter.labels : []), team]"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tutorial"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.label.issues.edges,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"          GithubGraphqlIssue"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   * Fetches an array of filtered GitHubIssues using GraphQL query."},{"lineNumber":131,"author":{"gitId":"-"},"content":"   * @param issuesFilter - The issue filter."},{"lineNumber":132,"author":{"gitId":"-"},"content":"   * @returns An observable array of filtered GithubIssues"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  fetchIssuesGraphql(issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":137,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      mergeMap(() \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesQuery, GithubGraphqlIssue\u003e("},{"lineNumber":140,"author":{"gitId":"-"},"content":"          FetchIssues,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO, filter: graphqlFilter },"},{"lineNumber":142,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.issues.edges,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"          GithubGraphqlIssue"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   * Checks if there are pages of filtered issues that are not cached in the cache model,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   * and updates the model to cache these new pages."},{"lineNumber":152,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter."},{"lineNumber":153,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if there are pages that do not exist in the cache model."},{"lineNumber":154,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  private toFetchIssues(filter: RestGithubIssueFilter): Observable\u003cboolean\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubIssue[]\u003e;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    return this.getIssuesAPICall(filter, 1).pipe("},{"lineNumber":158,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue[]\u003e) \u003d\u003e {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      mergeMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e[] \u003d [];"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        for (let i \u003d 2; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          apiCalls.push(this.getIssuesAPICall(filter, i));"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      map((resultArray: GithubResponse\u003cGithubIssue[]\u003e[]) \u003d\u003e {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        const responses \u003d [responseInFirstPage, ...resultArray];"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        const isCached \u003d responses.reduce((result, response) \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          return result \u0026\u0026 response.isCached;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }, true);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        responses.forEach((resp, index) \u003d\u003e this.issuesCacheManager.set(index + 1, resp));"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return !isCached;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   * Checks if the specified repository exists."},{"lineNumber":182,"author":{"gitId":"-"},"content":"   * @param owner - Owner of Specified Repository."},{"lineNumber":183,"author":{"gitId":"-"},"content":"   * @param repo - Name of Repository."},{"lineNumber":184,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  isRepositoryPresent(owner: string, repo: string): Observable\u003cboolean\u003e {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    return from(octokit.repos.get({ owner: owner, repo: repo, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":187,"author":{"gitId":"-"},"content":"      map((rawData: { status: number }) \u003d\u003e {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return rawData.status !\u003d\u003d ERRORCODE_NOT_FOUND;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return of(false);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch repo data.\u0027))"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":198,"author":{"gitId":"-"},"content":"   * Creates a repository in for the authenticated user location."},{"lineNumber":199,"author":{"gitId":"-"},"content":"   * @param name - Name of Repo to create."},{"lineNumber":200,"author":{"gitId":"-"},"content":"   * @return Observable\u003cboolean\u003e - That returns true if the repository has been successfully"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   *                                created."},{"lineNumber":202,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  createRepository(name: string): void {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    octokit.repos.createForAuthenticatedUser({ name: name });"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":208,"author":{"gitId":"nknguyenhc"},"content":"   * Creates the `main` branch for the current repository."},{"lineNumber":209,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":210,"author":{"gitId":"nknguyenhc"},"content":"  createBranch() {"},{"lineNumber":211,"author":{"gitId":"nknguyenhc"},"content":"    return this.getDefaultBranch().pipe("},{"lineNumber":212,"author":{"gitId":"nknguyenhc"},"content":"      mergeMap((res) \u003d\u003e this.getBranchHeadInfo(res)),"},{"lineNumber":213,"author":{"gitId":"nknguyenhc"},"content":"      map((res) \u003d\u003e res.data.object.sha),"},{"lineNumber":214,"author":{"gitId":"nknguyenhc"},"content":"      mergeMap((sha: string) \u003d\u003e this.createBranchFromCommit(sha)),"},{"lineNumber":215,"author":{"gitId":"nknguyenhc"},"content":"      mergeMap(() \u003d\u003e this.isMainBranchPresent()),"},{"lineNumber":216,"author":{"gitId":"nknguyenhc"},"content":"      throwIfFalse("},{"lineNumber":217,"author":{"gitId":"nknguyenhc"},"content":"        (isBranchPresent: boolean) \u003d\u003e isBranchPresent,"},{"lineNumber":218,"author":{"gitId":"nknguyenhc"},"content":"        () \u003d\u003e new Error(BRANCH_CREATION_FAILED)"},{"lineNumber":219,"author":{"gitId":"nknguyenhc"},"content":"      )"},{"lineNumber":220,"author":{"gitId":"nknguyenhc"},"content":"    );"},{"lineNumber":221,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":222,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":223,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":224,"author":{"gitId":"nknguyenhc"},"content":"   * Creates the `main` branch for the current repository,"},{"lineNumber":225,"author":{"gitId":"nknguyenhc"},"content":"   * from the commit with the given SHA."},{"lineNumber":226,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":227,"author":{"gitId":"nknguyenhc"},"content":"  createBranchFromCommit(commitSha: string) {"},{"lineNumber":228,"author":{"gitId":"nknguyenhc"},"content":"    return from("},{"lineNumber":229,"author":{"gitId":"nknguyenhc"},"content":"      octokit.git.createRef({"},{"lineNumber":230,"author":{"gitId":"nknguyenhc"},"content":"        owner: ORG_NAME,"},{"lineNumber":231,"author":{"gitId":"nknguyenhc"},"content":"        repo: REPO,"},{"lineNumber":232,"author":{"gitId":"nknguyenhc"},"content":"        ref: `refs/heads/${BRANCH}`,"},{"lineNumber":233,"author":{"gitId":"nknguyenhc"},"content":"        sha: commitSha"},{"lineNumber":234,"author":{"gitId":"nknguyenhc"},"content":"      })"},{"lineNumber":235,"author":{"gitId":"nknguyenhc"},"content":"    );"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":237,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"   * Get the default branch of the specified repository."},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"   * @param owner The owner of the repository."},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"   * @param repo The name of the repository."},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":243,"author":{"gitId":"nknguyenhc"},"content":"  getDefaultBranch(): Observable\u003cstring\u003e {"},{"lineNumber":244,"author":{"gitId":"nknguyenhc"},"content":"    return from("},{"lineNumber":245,"author":{"gitId":"nknguyenhc"},"content":"      octokit.repos.get({"},{"lineNumber":246,"author":{"gitId":"nknguyenhc"},"content":"        owner: ORG_NAME,"},{"lineNumber":247,"author":{"gitId":"nknguyenhc"},"content":"        repo: REPO"},{"lineNumber":248,"author":{"gitId":"nknguyenhc"},"content":"      })"},{"lineNumber":249,"author":{"gitId":"nknguyenhc"},"content":"    ).pipe(map((res: any) \u003d\u003e res.data.default_branch));"},{"lineNumber":250,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":251,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":252,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":253,"author":{"gitId":"nknguyenhc"},"content":"   * Get information of the head of the given branch name,"},{"lineNumber":254,"author":{"gitId":"nknguyenhc"},"content":"   * in the current repository."},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"   * @param branch The name of the branch."},{"lineNumber":256,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":257,"author":{"gitId":"nknguyenhc"},"content":"  getBranchHeadInfo(branch: string): Observable\u003cany\u003e {"},{"lineNumber":258,"author":{"gitId":"nknguyenhc"},"content":"    return from("},{"lineNumber":259,"author":{"gitId":"nknguyenhc"},"content":"      octokit.git.getRef({"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"        owner: ORG_NAME,"},{"lineNumber":261,"author":{"gitId":"nknguyenhc"},"content":"        repo: REPO,"},{"lineNumber":262,"author":{"gitId":"nknguyenhc"},"content":"        ref: `heads/${branch}`"},{"lineNumber":263,"author":{"gitId":"nknguyenhc"},"content":"      })"},{"lineNumber":264,"author":{"gitId":"nknguyenhc"},"content":"    );"},{"lineNumber":265,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":266,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":267,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":268,"author":{"gitId":"nknguyenhc"},"content":"   * Checks if the repo already has the branch `main`."},{"lineNumber":269,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":270,"author":{"gitId":"nknguyenhc"},"content":"  isMainBranchPresent(): Observable\u003cboolean\u003e {"},{"lineNumber":271,"author":{"gitId":"nknguyenhc"},"content":"    return from("},{"lineNumber":272,"author":{"gitId":"nknguyenhc"},"content":"      octokit.git.getRef({"},{"lineNumber":273,"author":{"gitId":"nknguyenhc"},"content":"        owner: ORG_NAME,"},{"lineNumber":274,"author":{"gitId":"nknguyenhc"},"content":"        repo: REPO,"},{"lineNumber":275,"author":{"gitId":"nknguyenhc"},"content":"        ref: `heads/${BRANCH}`"},{"lineNumber":276,"author":{"gitId":"nknguyenhc"},"content":"      })"},{"lineNumber":277,"author":{"gitId":"nknguyenhc"},"content":"    ).pipe("},{"lineNumber":278,"author":{"gitId":"nknguyenhc"},"content":"      map((res: any) \u003d\u003e res.status !\u003d\u003d ERRORCODE_NOT_FOUND),"},{"lineNumber":279,"author":{"gitId":"nknguyenhc"},"content":"      catchError(() \u003d\u003e {"},{"lineNumber":280,"author":{"gitId":"nknguyenhc"},"content":"        return of(false);"},{"lineNumber":281,"author":{"gitId":"nknguyenhc"},"content":"      })"},{"lineNumber":282,"author":{"gitId":"nknguyenhc"},"content":"    );"},{"lineNumber":283,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":284,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":286,"author":{"gitId":"-"},"content":"   * Fetches information about an issue using GraphQL."},{"lineNumber":287,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":288,"author":{"gitId":"-"},"content":"   * If the issue is not modified, return a `304 - Not Modified` response."},{"lineNumber":289,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":290,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":291,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cGithubGraphqlIssue\u003e that represents the response object."},{"lineNumber":292,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  fetchIssueGraphql(id: number): Observable\u003cGithubGraphqlIssue\u003e {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    if (this.issueQueryRefs.get(id) \u003d\u003d\u003d undefined) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      const newQueryRef \u003d this.apollo.watchQuery\u003cFetchIssueQuery\u003e({"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        query: FetchIssue,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        variables: {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          owner: ORG_NAME,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"          name: REPO,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"          issueId: id"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      this.issueQueryRefs.set(id, newQueryRef);"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"    const queryRef \u003d this.issueQueryRefs.get(id);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    return this.toFetchIssue(id).pipe("},{"lineNumber":308,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      mergeMap(() \u003d\u003e from(queryRef.refetch())),"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      map((value: ApolloQueryResult\u003cFetchIssueQuery\u003e) \u003d\u003e {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        return new GithubGraphqlIssue(value.data.repository.issue);"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e new HttpErrorResponse({ status: 304 }))"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":318,"author":{"gitId":"-"},"content":"   * Checks if the issue has been modified since the last query, and"},{"lineNumber":319,"author":{"gitId":"-"},"content":"   * updates the model to reflect the last modified time."},{"lineNumber":320,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":321,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":322,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if the issue has been modified."},{"lineNumber":323,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  toFetchIssue(id: number): Observable\u003cboolean\u003e {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":326,"author":{"gitId":"-"},"content":"      octokit.issues.get({"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        issue_number: id,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        headers: { \u0027If-Modified-Since\u0027: this.issuesLastModifiedManager.get(id) }"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":333,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch issue.\u0027))"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":342,"author":{"gitId":"-"},"content":"   * Fetches all labels in the current repository."},{"lineNumber":343,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  fetchAllLabels(): Observable\u003cArray\u003cGithubLabel\u003e\u003e {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    const githubLabels \u003d this.fetchGraphqlList\u003cFetchLabelsQuery, GithubLabel\u003e("},{"lineNumber":346,"author":{"gitId":"-"},"content":"      FetchLabels,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      { owner: ORG_NAME, name: REPO },"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      (result) \u003d\u003e result.data.repository.labels.edges,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      GithubLabel"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"    return githubLabels.pipe(catchError((err) \u003d\u003e throwError(\u0027Failed to fetch labels.\u0027)));"},{"lineNumber":353,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":356,"author":{"gitId":"-"},"content":"   * Creates a label in the current repository."},{"lineNumber":357,"author":{"gitId":"-"},"content":"   * @param formattedLabelName - name of new label."},{"lineNumber":358,"author":{"gitId":"-"},"content":"   * @param labelColor - colour of new label."},{"lineNumber":359,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  createLabel(formattedLabelName: string, labelColor: string): void {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    octokit.issues.createLabel({ owner: ORG_NAME, repo: REPO, name: formattedLabelName, color: labelColor });"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":365,"author":{"gitId":"-"},"content":"   * Updates a label\u0027s information in the current repository."},{"lineNumber":366,"author":{"gitId":"-"},"content":"   * @param labelName - name of existing label"},{"lineNumber":367,"author":{"gitId":"-"},"content":"   * @param labelColor - new color to be assigned to existing label."},{"lineNumber":368,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  updateLabel(labelName: string, labelColor: string): void {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    octokit.issues.updateLabel({ owner: ORG_NAME, repo: REPO, name: labelName, current_name: labelName, color: labelColor });"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"  closeIssue(id: number): Observable\u003cGithubIssue\u003e {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    return from(octokit.issues.update({ owner: ORG_NAME, repo: REPO, issue_number: id, state: \u0027closed\u0027 })).pipe("},{"lineNumber":375,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":380,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"  reopenIssue(id: number): Observable\u003cGithubIssue\u003e {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    return from(octokit.issues.update({ owner: ORG_NAME, repo: REPO, issue_number: id, state: \u0027open\u0027 })).pipe("},{"lineNumber":384,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":389,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, labels: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    return from(octokit.issues.create({ owner: ORG_NAME, repo: REPO, title: title, body: description, labels: labels })).pipe("},{"lineNumber":393,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"  createIssueComment(issueId: number, description: string): Observable\u003cGithubComment\u003e {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    return from(octokit.issues.createComment({ owner: ORG_NAME, repo: REPO, issue_number: issueId, body: description })).pipe("},{"lineNumber":401,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":405,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"  updateIssue(id: number, title: string, description: string, labels: string[], assignees?: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":409,"author":{"gitId":"-"},"content":"      octokit.issues.update({"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        issue_number: id,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        title: title,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        body: description,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        labels: labels,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        assignees: assignees"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":419,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        return throwError(err);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":427,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"  updateIssueComment(issueComment: IssueComment): Observable\u003cGithubComment\u003e {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":431,"author":{"gitId":"-"},"content":"      octokit.issues.updateComment({ owner: ORG_NAME, repo: REPO, comment_id: issueComment.id, body: issueComment.description })"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":433,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"  uploadFile(filename: string, base64String: string): Observable\u003cany\u003e {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":441,"author":{"gitId":"-"},"content":"      octokit.repos.createOrUpdateFile({"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":444,"author":{"gitId":"nknguyenhc"},"content":"        branch: BRANCH,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        path: `files/${filename}`,"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        message: \u0027upload file\u0027,"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        content: base64String"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"  fetchEventsForRepo(): Observable\u003cany[]\u003e {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    return from(octokit.issues.listEventsForRepo({ owner: ORG_NAME, repo: REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":454,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch events for repo.\u0027))"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":459,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"  fetchDataFile(): Observable\u003c{}\u003e {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":463,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":465,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        return { data: atob(rawData[\u0027data\u0027][\u0027content\u0027]) };"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch data file.\u0027))"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":470,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"  fetchLatestRelease(): Observable\u003cGithubRelease\u003e {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":474,"author":{"gitId":"-"},"content":"      octokit.repos.getLatestRelease({ owner: CATCHER_ORG, repo: CATCHER_REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":476,"author":{"gitId":"-"},"content":"      map((res) \u003d\u003e res[\u0027data\u0027]),"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch latest release.\u0027))"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":479,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"  private fetchSettingsFromRawUrl(): Observable\u003cSessionData\u003e {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    return from(fetch(getSettingsUrl(MOD_ORG, DATA_REPO))).pipe("},{"lineNumber":483,"author":{"gitId":"-"},"content":"      mergeMap((res) \u003d\u003e res.json()),"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch settings file.\u0027))"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":486,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":487,"author":{"gitId":"-"},"content":""},{"lineNumber":488,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   * Fetches the data file that is regulates session information."},{"lineNumber":490,"author":{"gitId":"-"},"content":"   * @return Observable\u003cSessionData\u003e representing session information."},{"lineNumber":491,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":492,"author":{"gitId":"-"},"content":"  fetchSettingsFile(): Observable\u003cSessionData\u003e {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":494,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027settings.json\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":496,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e JSON.parse(atob(rawData[\u0027data\u0027][\u0027content\u0027]))),"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        this.logger.error("},{"lineNumber":499,"author":{"gitId":"-"},"content":"          \u0027GithubService: Failed to fetch settings file via REST API. Trying to fetch using raw.githubusercontent.com: \u0027,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"          err"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        return this.fetchSettingsFromRawUrl();"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":505,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"  fetchAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    return from(octokit.users.getAuthenticated()).pipe("},{"lineNumber":509,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch authenticated user.\u0027))"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":514,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":515,"author":{"gitId":"-"},"content":""},{"lineNumber":516,"author":{"gitId":"-"},"content":"  getRepoURL(): string {"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    return ORG_NAME.concat(\u0027/\u0027).concat(REPO);"},{"lineNumber":518,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"  viewIssueInBrowser(id: number, event: Event) {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    if (id) {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"      window.open(\u0027https://github.com/\u0027.concat(this.getRepoURL()).concat(\u0027/issues/\u0027).concat(String(id)));"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(new Error(UNABLE_TO_OPEN_IN_BROWSER));"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":527,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    this.logger.info(`GithubService: Resetting issues cache`);"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    this.issuesCacheManager.clear();"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    this.issuesLastModifiedManager.clear();"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    this.issueQueryRefs.clear();"},{"lineNumber":534,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"  getProfilesData(): Promise\u003cResponse\u003e {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    return fetch(AppConfig.clientDataUrl);"},{"lineNumber":538,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":539,"author":{"gitId":"-"},"content":""},{"lineNumber":540,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   * Performs an API call to fetch a page of filtered issues with a given pageNumber."},{"lineNumber":542,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":543,"author":{"gitId":"-"},"content":"   * The request is sent with the ETag of the latest cached HTTP response."},{"lineNumber":544,"author":{"gitId":"-"},"content":"   * If page requested has the same ETag, or the request results in an error,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   * then the cached page is returned instead."},{"lineNumber":546,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   * @param pageNumber - The page to be fetched"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   * @returns An observable representing the response containing a single page of filtered issues"},{"lineNumber":550,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":551,"author":{"gitId":"-"},"content":"  private getIssuesAPICall(filter: RestGithubIssueFilter, pageNumber: number): Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    const apiCall: Promise\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e \u003d octokit.issues.listForRepo({"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      ...filter,"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      owner: ORG_NAME,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      repo: REPO,"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      sort: \u0027created\u0027,"},{"lineNumber":557,"author":{"gitId":"-"},"content":"      direction: \u0027desc\u0027,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      page: pageNumber,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      headers: { \u0027If-None-Match\u0027: this.issuesCacheManager.getEtagFor(pageNumber) }"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    const apiCall$ \u003d from(apiCall);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    return apiCall$.pipe("},{"lineNumber":564,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        return of(this.issuesCacheManager.get(pageNumber));"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":568,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   * Fetches a list of items using a GraphQL query that queries for paginated data."},{"lineNumber":572,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   * @param query - The GraphQL query that queries for paginated data."},{"lineNumber":574,"author":{"gitId":"-"},"content":"   * @param variables - Additional variables for the GraphQL query."},{"lineNumber":575,"author":{"gitId":"-"},"content":"   * @callback pluckEdges A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":576,"author":{"gitId":"-"},"content":"   * @callback Model Constructor for the item model."},{"lineNumber":577,"author":{"gitId":"-"},"content":"   * @returns A list of items from the query."},{"lineNumber":578,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":579,"author":{"gitId":"-"},"content":"  private fetchGraphqlList\u003cT, M\u003e("},{"lineNumber":580,"author":{"gitId":"-"},"content":"    query: DocumentNode,"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    variables: {},"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e,"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    Model: new (data) \u003d\u003e M"},{"lineNumber":584,"author":{"gitId":"-"},"content":"  ): Observable\u003cArray\u003cM\u003e\u003e {"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    return from(this.withPagination\u003cT\u003e(pluckEdges)(query, variables)).pipe("},{"lineNumber":586,"author":{"gitId":"-"},"content":"      map((results: Array\u003cApolloQueryResult\u003cT\u003e\u003e) \u003d\u003e {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        const issues \u003d results.reduce((accumulated, current) \u003d\u003e accumulated.concat(pluckEdges(current)), []);"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        return issues.map((issue) \u003d\u003e new Model(issue.node));"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        return new HttpErrorResponse({ status: 304 });"},{"lineNumber":592,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":594,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":597,"author":{"gitId":"-"},"content":"   * Returns an async function that will accept a GraphQL query that requests for paginated items."},{"lineNumber":598,"author":{"gitId":"-"},"content":"   * Said function will recursively query for all subsequent pages until a page that has less than 100 items is found,"},{"lineNumber":599,"author":{"gitId":"-"},"content":"   * then return all queried pages in an array."},{"lineNumber":600,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   * @callback pluckEdges - A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":602,"author":{"gitId":"-"},"content":"   * @returns an async function that accepts a GraphQL query for paginated data and any additional variables to that query"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":604,"author":{"gitId":"-"},"content":"  private withPagination\u003cT\u003e(pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e) {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    return async (query: DocumentNode, variables: { [key: string]: any } \u003d {}): Promise\u003cArray\u003cApolloQueryResult\u003cT\u003e\u003e\u003e \u003d\u003e {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"      const cursor \u003d variables.cursor || null;"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      const graphqlQuery \u003d this.apollo.watchQuery\u003cT\u003e({ query, variables: { ...variables, cursor } });"},{"lineNumber":608,"author":{"gitId":"-"},"content":"      return graphqlQuery.refetch().then(async (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e {"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        const intermediate \u003d Array.isArray(results) ? results : [results];"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        const edges \u003d pluckEdges(results);"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        const nextCursor \u003d edges.length \u003d\u003d\u003d 0 ? null : edges[edges.length - 1].cursor;"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"-"},"content":"        if (edges.length \u003c MAX_ITEMS_PER_PAGE || !nextCursor) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"          return intermediate;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        const nextResults \u003d await this.withPagination\u003cT\u003e(pluckEdges)(query, {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"          ...variables,"},{"lineNumber":618,"author":{"gitId":"-"},"content":"          cursor: nextCursor"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        return intermediate.concat(nextResults);"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":623,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":624,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":82,"-":542}},{"path":"src/app/core/services/upload.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import { catchError, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { uuid } from \u0027../../shared/lib/uuid\u0027;"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"import { ERRORCODE_NOT_FOUND } from \u0027./error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const SUPPORTED_VIDEO_FILE_TYPES \u003d [\u0027mp4\u0027, \u0027mov\u0027];"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const SUPPORTED_FILE_TYPES \u003d ["},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u0027gif\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u0027jpeg\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u0027jpg\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u0027png\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u0027docx\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u0027gz\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u0027log\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u0027pdf\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u0027pptx\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u0027txt\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u0027xlsx\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u0027zip\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  ...SUPPORTED_VIDEO_FILE_TYPES"},{"lineNumber":23,"author":{"gitId":"-"},"content":"];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export const FILE_TYPE_SUPPORT_ERROR \u003d \"We don\u0027t support that file type.\" + \u0027 Try again with \u0027 + SUPPORTED_FILE_TYPES.join(\u0027, \u0027) + \u0027.\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Returns an error message string for when file exceeds the defined size limit"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * @param fileType Canonical name for file, not to be confused with file extension"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * @param size Number of MBs"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export const getSizeExceedErrorMsg \u003d (fileType: string, size: number): string \u003d\u003e `Oops, ${fileType} is too big. Keep it under ${size}MiB.`;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"})"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Responsible for upload of media files to the current phase\u0027s repository."},{"lineNumber":38,"author":{"gitId":"-"},"content":" */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"export class UploadService {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  uploadFile(base64File: string | ArrayBuffer, userFilename: string) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    let base64String: string;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    if (base64File instanceof ArrayBuffer) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      base64String \u003d String.fromCharCode.apply(null, new Uint16Array(base64File));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      base64String \u003d base64File;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    const fileType \u003d this.getFileExtension(userFilename);"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    if (SUPPORTED_FILE_TYPES.includes(fileType.toLowerCase())) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      base64String \u003d base64String.split(\u0027,\u0027)[1];"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      const onlineFilename \u003d uuid();"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"      const attemptUploadFile \u003d () \u003d\u003e this.githubService.uploadFile(`${onlineFilename}.${fileType}`, base64String);"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"      return attemptUploadFile().pipe("},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"        catchError((err: any) \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"          if (!(err.status \u003d\u003d\u003d ERRORCODE_NOT_FOUND)) {"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"            return throwError(err);"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"          }"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"          return of(false);"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"        }),"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"        mergeMap((isBranchPresent) \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"          if (isBranchPresent) {"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"            return of(isBranchPresent);"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"          }"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":"          return this.githubService.createBranch().pipe(mergeMap(attemptUploadFile));"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"        })"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"      );"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      return throwError(FILE_TYPE_SUPPORT_ERROR);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  getFileExtension(fileName: string): string {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    return fileName.split(\u0027.\u0027).pop();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  isVideoFile(fileName): boolean {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    const fileType \u003d this.getFileExtension(fileName);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    return SUPPORTED_VIDEO_FILE_TYPES.includes(fileType.toLowerCase());"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  isSupportedFileType(fileName): boolean {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const fileType \u003d this.getFileExtension(fileName);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    return SUPPORTED_FILE_TYPES.includes(fileType.toLowerCase());"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":18,"-":69}},{"path":"src/app/core/validators/noWhitespace.validator.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"MadLamprey"},"content":"import { AbstractControl, ValidationErrors, ValidatorFn } from \u0027@angular/forms\u0027;"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":""},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"export function noWhitespace(): ValidatorFn {"},{"lineNumber":4,"author":{"gitId":"MadLamprey"},"content":"  return (title: AbstractControl): ValidationErrors | null \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":"    if (title.value \u0026\u0026 title.value.trim() \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"      return { whitespace: true };"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"    return null;"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"  };"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"}"}],"authorContributionMap":{"MadLamprey":10}},{"path":"src/app/phase-bug-reporting/new-issue/new-issue.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"mat-display-1 title\"\u003eNew Issue\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"newIssueForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewIssue(myForm)\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"form\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"column left\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        \u003cmat-form-field\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cinput id\u003d\"title\" formControlName\u003d\"title\" matInput placeholder\u003d\"Title\" required maxlength\u003d\"256\" /\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"          \u003cmat-error *ngIf\u003d\"title.errors \u0026\u0026 title.errors[\u0027required\u0027] \u0026\u0026 (title.touched || title.dirty)\"\u003e Title required. \u003c/mat-error\u003e"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":"          \u003cmat-error *ngIf\u003d\"title.errors \u0026\u0026 title.errors[\u0027whitespace\u0027]\"\u003e Title cannot contain only whitespaces. \u003c/mat-error\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          \u003cmat-error *ngIf\u003d\"title.errors \u0026\u0026 title.errors[\u0027maxlength\u0027]\"\u003e Title cannot exceed 256 characters. \u003c/mat-error\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cmat-hint *ngIf\u003d\"title.value?.length \u003e\u003d 206\"\u003e {{ 256 - title.value?.length }} characters remaining. \u003c/mat-hint\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cdiv style\u003d\"margin: 10px 0 10px 0\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003capp-comment-editor"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            [id]\u003d\"\u0027description\u0027\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"            [commentField]\u003d\"description\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"            [commentForm]\u003d\"this.newIssueForm\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"            [(isFormPending)]\u003d\"this.isFormPending\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"            [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003c/app-comment-editor\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          style\u003d\"float: right\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"          class\u003d\"submit-new-bug-report\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"!newIssueForm.valid || isFormPending\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          {{ this.submitButtonText }}"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"column right\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"severity-dropdown\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003capp-label-dropdown initialValue\u003d\"\" attributeName\u003d\"severity\" [dropdownForm]\u003d\"newIssueForm\"\u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"bug-dropdown\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003capp-label-dropdown initialValue\u003d\"\" attributeName\u003d\"type\" [dropdownForm]\u003d\"newIssueForm\"\u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"MadLamprey":1,"-":47}},{"path":"src/app/phase-bug-reporting/new-issue/new-issue.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AbstractControl, FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import { noWhitespace } from \u0027../../core/validators/noWhitespace.validator\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../../shared/view-issue/view-issue.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027app-new-issue\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./new-issue.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./new-issue.component.css\u0027]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class NewIssueComponent implements OnInit {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  newIssueForm: FormGroup;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  isFormPending \u003d false;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private router: Router"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.newIssueForm \u003d this.formBuilder.group({"},{"lineNumber":32,"author":{"gitId":"MadLamprey"},"content":"      title: [\u0027\u0027, [Validators.required, Validators.maxLength(256), noWhitespace()]],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      description: [\u0027\u0027],"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      severity: [\u0027\u0027, Validators.required],"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      type: [\u0027\u0027, Validators.required]"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SUBMIT;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  submitNewIssue(form: NgForm) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    if (this.newIssueForm.invalid) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"MadLamprey"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    this.isFormPending \u003d true;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    this.issueService"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      .createIssue(this.title.value, Issue.updateDescription(this.description.value), this.severity.value, this.type.value)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e (this.isFormPending \u003d false)))"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .subscribe("},{"lineNumber":51,"author":{"gitId":"-"},"content":"        (newIssue) \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          this.issueService.updateLocalStore(newIssue);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          this.router.navigateByUrl(`phaseBugReporting/issues/${newIssue.id}`);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          form.resetForm();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        (error) \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  canDeactivate() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    return ("},{"lineNumber":64,"author":{"gitId":"-"},"content":"      !this.isAttributeEditing(this.title) \u0026\u0026"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      !this.isAttributeEditing(this.description) \u0026\u0026"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      !this.isAttributeEditing(this.severity) \u0026\u0026"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      !this.isAttributeEditing(this.type)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  isAttributeEditing(attribute: AbstractControl) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    return attribute.value !\u003d\u003d null \u0026\u0026 attribute.value !\u003d\u003d \u0027\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  get title() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027title\u0027);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  get description() {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027description\u0027);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  get severity() {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027severity\u0027);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  get type() {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    return this.newIssueForm.get(\u0027type\u0027);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MadLamprey":3,"-":87}},{"path":"src/app/shared/comment-editor/comment-editor.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"commentForm\" style\u003d\"min-height: 350px\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-tab-group class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\" (selectedTabChange)\u003d\"commentField.setValue(commentTextArea.value)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-tab label\u003d\"Write\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cdiv"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        #dropArea"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        class\u003d\"tab-content\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"        (dragleave)\u003d\"onDragExit($event)\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"        (dragenter)\u003d\"onDragEnter($event)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"        (drop)\u003d\"onDrop($event)\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"        (dragover)\u003d\"enableFileDrop($event)\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003capp-markdown-toolbar [forTextAreaId]\u003d\"this.id\"\u003e\u003c/app-markdown-toolbar\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"outline\" style\u003d\"width: 100%\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003e\u003c/mat-label\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          \u003ctextarea"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            (paste)\u003d\"onPaste($event)\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"            (keydown)\u003d\"onKeyPress($event)\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"            (beforeinput)\u003d\"handleBeforeInputChange($event)\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"            (input)\u003d\"handleInputChange($event)\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"            #commentTextArea"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            (dragover)\u003d\"disableCaretMovement($event)\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"            id\u003d\"{{ this.id }}\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"            formControlName\u003d\"{{ this.id }}\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"            matInput"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            cdkTextareaAutosize"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            #autosize\u003d\"cdkTextareaAutosize\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"            cdkAutosizeMinRows\u003d\"10\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"            cdkAutosizeMaxRows\u003d\"20\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"            class\u003d\"text-input-area\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"            placeholder\u003d\"{{ this.placeholderText }}\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"            maxlength\u003d\"{{ this.maxLength }}\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003e\u003c/textarea\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cmat-error *ngIf\u003d\"commentField.errors \u0026\u0026 commentField.errors[\u0027required\u0027] \u0026\u0026 commentField.touched\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            Description required."},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/mat-error\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cmat-error *ngIf\u003d\"commentField.errors \u0026\u0026 commentField.errors[\u0027maxLength\u0027]\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            Description cannot exceed {{ maxLength }} characters."},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/mat-error\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cmat-hint *ngIf\u003d\"commentField.value?.length \u003e\u003d maxLength - 50\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            {{ maxLength - commentField.value?.length }} character(s) remaining."},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/mat-hint\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"drag-and-drop\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"!isInErrorState\"\u003e Attach files by dragging \u0026 dropping or select them by clicking here. \u003c/span\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"isInErrorState\" class\u003d\"error\"\u003e {{ uploadErrorMessage }} \u003c/span\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cinput"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              #fileInput"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              [disabled]\u003d\"this.commentField.disabled\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"              [accept]\u003d\"SUPPORTED_FILE_TYPES\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"              type\u003d\"file\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"              class\u003d\"file\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"              (change)\u003d\"onFileInputUpload($event, fileInput)\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"            /\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/mat-tab\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmat-tab label\u003d\"Preview\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"tab-content\" style\u003d\"min-height: 228px\"\u003e"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"        \u003cmarkdown #markdownArea *ngIf\u003d\"commentField.value !\u003d\u003d \u0027\u0027\" [data]\u003d\"sanitize(commentField.value)\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"commentField.value \u003d\u003d\u003d \u0027\u0027\"\u003eNothing to preview.\u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/mat-tab\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/mat-tab-group\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"NereusWB922":1,"-":64}},{"path":"src/app/shared/issue/description/description.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch3 class\u003d\"mat-title\"\u003e{{ descriptionTitle }}\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"issueDescriptionForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateDescription(myForm)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan\u003e \u003cstrong\u003e Tester \u003c/strong\u003e posted on {{ issue.created_at }}. \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cbutton style\u003d\"float: right\" mat-button *ngIf\u003d\"permissions.isIssueDescriptionEditable() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        Edit"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"      \u003cmarkdown [data]\u003d\"issue.description\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003capp-comment-editor"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        [id]\u003d\"\u0027description\u0027\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        [commentField]\u003d\"this.issueDescriptionForm.get(\u0027description\u0027)\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        [commentForm]\u003d\"this.issueDescriptionForm\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"        [(isFormPending)]\u003d\"this.isSavePending\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"        [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/app-comment-editor\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isSavePending\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"          (click)\u003d\"viewChanges()\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          View Updated Description"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isSavePending\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"          (click)\u003d\"openCancelDialogIfModified()\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"issueDescriptionForm.invalid || isSavePending\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action additional-editor-style\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"issueDescriptionForm.invalid || isSavePending\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003cmat-button-content\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            {{ submitButtonText }}"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003cng-container #loadingSpinnerContainer\u003e\u003c/ng-container\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003c/mat-button-content\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"NereusWB922":1,"-":69}},{"path":"src/app/shared/issue/duplicatedIssues/duplicated-issues.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cspan class\u003d\"mat-title\"\u003e Duplicated Issues \u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cmat-chip-list\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cmat-chip"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      *ngFor\u003d\"let duplicatedIssue of duplicatedIssues | async\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"      style\u003d\"cursor: pointer\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"      [matTooltip]\u003d\"duplicatedIssue.title\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"      matTooltipPosition\u003d\"above\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"      (removed)\u003d\"removeDuplicateStatus(duplicatedIssue)\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003e"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"[\u0027../\u0027 + duplicatedIssue.id]\"\u003e #{{ duplicatedIssue.id }} \u003c/a\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cmat-icon *ngIf\u003d\"permissions.isTeamResponseEditable() || permissions.isTutorResponseEditable()\" matChipRemove\u003ecancel\u003c/mat-icon\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/mat-chip\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/mat-chip-list\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"nknguyenhc":1,"-":14}},{"path":"src/app/shared/lib/marked.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { MarkedOptions, MarkedRenderer } from \u0027ngx-markdown\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export function markedOptionsFactory(): MarkedOptions {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  const renderer \u003d new MarkedRenderer();"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  const linkRenderer \u003d renderer.link;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  renderer.link \u003d (href, title, text) \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    const html \u003d linkRenderer.call(renderer, href, title, text);"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    return html.replace(/^\u003ca /, \u0027\u003ca target\u003d\"_blank\" \u0027);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  renderer.checkbox \u003d (checked) \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    return checked ? \u0027\u003ci class\u003d\"fa-solid fa-square-check\"\u003e\u003c/i\u003e \u0027 : \u0027\u003ci class\u003d\"fa-solid fa-square\"\u003e\u003c/i\u003e \u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    renderer,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    gfm: true,"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"    breaks: true,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    pedantic: false,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    smartLists: true,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    smartypants: false"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":1,"-":23}},{"path":"src/app/shared/shared.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { HttpClientModule } from \u0027@angular/common/http\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormsModule, ReactiveFormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { RouterModule } from \u0027@angular/router\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { FormDisableControlDirective } from \u0027../core/directives/form-disable-control.directive\u0027;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"import { InternalLinkDisableDirective } from \u0027../core/directives/internal-link-disable.directive\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ActionToasterModule } from \u0027./action-toasters/action-toasters.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ErrorToasterModule } from \u0027./error-toasters/error-toaster.module\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { MaterialModule } from \u0027./material.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  imports: [CommonModule, FormsModule, ReactiveFormsModule, HttpClientModule, RouterModule, MaterialModule, ErrorToasterModule],"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"  declarations: [FormDisableControlDirective, InternalLinkDisableDirective],"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":16,"author":{"gitId":"-"},"content":"    FormDisableControlDirective,"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"    InternalLinkDisableDirective,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ReactiveFormsModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    HttpClientModule,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    RouterModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    MaterialModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ErrorToasterModule,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ActionToasterModule"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":27,"author":{"gitId":"-"},"content":"})"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export class SharedModule {}"}],"authorContributionMap":{"NereusWB922":3,"-":25}},{"path":"src/app/shared/view-issue/issue-dispute/issue-dispute.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch3 class\u003d\"mat-title\"\u003eDisputes\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"tutorResponseForm\" #tutorForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitTutorResponseForm(tutorForm)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan\u003e Post your response here. \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cbutton mat-button style\u003d\"float: right\" *ngIf\u003d\"!isEditing\" (click)\u003d\"changeToEditMode()\"\u003eEdit\u003c/button\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"container\" *ngFor\u003d\"let dispute of issue.issueDisputes; index as i; trackBy: trackDisputeList\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cdiv style\u003d\"display: flex; align-items: center\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"question-mark\"\u003e?\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"          \u003cmarkdown [data]\u003d\"this.getItemTitleText(dispute.title)\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cbr /\u003e"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"        \u003cmarkdown [data]\u003d\"dispute.description\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cbr /\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cmat-checkbox"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            style\u003d\"display: inline-block; width: 20%\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"            [id]\u003d\"getTodoFormId(i)\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"            [formControlName]\u003d\"getTodoFormId(i)\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"            [disableControl]\u003d\"!isEditing\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Done"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/mat-checkbox\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cbr /\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cmarkdown data\u003d\"### Tutor\u0027s Response: \"\u003e\u003c/markdown\u003e"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"          \u003cmarkdown [data]\u003d\"dispute.tutorResponse\" *ngIf\u003d\"!isEditing\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003capp-comment-editor"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            [commentField]\u003d\"tutorResponseForm.get(getTutorResponseFormId(i))\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"            [commentForm]\u003d\"tutorResponseForm\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"            [id]\u003d\"getTutorResponseFormId(i)\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"            [(isFormPending)]\u003d\"isFormPending\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"            [(submitButtonText)]\u003d\"submitButtonText\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/app-comment-editor\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cbr /\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cmarkdown data\u003d\"-------------------\"\u003e\u003c/markdown\u003e \u003cbr /\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\" *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"          (click)\u003d\"viewInGithub()\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          View Updated Response On Github"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"tutorResponseForm.invalid || isFormPending\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"tutorResponseForm.invalid || isFormPending\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"          style\u003d\"margin-left: 10px\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"!this.isNewResponse()\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"          (click)\u003d\"cancelEditMode()\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"NereusWB922":3,"-":90}},{"path":"src/app/shared/view-issue/team-response/team-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch3 class\u003d\"mat-title\"\u003eTeam\u0027s Response\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"responseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateResponse(myForm)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan\u003e \u003cstrong\u003e Team \u003c/strong\u003e responded. \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cbutton style\u003d\"float: right\" mat-button *ngIf\u003d\"canEditIssue() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003eEdit\u003c/button\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"      \u003cmarkdown [data]\u003d\"issue.teamResponse\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003capp-comment-editor"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        [id]\u003d\"\u0027description\u0027\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"        [commentField]\u003d\"this.responseForm.get(\u0027description\u0027)\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"        [commentForm]\u003d\"this.responseForm\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        [(isFormPending)]\u003d\"this.isSavePending\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/app-comment-editor\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isSavePending\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"          (click)\u003d\"viewChanges()\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          View Updated Response"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"responseForm.invalid || isSavePending\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"responseForm.invalid || isSavePending\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isSavePending\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"          (click)\u003d\"openCancelDialogIfModified()\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"NereusWB922":1,"-":64}},{"path":"src/app/shared/view-issue/tester-response/conflict-dialog/conflict-dialog.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"display: flex; margin-bottom: 20px; align-items: center\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch1 mat-dialog-title style\u003d\"margin: 0\"\u003e{{ \u0027The content you are editing has changed\u0027 }}\u003c/h1\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cmat-slide-toggle style\u003d\"display: inline-block; margin-left: 50px\" color\u003d\"primary\" [checked]\u003d\"showDiff\" (change)\u003d\"handleChangeShowDiff()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    Show Difference"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/mat-slide-toggle\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cbutton mat-icon-button color\u003d\"default\" style\u003d\"margin: 0 0 0 auto\" (click)\u003d\"close()\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eclose\u003c/mat-icon\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv mat-dialog-content\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cmat-accordion [multi]\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmat-expansion-panel class\u003d\"full-width\" *ngFor\u003d\"let conflict of conflicts; index as i\" [expanded]\u003d\"panelOpenStates[i]\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cmat-expansion-panel-header\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cmat-panel-title class\u003d\"response-title\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"question-mark\"\u003e?\u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"          \u003cmarkdown [data]\u003d\"data.updatedResponses[i].getTitleInMarkDown()\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/mat-panel-title\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cmat-panel-description\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003cmat-chip-list\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cmat-chip *ngIf\u003d\"data.outdatedResponses[i].compareTo(data.updatedResponses[i]) \u003d\u003d\u003d 0\" style\u003d\"margin-top: 10px\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              No Changes"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/mat-chip\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003c/mat-chip-list\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/mat-panel-description\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/mat-expansion-panel-header\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cbr /\u003e"},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"      \u003cmarkdown [data]\u003d\"data.updatedResponses[i].description\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cbr /\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cdiv"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"data.updatedResponses[i].isDisagree() \u003d\u003d\u003d data.outdatedResponses[i].isDisagree() || !showDiff\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        style\u003d\"margin-bottom: 10px\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cmat-checkbox style\u003d\"display: inline-block; width: 20%\" [disabled]\u003d\"true\" [checked]\u003d\"data.updatedResponses[i].isDisagree()\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          I disagree"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/mat-checkbox\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"!data.outdatedResponses[i].isDisagree() \u0026\u0026 data.updatedResponses[i].isDisagree() \u0026\u0026 showDiff\" class\u003d\"checkbox-changes\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003ci style\u003d\"color: green\" class\u003d\"material-icons-outlined\"\u003eadd_box\u003c/i\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cins style\u003d\"background: #d4fcbc; text-decoration: none\"\u003e I disagree \u003c/ins\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"data.outdatedResponses[i].isDisagree() \u0026\u0026 !data.updatedResponses[i].isDisagree() \u0026\u0026 showDiff\" class\u003d\"checkbox-changes\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003ci style\u003d\"color: red\" class\u003d\"material-icons-outlined\"\u003eindeterminate_check_box\u003c/i\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cdel style\u003d\"background: #fbb\"\u003eI disagree\u003c/del\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003cmat-tab-group style\u003d\"margin-bottom: 20px\" class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cmat-tab label\u003d\"Markdown Text\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"tab-content\" *ngIf\u003d\"isReady\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"showDiff\" [innerHTML]\u003d\"diffHtmls[i]\"\u003e\u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"!showDiff\" [innerHTML]\u003d\"updatedHtmls[i]\"\u003e\u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/mat-tab\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cmat-tab label\u003d\"Preview Updated Content\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"tab-content\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cmarkdown\u003e{{ conflict.updatedContent }}\u003c/markdown\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/mat-tab\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/mat-tab-group\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/mat-expansion-panel\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/mat-accordion\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"NereusWB922":2,"-":60}},{"path":"src/app/shared/view-issue/tester-response/tester-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch3 class\u003d\"mat-title\"\u003eTester\u0027s Response\u003c/h3\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"testerResponseForm\" (ngSubmit)\u003d\"submitTesterResponseForm()\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"this.isNewResponse()\"\u003e Please verify the following item(s). \u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"!this.isNewResponse()\"\u003e \u003cstrong\u003eTester\u003c/strong\u003e responded. \u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003cbutton mat-button style\u003d\"float: right\" *ngIf\u003d\"!isEditing\" (click)\u003d\"changeToEditMode()\"\u003eEdit\u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"container\" *ngFor\u003d\"let response of issue.testerResponses; index as i; trackBy: trackDisagreeList\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cdiv style\u003d\"display: flex; align-items: center\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"question-mark\"\u003e?\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"          \u003cmarkdown [data]\u003d\"response.getTitleInMarkDown()\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cbr /\u003e"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"        \u003cmarkdown [data]\u003d\"response.description\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cbr /\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cmat-radio-group"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            style\u003d\"display: inline-block; width: 20%\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"            aria-label\u003d\"Select Agree or Disagree to Team\u0027s Response\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"            [disableControl]\u003d\"!isEditing\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"            [id]\u003d\"getDisagreeRadioFormId(i)\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"            [formControlName]\u003d\"getDisagreeRadioFormId(i)\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"            (change)\u003d\"handleChangeOfDisagreeRadioButton($event, i)\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cmat-radio-button [value]\u003d\"false\"\u003e I Agree \u003c/mat-radio-button\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cmat-radio-button [value]\u003d\"true\"\u003e I Disagree \u003c/mat-radio-button\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/mat-radio-group\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"testerResponseForm.get(getDisagreeRadioFormId(i)).value\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cp style\u003d\"font-weight: 500\"\u003eReason for Disagreement:\u003c/p\u003e"},{"lineNumber":34,"author":{"gitId":"NereusWB922"},"content":"            \u003cmarkdown [data]\u003d\"response.reasonForDisagreement\" *ngIf\u003d\"!isEditing\" disableInternalLink\u003e\u003c/markdown\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cdiv *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003capp-comment-editor"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              [commentField]\u003d\"testerResponseForm.get(getTesterResponseFormId(i))\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"              [id]\u003d\"getTesterResponseFormId(i)\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"              [commentForm]\u003d\"testerResponseForm\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"              [(isFormPending)]\u003d\"isFormPending\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"              [(submitButtonText)]\u003d\"submitButtonText\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/app-comment-editor\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cbr /\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cmarkdown data\u003d\"-------------------\"\u003e\u003c/markdown\u003e \u003cbr /\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\" *ngIf\u003d\"isEditing\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"          (click)\u003d\"viewChanges()\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          View Updated Response"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cbutton type\u003d\"submit\" [disabled]\u003d\"testerResponseForm.invalid || isFormPending\" mat-stroked-button color\u003d\"primary\" *ngIf\u003d\"!conflict\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"testerResponseForm.invalid || isFormPending\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"!this.isNewResponse()\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"          (click)\u003d\"openCancelDialogIfModified()\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"NereusWB922":3,"-":87}}]

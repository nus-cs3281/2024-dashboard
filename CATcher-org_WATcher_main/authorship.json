[{"path":"src/app/activity-dashboard/activity-dashboard.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":".event-tables-wrapper {"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"  display: flex;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"  overflow-x: auto;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"}"}],"authorContributionMap":{"NereusWB922":4}},{"path":"src/app/activity-dashboard/activity-dashboard.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-list cols\u003d\"4\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"grid-flush-left\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003eActivity\u003c/h1\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cmat-form-field appearance\u003d\"fill\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cmat-label\u003eStart Date\u003c/mat-label\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cinput matInput [min]\u003d\"startMinDate\" [max]\u003d\"startMaxDate\" [matDatepicker]\u003d\"startPicker\" (dateChange)\u003d\"pickStartDate($event)\" /\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cmat-hint\u003eMM/DD/YYYY\u003c/mat-hint\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cmat-datepicker-toggle matSuffix [for]\u003d\"startPicker\"\u003e\u003c/mat-datepicker-toggle\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cmat-datepicker startView\u003d\"year\" #startPicker\u003e\u003c/mat-datepicker\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cmat-form-field appearance\u003d\"fill\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cmat-label\u003eEnd Date\u003c/mat-label\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cinput matInput [min]\u003d\"endMinDate\" [max]\u003d\"endMaxDate\" [matDatepicker]\u003d\"endPicker\" (dateChange)\u003d\"pickEndDate($event)\" /\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cmat-hint\u003eMM/DD/YYYY\u003c/mat-hint\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cmat-datepicker-toggle matSuffix [for]\u003d\"endPicker\"\u003e\u003c/mat-datepicker-toggle\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cmat-datepicker startView\u003d\"year\" #endPicker\u003e\u003c/mat-datepicker\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"\u003cdiv class\u003d\"event-tables-wrapper\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003capp-event-tables"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    *ngFor\u003d\"let assignee of assignees\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    class\u003d\"issue-table\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    [actor]\u003d\"assignee\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    [columnsToDisplay]\u003d\"this.displayedColumns\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    [expandedColumnsToDisplay]\u003d\"this.expandedColumns\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    [actions]\u003d\"this.actionButtons\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003e\u003c/app-event-tables\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"NereusWB922":1,"-":39}},{"path":"src/app/activity-dashboard/activity-dashboard.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, QueryList, ViewChildren } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatDatepickerInputEvent } from \u0027@angular/material/datepicker\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../core/services/github.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../core/services/githubevent.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { EXPANDED_TABLE_COLUMNS, TABLE_COLUMNS } from \u0027./event-tables/event-tables-columns\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ACTION_BUTTONS, EventTablesComponent } from \u0027./event-tables/event-tables.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-activity-dashboard\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./activity-dashboard.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./activity-dashboard.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class ActivityDashboardComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  readonly displayedColumns \u003d [TABLE_COLUMNS.DATE_START, TABLE_COLUMNS.ISSUE_COUNT, TABLE_COLUMNS.PR_COUNT, TABLE_COLUMNS.COMMENT_COUNT];"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"  readonly expandedColumns \u003d [EXPANDED_TABLE_COLUMNS.TITLE, EXPANDED_TABLE_COLUMNS.DATE];"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB];"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  startMinDate: Date;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  startMaxDate \u003d moment().endOf(\u0027day\u0027).toDate();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  endMinDate: Date;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  endMaxDate \u003d moment().endOf(\u0027day\u0027).toDate();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  assignees: GithubUser[];"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  @ViewChildren(EventTablesComponent) tables: QueryList\u003cEventTablesComponent\u003e;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService, private githubEventService: GithubEventService) {}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.githubEventService.getEvents();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.githubService.getUsersAssignable().subscribe((x) \u003d\u003e (this.assignees \u003d x));"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  pickStartDate(event: MatDatepickerInputEvent\u003cDate\u003e) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    this.endMinDate \u003d event.value;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.tables.forEach((t) \u003d\u003e (t.githubEvents.start \u003d `${event.value}`));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  pickEndDate(event: MatDatepickerInputEvent\u003cDate\u003e) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    this.startMaxDate \u003d event.value;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.tables.forEach((t) \u003d\u003e (t.githubEvents.end \u003d `${event.value}`));"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NereusWB922":1,"-":44}},{"path":"src/app/activity-dashboard/activity-dashboard.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ActivityDashboardRoutingModule } from \u0027./activity-dashboard-routing.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ActivityDashboardComponent } from \u0027./activity-dashboard.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { EventTablesModule } from \u0027./event-tables/event-tables.module\u0027;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"import { EventWeekDetailsComponent } from \u0027./event-week-details/event-week-details.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"  declarations: [ActivityDashboardComponent, EventWeekDetailsComponent],"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  imports: [CommonModule, SharedModule, ActivityDashboardRoutingModule, EventTablesModule]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class ActivityDashboardModule {}"}],"authorContributionMap":{"NereusWB922":2,"-":11}},{"path":"src/app/activity-dashboard/event-tables/event-tables.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".table-container {"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"  margin: 10px;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"  min-width: 400px;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":".actor-card {"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"  display: flex;"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"  align-items: center;"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"  padding: 10px;"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"  margin-bottom: 1px;"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":".actor-username {"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"  flex-grow: 1;"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  font-size: 15px;"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"  margin: 0;"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"  text-align: center;"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"  word-break: break-word;"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":21,"author":{"gitId":"NereusWB922"},"content":".avatar-container {"},{"lineNumber":22,"author":{"gitId":"NereusWB922"},"content":"  margin-right: 10px;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":".mat-table {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  /* flex-wrap: wrap; */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":".mat-cell {"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"  display: flex;"},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"  align-items: center;"},{"lineNumber":33,"author":{"gitId":"NereusWB922"},"content":"  justify-content: center;"},{"lineNumber":34,"author":{"gitId":"NereusWB922"},"content":"  text-align: center;"},{"lineNumber":35,"author":{"gitId":"NereusWB922"},"content":"  padding: 0;"},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":37,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":38,"author":{"gitId":"NereusWB922"},"content":".mat-header-cell {"},{"lineNumber":39,"author":{"gitId":"NereusWB922"},"content":"  display: flex;"},{"lineNumber":40,"author":{"gitId":"NereusWB922"},"content":"  align-items: center;"},{"lineNumber":41,"author":{"gitId":"NereusWB922"},"content":"  justify-content: center;"},{"lineNumber":42,"author":{"gitId":"NereusWB922"},"content":"  text-align: center;"},{"lineNumber":43,"author":{"gitId":"NereusWB922"},"content":"  padding: 0;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":".mat-header-row {"},{"lineNumber":47,"author":{"gitId":"NereusWB922"},"content":"  white-space: nowrap;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"NereusWB922"},"content":".example-element-row:hover {"},{"lineNumber":51,"author":{"gitId":"NereusWB922"},"content":"  border: 3px solid rgba(0, 0, 0, 0.514);"},{"lineNumber":52,"author":{"gitId":"NereusWB922"},"content":"  border-radius: 3px;"},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"  color: #210749;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":".example-element-row td {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  border-bottom-width: 0;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":".example-element-detail {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  overflow: hidden;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"/* Colour cells */"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":".white {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  background-color: white;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":".pale-green {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  background-color: palegreen;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":".green {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  background-color: green;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"},{"lineNumber":79,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":80,"author":{"gitId":"NereusWB922"},"content":".scrollable-container {"},{"lineNumber":81,"author":{"gitId":"NereusWB922"},"content":"  height: 53vh;"},{"lineNumber":82,"author":{"gitId":"NereusWB922"},"content":"  overflow: auto;"},{"lineNumber":83,"author":{"gitId":"NereusWB922"},"content":"  margin-bottom: 2px;"},{"lineNumber":84,"author":{"gitId":"NereusWB922"},"content":"  scrollbar-width: none;"},{"lineNumber":85,"author":{"gitId":"NereusWB922"},"content":"  position: relative;"},{"lineNumber":86,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":87,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":88,"author":{"gitId":"NereusWB922"},"content":".scrollable-container::-webkit-scrollbar {"},{"lineNumber":89,"author":{"gitId":"NereusWB922"},"content":"  display: none;"},{"lineNumber":90,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":91,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":92,"author":{"gitId":"NereusWB922"},"content":"/* Ref: https://css-scroll-shadows.vercel.app */"},{"lineNumber":93,"author":{"gitId":"NereusWB922"},"content":".scrollable-container::before {"},{"lineNumber":94,"author":{"gitId":"NereusWB922"},"content":"  pointer-events: none;"},{"lineNumber":95,"author":{"gitId":"NereusWB922"},"content":"  content: \u0027\u0027;"},{"lineNumber":96,"author":{"gitId":"NereusWB922"},"content":"  position: absolute;"},{"lineNumber":97,"author":{"gitId":"NereusWB922"},"content":"  z-index: 2;"},{"lineNumber":98,"author":{"gitId":"NereusWB922"},"content":"  height: 6px;"},{"lineNumber":99,"author":{"gitId":"NereusWB922"},"content":"  width: 100%;"},{"lineNumber":100,"author":{"gitId":"NereusWB922"},"content":"  display: block;"},{"lineNumber":101,"author":{"gitId":"NereusWB922"},"content":"  background-image: linear-gradient(to bottom, white 66%, transparent);"},{"lineNumber":102,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":103,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":104,"author":{"gitId":"NereusWB922"},"content":".scrollable-container::after {"},{"lineNumber":105,"author":{"gitId":"NereusWB922"},"content":"  pointer-events: none;"},{"lineNumber":106,"author":{"gitId":"NereusWB922"},"content":"  content: \u0027\u0027;"},{"lineNumber":107,"author":{"gitId":"NereusWB922"},"content":"  position: sticky;"},{"lineNumber":108,"author":{"gitId":"NereusWB922"},"content":"  z-index: 2;"},{"lineNumber":109,"author":{"gitId":"NereusWB922"},"content":"  top: 100%;"},{"lineNumber":110,"author":{"gitId":"NereusWB922"},"content":"  height: 6px;"},{"lineNumber":111,"author":{"gitId":"NereusWB922"},"content":"  width: 100%;"},{"lineNumber":112,"author":{"gitId":"NereusWB922"},"content":"  display: block;"},{"lineNumber":113,"author":{"gitId":"NereusWB922"},"content":"  background-image: linear-gradient(to top, white 66%, transparent);"},{"lineNumber":114,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":115,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":116,"author":{"gitId":"NereusWB922"},"content":".scrollable-container-wrapper {"},{"lineNumber":117,"author":{"gitId":"NereusWB922"},"content":"  position: relative;"},{"lineNumber":118,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":119,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":120,"author":{"gitId":"NereusWB922"},"content":".scrollable-container-wrapper::before {"},{"lineNumber":121,"author":{"gitId":"NereusWB922"},"content":"  pointer-events: none;"},{"lineNumber":122,"author":{"gitId":"NereusWB922"},"content":"  content: \u0027\u0027;"},{"lineNumber":123,"author":{"gitId":"NereusWB922"},"content":"  position: absolute;"},{"lineNumber":124,"author":{"gitId":"NereusWB922"},"content":"  z-index: 1;"},{"lineNumber":125,"author":{"gitId":"NereusWB922"},"content":"  top: 0;"},{"lineNumber":126,"author":{"gitId":"NereusWB922"},"content":"  left: 0;"},{"lineNumber":127,"author":{"gitId":"NereusWB922"},"content":"  right: 0;"},{"lineNumber":128,"author":{"gitId":"NereusWB922"},"content":"  height: 5px;"},{"lineNumber":129,"author":{"gitId":"NereusWB922"},"content":"  background-image: radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, 0.5), transparent);"},{"lineNumber":130,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":131,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":132,"author":{"gitId":"NereusWB922"},"content":".scrollable-container-wrapper::after {"},{"lineNumber":133,"author":{"gitId":"NereusWB922"},"content":"  pointer-events: none;"},{"lineNumber":134,"author":{"gitId":"NereusWB922"},"content":"  content: \u0027\u0027;"},{"lineNumber":135,"author":{"gitId":"NereusWB922"},"content":"  position: absolute;"},{"lineNumber":136,"author":{"gitId":"NereusWB922"},"content":"  z-index: 1;"},{"lineNumber":137,"author":{"gitId":"NereusWB922"},"content":"  bottom: 0;"},{"lineNumber":138,"author":{"gitId":"NereusWB922"},"content":"  left: 0;"},{"lineNumber":139,"author":{"gitId":"NereusWB922"},"content":"  right: 0;"},{"lineNumber":140,"author":{"gitId":"NereusWB922"},"content":"  height: 5px;"},{"lineNumber":141,"author":{"gitId":"NereusWB922"},"content":"  background-image: radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, 0.5), transparent);"},{"lineNumber":142,"author":{"gitId":"NereusWB922"},"content":"}"}],"authorContributionMap":{"NereusWB922":105,"-":37}},{"path":"src/app/activity-dashboard/event-tables/event-tables.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"table-container\"\u003e"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"  \u003cmat-card class\u003d\"actor-card\"\u003e"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"    \u003cdiv"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"      mat-card-avatar"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"      *ngIf\u003d\"this.actor\""},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"      class\u003d\"avatar-container\""},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"      [ngStyle]\u003d\"{"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"        background: \u0027url(\u0027 + this.actor.avatar_url + \u0027)\u0027,"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"        \u0027background-size\u0027: \u002740px\u0027"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"      }\""},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"    \u003e\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"    \u003cmat-card-title class\u003d\"actor-username\"\u003e"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"      {{ this.actor !\u003d\u003d undefined ? this.actor.login : \u0027Unknown\u0027 }}"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"    \u003c/mat-card-title\u003e"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  \u003c/mat-card\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"  \u003cdiv class\u003d\"scrollable-container-wrapper\"\u003e"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"    \u003cdiv class\u003d\"scrollable-container\"\u003e"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"      \u003cmat-table [dataSource]\u003d\"this.githubEvents\" matSort multiTemplateDataRows\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cng-container matColumnDef\u003d\"date_start\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Date \u003c/mat-header-cell\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cmat-cell *matCellDef\u003d\"let element\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"              {{ element.date_start }}"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/mat-cell\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cng-container matColumnDef\u003d\"issue_count\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Issue # \u003c/mat-header-cell\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cmat-cell *matCellDef\u003d\"let element\" [ngClass]\u003d\"colorCell(element.issue_count)\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              {{ element.issue_count }}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/mat-cell\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cng-container matColumnDef\u003d\"pr_count\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e PR # \u003c/mat-header-cell\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cmat-cell *matCellDef\u003d\"let element\" [ngClass]\u003d\"colorCell(element.pr_count)\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              {{ element.pr_count }}"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/mat-cell\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cng-container matColumnDef\u003d\"comment_count\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Comment # \u003c/mat-header-cell\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cmat-cell *matCellDef\u003d\"let element\" [ngClass]\u003d\"colorCell(element.comment_count)\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              {{ element.comment_count }}"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/mat-cell\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"NereusWB922"},"content":"        \u003cmat-header-row *matHeaderRowDef\u003d\"this.columnsToDisplay\"\u003e\u003c/mat-header-row\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cmat-row"},{"lineNumber":58,"author":{"gitId":"NereusWB922"},"content":"          *matRowDef\u003d\"let eventWeek; columns: this.columnsToDisplay\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"          class\u003d\"example-element-row\""},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"          (click)\u003d\"openDialog(eventWeek)\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003e\u003c/mat-row\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/mat-table\u003e"},{"lineNumber":63,"author":{"gitId":"NereusWB922"},"content":"    \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"  \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003cmat-card *ngIf\u003d\"this.githubEvents.isLoading$ | async\" style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/mat-card\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"NereusWB922":22,"-":48}},{"path":"src/app/activity-dashboard/event-tables/event-tables.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { animate, state, style, transition, trigger } from \u0027@angular/animations\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { MatDialog } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"import { EventWeekDetailsComponent } from \u0027../event-week-details/event-week-details.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { EventWeek } from \u0027../event-week.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { GithubEventDataTable } from \u0027./GithubEventDataTable\u0027;"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"import { NoEventsError } from \u0027./no-events-error.model\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"export enum ACTION_BUTTONS {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  VIEW_IN_WEB,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  COLLAPSE"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  selector: \u0027app-event-tables\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./event-tables.component.html\u0027,"},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"  styleUrls: [\u0027./event-tables.component.css\u0027]"},{"lineNumber":24,"author":{"gitId":"-"},"content":"})"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Angular Table Expandable Rows"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * ref: https://material.angular.io/components/table/examples#table-expandable-rows"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class EventTablesComponent implements OnInit, AfterViewInit {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @Input() columnsToDisplay: string[];"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  @Input() expandedColumnsToDisplay: string[];"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  @Input() actions: ACTION_BUTTONS[];"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  @Input() actor?: GithubUser \u003d undefined;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @Input() filters?: any \u003d undefined;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @ViewChild(MatSort, { static: true }) sort: MatSort;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  githubEvents: GithubEventDataTable;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  public readonly action_buttons \u003d ACTION_BUTTONS;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"NereusWB922"},"content":"  constructor("},{"lineNumber":45,"author":{"gitId":"NereusWB922"},"content":"    public githubEventService: GithubEventService,"},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":"    public dialog: MatDialog,"},{"lineNumber":47,"author":{"gitId":"NereusWB922"},"content":"    private logger: LoggingService,"},{"lineNumber":48,"author":{"gitId":"NereusWB922"},"content":"    private errorHandling: ErrorHandlingService"},{"lineNumber":49,"author":{"gitId":"NereusWB922"},"content":"  ) {}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.githubEvents \u003d new GithubEventDataTable(this.githubEventService, this.logger, this.sort, this.paginator, this.actor, this.filters);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      this.githubEvents.loadEvents();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  reload() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.githubEvents.loadEvents();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * Formats the title text to account for those that contain long words."},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * @param title - Title of Event that is to be displayed in the Table Row."},{"lineNumber":68,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  fitTitleText(title: string): string {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":71,"author":{"gitId":"-"},"content":"    const MAX_WORD_LENGTH \u003d 43;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const SPLITTER_TEXT \u003d \u0027 \u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    return title"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .split(SPLITTER_TEXT)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      .map((word) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (word.length \u003e MAX_WORD_LENGTH) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return word;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .join(SPLITTER_TEXT);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /** Not implemented yet. */"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  viewEventInBrowser(id: number, event: Event) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.logger.info(`EventTablesComponent: Opening Event ${id} on Github`);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    // window.open(\u0027https://github.com/\u0027, \u0027_blank\u0027);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"NereusWB922"},"content":"  /** Opens dialog to show the event details of the selected week. */"},{"lineNumber":93,"author":{"gitId":"NereusWB922"},"content":"  openDialog(eventWeek: EventWeek) {"},{"lineNumber":94,"author":{"gitId":"NereusWB922"},"content":"    if (eventWeek.events.length \u003c\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"NereusWB922"},"content":"      this.errorHandling.handleError(new NoEventsError());"},{"lineNumber":96,"author":{"gitId":"NereusWB922"},"content":"      return;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"NereusWB922"},"content":"    this.dialog.open(EventWeekDetailsComponent, {"},{"lineNumber":99,"author":{"gitId":"NereusWB922"},"content":"      data: {"},{"lineNumber":100,"author":{"gitId":"NereusWB922"},"content":"        eventWeek,"},{"lineNumber":101,"author":{"gitId":"NereusWB922"},"content":"        expandedColumnsToDisplay: this.expandedColumnsToDisplay"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":103,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  /** Returns color string of cell. Shade darkens with magnitude of number. */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  colorCell(count: number) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    if (count \u003d\u003d\u003d 0) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      return \u0027white\u0027;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    } else if (count \u003e 0 \u0026\u0026 count \u003c\u003d 5) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      return \u0027pale-green\u0027;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    } else if (count \u003e 6) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      return \u0027green\u0027;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NereusWB922":21,"-":95}},{"path":"src/app/activity-dashboard/event-tables/no-events-error.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"export class NoEventsError extends Error {"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"  constructor() {"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"    super(\u0027No events found for this week.\u0027);"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"    Object.setPrototypeOf(this, NoEventsError.prototype);"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"  }"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"}"}],"authorContributionMap":{"NereusWB922":6}},{"path":"src/app/activity-dashboard/event-week-details/event-week-details.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":".mat-cell {"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"  white-space: nowrap;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"  display: flex;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"  align-items: center;"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"  justify-content: center;"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"  text-align: center;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"  padding: 0;"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":".mat-header-cell {"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"  display: flex;"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"  align-items: center;"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"  justify-content: center;"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"  text-align: center;"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  padding: 0;"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":".mat-dialog-content {"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"  min-width: 500px;"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":"}"}],"authorContributionMap":{"NereusWB922":20}},{"path":"src/app/activity-dashboard/event-week-details/event-week-details.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"\u003ch2 mat-dialog-title\u003eEvent Week Details\u003c/h2\u003e"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"\u003cmat-dialog-content class\u003d\"mat-typography\"\u003e"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"  \u003cmat-table [dataSource]\u003d\"data.eventWeek.events\"\u003e"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"    \u003cng-container matColumnDef\u003d\"{{ expandableColumn }}\" *ngFor\u003d\"let expandableColumn of data.expandedColumnsToDisplay\"\u003e"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"      \u003cmat-header-cell *matHeaderCellDef\u003e{{ expandableColumn }}\u003c/mat-header-cell\u003e"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"      \u003cmat-cell *matCellDef\u003d\"let property\"\u003e"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"        {{ property[expandableColumn] }}"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"      \u003c/mat-cell\u003e"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"    \u003c/ng-container\u003e"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"    \u003cmat-header-row *matHeaderRowDef\u003d\"data.expandedColumnsToDisplay\"\u003e\u003c/mat-header-row\u003e"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"    \u003cmat-row *matRowDef\u003d\"let property; columns: data.expandedColumnsToDisplay\"\u003e\u003c/mat-row\u003e"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"  \u003c/mat-table\u003e"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"\u003c/mat-dialog-content\u003e"}],"authorContributionMap":{"NereusWB922":13}},{"path":"src/app/activity-dashboard/event-week-details/event-week-details.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"import { MAT_DIALOG_DATA } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { EventWeek } from \u0027../event-week.model\u0027;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"export interface DialogData {"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"  eventWeek: EventWeek;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"  expandedColumnsToDisplay: string[];"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"}"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"  selector: \u0027app-event-week-detail\u0027,"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"  templateUrl: \u0027./event-week-details.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"  styleUrls: [\u0027./event-week-details.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"})"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"export class EventWeekDetailsComponent {"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"}"}],"authorContributionMap":{"NereusWB922":17}},{"path":"src/app/app-routing.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivityDashboardModule } from \u0027./activity-dashboard/activity-dashboard.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthModule } from \u0027./auth/auth.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AuthGuard } from \u0027./core/guards/auth.guard\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ParseUrlParamsGuard } from \u0027./core/guards/parse-url-params.guard\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssuesViewerModule } from \u0027./issues-viewer/issues-viewer.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":10,"author":{"gitId":"-"},"content":"  { path: \u0027\u0027, loadChildren: () \u003d\u003e AuthModule },"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  { path: \u0027issuesViewer/:org/:repo\u0027, canActivate: [ParseUrlParamsGuard], children: [] },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  { path: \u0027issuesViewer\u0027, loadChildren: () \u003d\u003e IssuesViewerModule, canLoad: [AuthGuard] },"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  { path: \u0027activityDashboard\u0027, loadChildren: () \u003d\u003e ActivityDashboardModule, canLoad: [AuthGuard] }"},{"lineNumber":14,"author":{"gitId":"-"},"content":"];"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":17,"author":{"gitId":"MadLamprey"},"content":"  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \u0027legacy\u0027 })],"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  exports: [RouterModule]"},{"lineNumber":19,"author":{"gitId":"-"},"content":"})"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class AppRoutingModule {}"}],"authorContributionMap":{"MadLamprey":1,"-":19}},{"path":"src/app/app.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientModule } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ErrorHandler, NgModule, NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BrowserModule, Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":6,"author":{"gitId":"MadLamprey"},"content":"import { ApolloLink, InMemoryCache, PossibleTypesMap } from \u0027@apollo/client/core\u0027;"},{"lineNumber":7,"author":{"gitId":"MadLamprey"},"content":"import { setContext } from \u0027@apollo/client/link/context\u0027;"},{"lineNumber":8,"author":{"gitId":"MadLamprey"},"content":"import { Apollo } from \u0027apollo-angular\u0027;"},{"lineNumber":9,"author":{"gitId":"MadLamprey"},"content":"import { HttpLink } from \u0027apollo-angular/http\u0027;"},{"lineNumber":10,"author":{"gitId":"MadLamprey"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import \u0027reflect-metadata\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import graphqlTypes from \u0027../../graphql/graphql-types\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import \u0027../polyfills\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { ActivityDashboardModule } from \u0027./activity-dashboard/activity-dashboard.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { AppRoutingModule } from \u0027./app-routing.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { AppComponent } from \u0027./app.component\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { AuthModule } from \u0027./auth/auth.module\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { UserConfirmationComponent } from \u0027./core/guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027./core/services/auth.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027./core/services/error-handling.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { ErrorMessageService } from \u0027./core/services/error-message.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { AuthServiceFactory } from \u0027./core/services/factories/factory.auth.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { GithubServiceFactory } from \u0027./core/services/factories/factory.github.service\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { IssueServiceFactory } from \u0027./core/services/factories/factory.issue.service\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./core/services/github.service\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./core/services/githubevent.service\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./core/services/issue.service\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027./core/services/label.service\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./core/services/logging.service\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./core/services/phase.service\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { RepoSessionStorageService } from \u0027./core/services/repo-session-storage.service\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./core/services/user.service\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { IssuesViewerModule } from \u0027./issues-viewer/issues-viewer.module\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { LabelDefinitionPopupComponent } from \u0027./shared/label-definition-popup/label-definition-popup.component\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { HeaderComponent } from \u0027./shared/layout\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import { RepoChangeFormComponent } from \u0027./shared/repo-change-form/repo-change-form.component\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027./shared/shared.module\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"  declarations: [AppComponent, HeaderComponent, UserConfirmationComponent, LabelDefinitionPopupComponent, RepoChangeFormComponent],"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BrowserModule,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BrowserAnimationsModule,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    AuthModule,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    IssuesViewerModule,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ActivityDashboardModule,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    HttpClientModule,"},{"lineNumber":49,"author":{"gitId":"MadLamprey"},"content":"    AppRoutingModule"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  providers: ["},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      provide: GithubService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      useFactory: GithubServiceFactory,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      deps: [ErrorHandlingService, Apollo, LoggingService]"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      provide: AuthService,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      useFactory: AuthServiceFactory,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      deps: ["},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Router,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NgZone,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GithubService,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserService,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        IssueService,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        LabelService,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        PhaseService,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        GithubEventService,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Title,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ErrorHandlingService,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        LoggingService"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      ]"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      provide: IssueService,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      useFactory: IssueServiceFactory,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      deps: [GithubService, UserService, PhaseService]"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      provide: ErrorHandler,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      useClass: ErrorHandlingService"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ErrorMessageService,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    RepoSessionStorageService"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  bootstrap: [AppComponent]"},{"lineNumber":87,"author":{"gitId":"-"},"content":"})"},{"lineNumber":88,"author":{"gitId":"-"},"content":"export class AppModule {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  constructor(private apollo: Apollo, private httpLink: HttpLink, private authService: AuthService, private logger: LoggingService) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const URI \u003d \u0027https://api.github.com/graphql\u0027;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    const log \u003d new ApolloLink((operation, forward) \u003d\u003e {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      operation.setContext({ start: performance.now() });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      this.logger.info(\u0027AppModule: GraphQL request\u0027, operation.getContext());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      return forward(operation).map((result) \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        const time \u003d performance.now() - operation.getContext().start;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.logger.info(\u0027AppModule: GraphQL response\u0027, operation.getContext(), `in ${Math.round(time)}ms`);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        const repo \u003d operation.getContext().response.body.data.repository;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        const item \u003d Object.keys(repo)[0];"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.logger.debug(\u0027AppModule: GraphQL response body\u0027, item, repo[item].edges.length, repo[item].edges);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    const basic \u003d setContext(() \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      return { headers: { Accept: \u0027charset\u003dutf-8\u0027 } };"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    const auth \u003d setContext(() \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      return { headers: { Authorization: `Token ${this.authService.accessToken.getValue()}` } };"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    const link \u003d ApolloLink.from([log, basic, auth, this.httpLink.create({ uri: URI })]);"},{"lineNumber":110,"author":{"gitId":"MadLamprey"},"content":"    const possibleTypes: PossibleTypesMap \u003d {};"},{"lineNumber":111,"author":{"gitId":"MadLamprey"},"content":""},{"lineNumber":112,"author":{"gitId":"MadLamprey"},"content":"    graphqlTypes.__schema.types.forEach((type: any) \u003d\u003e {"},{"lineNumber":113,"author":{"gitId":"MadLamprey"},"content":"      if (type.kind \u003d\u003d\u003d \u0027UNION\u0027 || type.kind \u003d\u003d\u003d \u0027INTERFACE\u0027) {"},{"lineNumber":114,"author":{"gitId":"MadLamprey"},"content":"        possibleTypes[type.name] \u003d type.possibleTypes.map((possibleType: any) \u003d\u003e possibleType.name);"},{"lineNumber":115,"author":{"gitId":"MadLamprey"},"content":"      }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":117,"author":{"gitId":"MadLamprey"},"content":"    const cache \u003d new InMemoryCache({ possibleTypes });"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    this.apollo.create({"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      link: link,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      cache: cache"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":1,"MadLamprey":13,"-":109}},{"path":"src/app/auth/auth.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, NgZone, OnDestroy, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { filter, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { STORAGE_KEYS } from \u0027../core/constants/storage-keys.constants\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ApplicationService } from \u0027../core/services/application.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../core/services/auth.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ErrorMessageService } from \u0027../core/services/error-message.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../core/services/logging.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../core/services/phase.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../core/services/user.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-auth\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./auth.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./auth.component.css\u0027]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class AuthComponent implements OnInit, OnDestroy {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  authState: AuthState;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  accessTokenSubscription: Subscription;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  authStateSubscription: Subscription;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  currentUserName: string;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  urlEncodedSessionName: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  urlEncodedRepo: string;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  sessionInformation: string;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public appService: ApplicationService,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ngZone: NgZone,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private activatedRoute: ActivatedRoute,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.logger.startSession();"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    const oauthCode \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027code\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    const state \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027state\u0027);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (this.authService.isAuthenticated()) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      this.router.navigate([this.phaseService.currentPhase]);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.initAccessTokenSubscription();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.initAuthStateSubscription();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.createProfileFromUrlQueryParams();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.getRepoFromUrlQueryParams();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    if (oauthCode) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      // runs upon receiving oauthCode from the redirect"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      this.authService.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      // this.restoreOrgDetailsFromLocalStorage();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      this.logger.info(\u0027AuthComponent: Obtained authorisation code from Github\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      this.fetchAccessToken(oauthCode, state);"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"      return;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    this.authService.startOAuthIfHasNext();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * Will fetch the access token from GitHub."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   * @param oauthCode - The authorisation code obtained from GitHub."},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * @param state - The state returned from GitHub."},{"lineNumber":71,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  fetchAccessToken(oauthCode: string, state: string) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    if (!this.authService.isReturnedStateSame(state)) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      this.logger.info(`AuthComponent: Received incorrect state ${state}, continue waiting for correct state`);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    this.logger.info(`AuthComponent: Retrieving access token from Github`);"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    const accessTokenUrl \u003d `${AppConfig.accessTokenUrl}/${oauthCode}/client_id/${AppConfig.clientId}`;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    fetch(accessTokenUrl)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      .then((res) \u003d\u003e res.json())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .then((data) \u003d\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (data.error) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          throw new Error(data.error);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.authService.storeOAuthAccessToken(data.token);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.logger.info(`AuthComponent: Sucessfully obtained access token`);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      .catch((err) \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.logger.info(`AuthComponent: Error in data fetched from access token URL: ${err}`);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(err);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  ngOnDestroy() {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    if (this.authStateSubscription) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      this.authStateSubscription.unsubscribe();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    if (this.accessTokenSubscription) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.accessTokenSubscription.unsubscribe();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * Checks whether the current version of WATcher is outdated."},{"lineNumber":108,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  checkAppIsOutdated(): Observable\u003cany\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    return this.appService.isApplicationOutdated().pipe("},{"lineNumber":111,"author":{"gitId":"-"},"content":"      map((isOutdated: boolean) \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (isOutdated) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          throw new Error(ErrorMessageService.applicationVersionOutdatedMessage());"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  updateSession(sessionEvent: string) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    this.sessionInformation \u003d sessionEvent;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"  goToSessionSelect() {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  isUserNotAuthenticated(): boolean {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.NotAuthenticated;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  isUserAuthenticating(): boolean {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.AwaitingAuthentication;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  isAwaitingOAuthUserConfirm(): boolean {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.ConfirmOAuthUser;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  isUserAuthenticated(): boolean {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.Authenticated;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"  isRepoSet(): boolean {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    return this.phaseService.isRepoSet();"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  get currentSessionOrg(): string {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    if (!this.sessionInformation) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      // Retrieve org details of session information from local storage"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      return window.localStorage.getItem(STORAGE_KEYS.ORG);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    return this.getOrgDetails(this.sessionInformation);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"   * Extracts the Organization Details from the input sessionInformation."},{"lineNumber":157,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":158,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  private getOrgDetails(sessionInformation: string) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[0];"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"  private initAuthStateSubscription() {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    this.authStateSubscription \u003d this.authService.currentAuthState.subscribe((state) \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      this.ngZone.run(() \u003d\u003e {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        this.authState \u003d state;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"  private initAccessTokenSubscription() {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    this.accessTokenSubscription \u003d this.authService.accessToken"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":174,"author":{"gitId":"-"},"content":"        filter((token: string) \u003d\u003e !!token),"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e this.userService.getAuthenticatedUser())"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      .subscribe((user: GithubUser) \u003d\u003e {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        this.ngZone.run(() \u003d\u003e {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          this.currentUserName \u003d user.login;"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"          if (this.authService.hasNext()) {"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"            this.authService.completeLoginIfHasNext(this.currentUserName);"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"          } else {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.authService.changeAuthState(AuthState.ConfirmOAuthUser);"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"          }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"  private createProfileFromUrlQueryParams() {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    const urlParams \u003d this.activatedRoute.snapshot.queryParamMap;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    if (urlParams.has(\u0027session\u0027)) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      this.urlEncodedSessionName \u003d urlParams.get(\u0027session\u0027);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"  private getRepoFromUrlQueryParams() {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    const urlParams \u003d this.activatedRoute.snapshot.queryParamMap;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    if (urlParams.has(\u0027repo\u0027)) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      this.urlEncodedRepo \u003d urlParams.get(\u0027repo\u0027);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":6,"-":196}},{"path":"src/app/core/guards/auth.guard.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRouteSnapshot, CanActivate, CanLoad, Route, Router, RouterStateSnapshot, UrlSegment } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../services/auth.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":8,"author":{"gitId":"-"},"content":"})"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export class AuthGuard implements CanActivate, CanLoad {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  constructor(private auth: AuthService, private router: Router) {}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable\u003cboolean\u003e | Promise\u003cboolean\u003e | boolean {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    if (this.auth.isAuthenticated()) {"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"      this.auth.clearNext();"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"      this.auth.storeNext(state);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      this.router.navigate([\u0027\u0027]);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  canLoad(route: Route, segments: UrlSegment[]): Observable\u003cboolean\u003e | Promise\u003cboolean\u003e | boolean {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    if (this.auth.isAuthenticated()) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      this.router.navigate([\u0027\u0027]);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":2,"-":29}},{"path":"src/app/core/models/label.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Represents a label and its attributes."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export class Label implements SimpleLabel {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  readonly name: string;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  color: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  definition?: string;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"  constructor(label: { name: string; color: string; definition?: string }) {"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"    this.name \u003d label.name;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    this.color \u003d label.color;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    this.definition \u003d label.definition;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a simplified label with name and color"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export type SimpleLabel \u003d {"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"  name: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  color: string;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"nknguyenhc":2,"-":20}},{"path":"src/app/core/services/auth.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import { Router, RouterStateSnapshot } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { BehaviorSubject, from, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import { catchError, map, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { generateSessionId } from \u0027../../shared/lib/session\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { uuid } from \u0027../../shared/lib/uuid\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027./error-handling.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./githubevent.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./issue.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027./label.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./phase.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"export enum AuthState {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u0027NotAuthenticated\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u0027AwaitingAuthentication\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u0027ConfirmOAuthUser\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u0027Authenticated\u0027"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Responsible for initiating the authentication process and querying or"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * updating the application state with regards to authentication."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"export class AuthService {"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"  private static readonly DEFAULT_NO_PERMISSION_TO_PRIVATE_REPOS \u003d false;"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"  private static readonly SESSION_NEXT_KEY \u003d \u0027next\u0027;"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  authStateSource \u003d new BehaviorSubject(AuthState.NotAuthenticated);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  currentAuthState \u003d this.authStateSource.asObservable();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  accessToken \u003d new BehaviorSubject(undefined);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  private state: string;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  ENABLE_POPUP_MESSAGE \u003d \u0027Please enable pop-ups in your browser\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private ngZone: NgZone,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private labelService: LabelService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private titleService: Title,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":"   * Stores the data about the next route in the session storage."},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"  storeNext(next: RouterStateSnapshot) {"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":"    sessionStorage.setItem(AuthService.SESSION_NEXT_KEY, next.url);"},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"   * Checks if there is a next route to be redirected to after login,"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"   * by checking the session storage."},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"  hasNext(): boolean {"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    return sessionStorage.getItem(AuthService.SESSION_NEXT_KEY) !\u003d\u003d null;"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"   * Checks if there is a next route to be redirected to after login,"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"   * and start OAuth process automatically if there is."},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"  startOAuthIfHasNext() {"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"    if (this.hasNext()) {"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"      this.logger.info(`AuthService: Start OAuth because there is a next route`);"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"      this.startOAuthProcess(AuthService.DEFAULT_NO_PERMISSION_TO_PRIVATE_REPOS);"},{"lineNumber":83,"author":{"gitId":"nknguyenhc"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":86,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"nknguyenhc"},"content":"   * Checks if there is a next route to be redirected to after login,"},{"lineNumber":88,"author":{"gitId":"nknguyenhc"},"content":"   * and complete the login process if there is."},{"lineNumber":89,"author":{"gitId":"nknguyenhc"},"content":"   * Assuming that user has authenticated on Github, and the app is awaiting confirmation."},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"  completeLoginIfHasNext(username: string) {"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"    if (!this.hasNext()) {"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"      return;"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"nknguyenhc"},"content":"    this.logger.info(`AuthService: Automatically complete login because there is a next route`);"},{"lineNumber":96,"author":{"gitId":"nknguyenhc"},"content":"    this.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":"    this.userService.createUserModel(username).subscribe("},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"      () \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"        this.changeAuthState(AuthState.Authenticated);"},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"      },"},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"      (err) \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"        this.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"        this.errorHandlingService.handleError(err);"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"        this.logger.info(`AuthService: Automatic completion of login failed with an error: ${err}`);"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"      }"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"    );"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":"   * Clears the next route from the session storage."},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"  clearNext() {"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"    sessionStorage.removeItem(AuthService.SESSION_NEXT_KEY);"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"   * Redirect to the URL indicating the next route."},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"  redirectToNext() {"},{"lineNumber":120,"author":{"gitId":"nknguyenhc"},"content":"    const next \u003d sessionStorage.getItem(AuthService.SESSION_NEXT_KEY);"},{"lineNumber":121,"author":{"gitId":"nknguyenhc"},"content":"    this.phaseService"},{"lineNumber":122,"author":{"gitId":"nknguyenhc"},"content":"      .setupFromUrl(next)"},{"lineNumber":123,"author":{"gitId":"nknguyenhc"},"content":"      .pipe("},{"lineNumber":124,"author":{"gitId":"nknguyenhc"},"content":"        mergeMap(() \u003d\u003e this.setRepo()),"},{"lineNumber":125,"author":{"gitId":"nknguyenhc"},"content":"        catchError((err) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"nknguyenhc"},"content":"          this.logger.info(`AuthService: Failed to redirect to next URL with error: ${err}`);"},{"lineNumber":127,"author":{"gitId":"nknguyenhc"},"content":"          this.errorHandlingService.handleError(err);"},{"lineNumber":128,"author":{"gitId":"nknguyenhc"},"content":"          this.clearNext();"},{"lineNumber":129,"author":{"gitId":"nknguyenhc"},"content":"          return of(false);"},{"lineNumber":130,"author":{"gitId":"nknguyenhc"},"content":"        })"},{"lineNumber":131,"author":{"gitId":"nknguyenhc"},"content":"      )"},{"lineNumber":132,"author":{"gitId":"nknguyenhc"},"content":"      .subscribe((isSetupSuccesssful) \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"nknguyenhc"},"content":"        if (isSetupSuccesssful) {"},{"lineNumber":134,"author":{"gitId":"nknguyenhc"},"content":"          this.router.navigateByUrl(next);"},{"lineNumber":135,"author":{"gitId":"nknguyenhc"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"nknguyenhc"},"content":"      });"},{"lineNumber":137,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   * Will store the OAuth token."},{"lineNumber":141,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(token: string) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    this.githubService.storeOAuthAccessToken(token);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    this.accessToken.next(token);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    this.logger.info(\u0027AuthService: Clearing access token and setting AuthState to NotAuthenticated.\u0027);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    this.accessToken.next(undefined);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    this.ngZone.run(() \u003d\u003e this.router.navigate([\u0027\u0027]));"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  logOut(): void {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    this.userService.reset();"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    this.issueService.reset(true);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    this.labelService.reset();"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    this.phaseService.reset();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    this.githubEventService.reset();"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    this.logger.reset();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    this.setLandingPageTitle();"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(\u0027All Teams\u0027);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    this.reset();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  setTitleWithPhaseDetail(): void {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version} - ${this.phaseService.getCurrentRepositoryURL()}`;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    this.logger.info(`AuthService: Setting Title as ${title}`);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"  setLandingPageTitle(): void {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version}`;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    this.logger.info(`AuthService: Setting Title as ${title}`);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  isAuthenticated(): boolean {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    return this.authStateSource.getValue() \u003d\u003d\u003d AuthState.Authenticated;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  changeAuthState(newAuthState: AuthState) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    if (newAuthState \u003d\u003d\u003d AuthState.Authenticated) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      const sessionId \u003d generateSessionId();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      this.issueService.setSessionId(sessionId);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      this.logger.info(`AuthService: Successfully authenticated with session: ${sessionId}`);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    this.authStateSource.next(newAuthState);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   * Generates and assigns an unguessable random \u0027state\u0027 string to pass to Github for protection against cross-site request forgery attacks"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  generateStateString() {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    this.state \u003d uuid();"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    sessionStorage.setItem(\u0027state\u0027, this.state);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  isReturnedStateSame(returnedState: string): boolean {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    const state \u003d sessionStorage.getItem(\u0027state\u0027);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    return returnedState \u003d\u003d\u003d state;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":208,"author":{"gitId":"-"},"content":"   * Will start the Github OAuth web flow process."},{"lineNumber":209,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  startOAuthProcess(hasPrivateConsent: boolean) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    this.logger.info(\u0027AuthService: Starting authentication\u0027);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    // Available OAuth scopes https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    let permissionLevel \u003d \u0027public-repo\u0027;"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    if (hasPrivateConsent) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      // grants WATcher access to private repos if user allows"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      permissionLevel \u003d \u0027repo\u0027;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    const githubRepoPermission \u003d permissionLevel; // don\u0027t allow changes after logging ins"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    this.generateStateString();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    this.redirectToOAuthPage("},{"lineNumber":226,"author":{"gitId":"-"},"content":"      encodeURI("},{"lineNumber":227,"author":{"gitId":"-"},"content":"        `${AppConfig.githubUrl}/login/oauth/authorize?client_id\u003d${AppConfig.clientId}\u0026scope\u003d${githubRepoPermission},read:user\u0026state\u003d${this.state}`"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    this.logger.info(`AuthService: Redirecting for Github authentication`);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   * Handles the clean up required after authentication and setting up of repository is completed."},{"lineNumber":235,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":236,"author":{"gitId":"nknguyenhc"},"content":"  handleSetRepoSuccess(repoName: string) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    this.setTitleWithPhaseDetail();"},{"lineNumber":238,"author":{"gitId":"nknguyenhc"},"content":"    this.router.navigate([Phase.issuesViewer], {"},{"lineNumber":239,"author":{"gitId":"nknguyenhc"},"content":"      queryParams: {"},{"lineNumber":240,"author":{"gitId":"nknguyenhc"},"content":"        [PhaseService.REPO_QUERY_PARAM_KEY]: repoName"},{"lineNumber":241,"author":{"gitId":"nknguyenhc"},"content":"      }"},{"lineNumber":242,"author":{"gitId":"nknguyenhc"},"content":"    });"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   * Setup repository after authentication."},{"lineNumber":247,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  setRepo(): Observable\u003cboolean\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    return from(this.phaseService.initializeCurrentRepository()).pipe("},{"lineNumber":250,"author":{"gitId":"-"},"content":"      map(() \u003d\u003e {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (!this.phaseService.currentRepo) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        this.githubEventService.setLatestChangeEvent();"},{"lineNumber":255,"author":{"gitId":"nknguyenhc"},"content":"        this.handleSetRepoSuccess(this.phaseService.currentRepo.toString());"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      catchError((error) \u003d\u003e {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":260,"author":{"gitId":"nknguyenhc"},"content":"        this.clearNext();"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return of(false);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":267,"author":{"gitId":"-"},"content":"   * Will redirect to GitHub OAuth page"},{"lineNumber":268,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  private redirectToOAuthPage(url: string): void {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    if (url \u003d\u003d null) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    window.location.href \u003d url;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":92,"-":183}},{"path":"src/app/core/services/error-message.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"})"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Contains all error message prompts to user."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class ErrorMessageService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  public static repositoryNotPresentMessage() {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    return \u0027Invalid repository name. Please provide Github repository URL or the repository name in the format Org/Repository Name.\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"  public static invalidUrlMessage() {"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"    return \u0027URL is invalid, or repository does not exist, please indicate the repository you wish to view to continue.\u0027;"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  public static unableToFetchIssuesMessage() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch issue.\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  public static unableToFetchMilestoneMessage() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch milestones.\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  public static unableToFetchLabelsMessage() {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch labels.\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  public static usersUnassignableMessage(assignee: string) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    return `Cannot assign ${assignee} to the issue. Please check if ${assignee} is authorized.`;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  public static unableToFetchUsersMessage() {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch assignable users for repository\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  public static unableToFetchEventsMessage() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch issue events for repository\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  public static unableToFetchActivityEventsMessage() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch activity events for repository\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  public static unableToFetchDataFileMessage() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch data file.\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  public static unableToFetchLatestReleaseMessage() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch latest release.\u0027;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  public static unableToFetchSettingsFileMessage() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch settings file.\u0027;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  public static unableToFetchAuthenticatedUsersMessage() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    return \u0027Failed to fetch authenticated user.\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  public static unableToOpenInBrowserMessage() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    return \u0027Unable to open this issue in Browser\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  public static applicationVersionOutdatedMessage() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    return \u0027Please update to the latest version of WATcher.\u0027;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  public static multipleDropdownOptionsErrorMessage() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    return \u0027Supply either Dropdown option number or text, not both.\u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  public static noDropdownOptionsErrorMessage() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    return \u0027No Dropdown identification parameters supplied.\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":4,"-":74}},{"path":"src/app/core/services/factories/factory.github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Apollo } from \u0027apollo-angular\u0027;"},{"lineNumber":2,"author":{"gitId":"MadLamprey"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"// import { AppConfig } from \u0027../../../../environments/environment\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../error-handling.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../github.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../logging.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// import { MockGithubService } from \u0027../mocks/mock.github.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export function GithubServiceFactory(handling: ErrorHandlingService, apollo: Apollo, logger: LoggingService) {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // TODO: Write Mocks"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  // if (AppConfig.test) {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  //   return new MockGithubService();"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  // }"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  return new GithubService(handling, apollo, logger);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MadLamprey":1,"-":14}},{"path":"src/app/core/services/filters.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"import { Sort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import { BehaviorSubject, pipe } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"export type Filter \u003d {"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"  title: string;"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"  status: string;"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"  type: string;"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"  sort: Sort;"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"  labels: string[];"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"  milestones: string[];"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"  hiddenLabels?: Set\u003cstring\u003e;"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"};"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"export const DEFAULT_FILTER: Filter \u003d {"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"  title: \u0027\u0027,"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"  status: \u0027all\u0027,"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"  type: \u0027all\u0027,"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"  sort: { active: \u0027id\u0027, direction: \u0027asc\u0027 },"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"  labels: [],"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"  milestones: []"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"};"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"@Injectable({"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"})"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":" * Responsible for centralising filters"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":" * Filters are subscribed to and emitted from this service"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":" */"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"export class FiltersService {"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"  public filter$ \u003d new BehaviorSubject\u003cFilter\u003e(DEFAULT_FILTER);"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"  private _validateFilter \u003d pipe(this.updateStatusPairing, this.updateTypePairing);"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"  clearFilters(): void {"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"    this.filter$.next(DEFAULT_FILTER);"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"  updateFilters(newFilters: Partial\u003cFilter\u003e): void {"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"    let nextDropdownFilter: Filter \u003d {"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"      ...this.filter$.value,"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"      ...newFilters"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"    };"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"    nextDropdownFilter \u003d this._validateFilter(nextDropdownFilter);"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"    this.filter$.next(nextDropdownFilter);"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"   * Changes type to a valid, default value when an incompatible combination of type and status is encountered."},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"  updateTypePairing(dropdownFilter: Filter): Filter {"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"    if (dropdownFilter.status \u003d\u003d\u003d \u0027merged\u0027) {"},{"lineNumber":56,"author":{"gitId":"Arif-Khalid"},"content":"      dropdownFilter.type \u003d \u0027pullrequest\u0027;"},{"lineNumber":57,"author":{"gitId":"Arif-Khalid"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Arif-Khalid"},"content":"    return dropdownFilter;"},{"lineNumber":59,"author":{"gitId":"Arif-Khalid"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":61,"author":{"gitId":"Arif-Khalid"},"content":"  /**"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"   * Changes status to a valid, default value when an incompatible combination of type and status is encountered."},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"   */"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"  updateStatusPairing(dropdownFilter: Filter): Filter {"},{"lineNumber":65,"author":{"gitId":"Arif-Khalid"},"content":"    if (dropdownFilter.status \u003d\u003d\u003d \u0027merged\u0027 \u0026\u0026 dropdownFilter.type \u003d\u003d\u003d \u0027issue\u0027) {"},{"lineNumber":66,"author":{"gitId":"Arif-Khalid"},"content":"      dropdownFilter.status \u003d \u0027all\u0027;"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Arif-Khalid"},"content":"    return dropdownFilter;"},{"lineNumber":69,"author":{"gitId":"Arif-Khalid"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"Arif-Khalid"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":70}},{"path":"src/app/core/services/github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"MadLamprey"},"content":"import { ApolloQueryResult } from \u0027@apollo/client/core\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Apollo, QueryRef } from \u0027apollo-angular\u0027;"},{"lineNumber":5,"author":{"gitId":"MadLamprey"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { DocumentNode } from \u0027graphql\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { BehaviorSubject, forkJoin, from, merge, Observable, of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { catchError, filter, flatMap, map, throwIfEmpty } from \u0027rxjs/operators\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FetchIssue,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FetchIssueQuery,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FetchIssues,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FetchIssuesQuery,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FetchPullRequests,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FetchPullRequestsQuery"},{"lineNumber":16,"author":{"gitId":"-"},"content":"} from \u0027../../../../graphql/graphql-types\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { getNumberOfPages } from \u0027../../shared/lib/github-paginator-parser\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../models/github-user.model\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { IssueLastModifiedManagerModel } from \u0027../models/github/cache-manager/issue-last-modified-manager.model\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { IssuesCacheManager } from \u0027../models/github/cache-manager/issues-cache-manager.model\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { GithubEvent } from \u0027../models/github/github-event.model\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssue } from \u0027../models/github/github-graphql.issue\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssueOrPr } from \u0027../models/github/github-graphql.issue-or-pr\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { GithubResponse } from \u0027../models/github/github-response.model\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { GithubRelease } from \u0027../models/github/github.release\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { ERRORCODE_NOT_FOUND, ErrorHandlingService } from \u0027./error-handling.service\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { ErrorMessageService } from \u0027./error-message.service\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"const { Octokit } \u003d require(\u0027@octokit/rest\u0027);"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"const WATCHER_ORG \u003d \u0027WATcher-org\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"const WATCHER_REPO \u003d \u0027WATcher\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/** Owner of Repository to watch */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"let ORG_NAME \u003d \u0027\u0027; // repoOrg"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/** Name of Repository to watch */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"let REPO \u003d \u0027\u0027; // repoName"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"/** Owner of Settings repository, currently not used */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"let MOD_ORG \u003d \u0027\u0027;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"/** Name of Settings repository, currently not used */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"let DATA_REPO \u003d \u0027\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"const MAX_ITEMS_PER_PAGE \u003d 100;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"let octokit \u003d new Octokit();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":54,"author":{"gitId":"-"},"content":"})"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * Responsible for communicating with GitHub to create, update, read and delete"},{"lineNumber":58,"author":{"gitId":"-"},"content":" * features related to Github using GitHub API Requests."},{"lineNumber":59,"author":{"gitId":"-"},"content":" * For example, issues, issue labels and repositories."},{"lineNumber":60,"author":{"gitId":"-"},"content":" */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"export class GithubService {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  private static readonly IF_NONE_MATCH_EMPTY \u003d { \u0027If-None-Match\u0027: \u0027\u0027 };"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  private issuesCacheManager \u003d new IssuesCacheManager();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  private issuesLastModifiedManager \u003d new IssueLastModifiedManagerModel();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  private issueQueryRefs \u003d new Map\u003cnumber, QueryRef\u003cFetchIssueQuery\u003e\u003e();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  constructor(private errorHandlingService: ErrorHandlingService, private apollo: Apollo, private logger: LoggingService) {}"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(accessToken: string) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    octokit \u003d new Octokit({"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      auth() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return `Token ${accessToken}`;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      log: {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        debug: (message, ...otherInfo) \u003d\u003e this.logger.debug(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Do not log info for HTTP response 304 due to repeated polling"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        info: (message, ...otherInfo) \u003d\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          /304 in \\d+ms$/.test(message) ? undefined : this.logger.info(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        warn: (message, ...otherInfo) \u003d\u003e this.logger.warn(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        error: (message, ...otherInfo) \u003d\u003e this.logger.error(\u0027GithubService: \u0027 + message, ...otherInfo)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Sets settings repository. Not used."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   * @param orgName WATcher organisation"},{"lineNumber":89,"author":{"gitId":"-"},"content":"   * @param dataRepo WATcher repository"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  storeOrganizationDetails(orgName: string, dataRepo: string) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    MOD_ORG \u003d orgName;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    DATA_REPO \u003d dataRepo;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * Sets repository to watch. This repository is used for fetching from Github."},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * @param phaseRepoOwner Repository owner"},{"lineNumber":99,"author":{"gitId":"-"},"content":"   * @param repoName Repository name"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  storePhaseDetails(phaseRepoOwner: string, repoName: string) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    REPO \u003d repoName;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    ORG_NAME \u003d phaseRepoOwner;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * Fetches an array of filtered GitHubIssues using GraphQL query."},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * In WATcher, this includes pull requests."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   * @param issuesFilter - The issue filter."},{"lineNumber":111,"author":{"gitId":"-"},"content":"   * @returns An observable array of filtered GithubIssues"},{"lineNumber":112,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  fetchIssuesGraphql(issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Github Issues consists of issues and pull requests in WATcher."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const issueObs \u003d this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":119,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesQuery, GithubGraphqlIssueOrPr\u003e("},{"lineNumber":122,"author":{"gitId":"-"},"content":"          FetchIssues,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO, filter: graphqlFilter },"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.issues.edges,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          GithubGraphqlIssueOrPr"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    const prObs \u003d this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":130,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchPullRequestsQuery, GithubGraphqlIssueOrPr\u003e("},{"lineNumber":133,"author":{"gitId":"-"},"content":"          FetchPullRequests,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO },"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.pullRequests.edges,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"          GithubGraphqlIssueOrPr"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    // Concatenate both streams together."},{"lineNumber":142,"author":{"gitId":"-"},"content":"    return merge(issueObs, prObs);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   * Checks if there are pages of filtered issues that are not cached in the cache model,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   * and updates the model to cache these new pages."},{"lineNumber":148,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter."},{"lineNumber":149,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if there are pages that do not exist in the cache model."},{"lineNumber":150,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  private toFetchIssues(filter: RestGithubIssueFilter): Observable\u003cboolean\u003e {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const pageFetchLimit \u003d 100;"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubIssue[]\u003e;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    return this.getIssuesAPICall(filter, 1).pipe("},{"lineNumber":156,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue[]\u003e) \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      flatMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e[] \u003d [];"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (numOfPages \u003e pageFetchLimit) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"          throw new Error(`Repository has too many pages (${numOfPages}), not supported.`);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (let i \u003d 2; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"          apiCalls.push(this.getIssuesAPICall(filter, i));"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      map((resultArray: GithubResponse\u003cGithubIssue[]\u003e[]) \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        const responses \u003d [responseInFirstPage, ...resultArray];"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        const isCached \u003d responses.reduce((result, response) \u003d\u003e {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"          return result \u0026\u0026 response.isCached;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }, true);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        responses.forEach((resp, index) \u003d\u003e this.issuesCacheManager.set(index + 1, resp));"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return !isCached;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   * Checks if the specified repository exists."},{"lineNumber":183,"author":{"gitId":"-"},"content":"   * @param owner - Owner of Specified Repository."},{"lineNumber":184,"author":{"gitId":"-"},"content":"   * @param repo - Name of Repository."},{"lineNumber":185,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  isRepositoryPresent(owner: string, repo: string): Observable\u003cboolean\u003e {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    return from(octokit.repos.get({ owner: owner, repo: repo, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":188,"author":{"gitId":"-"},"content":"      map((rawData: { status: number }) \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return rawData.status !\u003d\u003d ERRORCODE_NOT_FOUND;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return of(false);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.repositoryNotPresentMessage()))"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":199,"author":{"gitId":"-"},"content":"   * Fetches information about an issue using GraphQL."},{"lineNumber":200,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   * If the issue is not modified, return a `304 - Not Modified` response."},{"lineNumber":202,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cGithubGraphqlIssue\u003e that represents the response object."},{"lineNumber":205,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  fetchIssueGraphql(id: number): Observable\u003cGithubGraphqlIssue\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    if (this.issueQueryRefs.get(id) \u003d\u003d\u003d undefined) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      const newQueryRef \u003d this.apollo.watchQuery\u003cFetchIssueQuery\u003e({"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        query: FetchIssue,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        variables: {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          owner: ORG_NAME,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"          name: REPO,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          issueId: id"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      this.issueQueryRefs.set(id, newQueryRef);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    const queryRef \u003d this.issueQueryRefs.get(id);"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    return this.toFetchIssue(id).pipe("},{"lineNumber":221,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e from(queryRef.refetch())),"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      map((value: ApolloQueryResult\u003cFetchIssueQuery\u003e) \u003d\u003e {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return new GithubGraphqlIssue(value.data.repository.issue);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e new HttpErrorResponse({ status: 304 }))"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":231,"author":{"gitId":"-"},"content":"   * Checks if the issue has been modified since the last query, and"},{"lineNumber":232,"author":{"gitId":"-"},"content":"   * updates the model to reflect the last modified time."},{"lineNumber":233,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":235,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if the issue has been modified."},{"lineNumber":236,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  toFetchIssue(id: number): Observable\u003cboolean\u003e {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":239,"author":{"gitId":"-"},"content":"      octokit.issues.get({"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        issue_number: id,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        headers: { \u0027If-Modified-Since\u0027: this.issuesLastModifiedManager.get(id) }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":246,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchIssuesMessage()))"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"  fetchAllMilestones(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":256,"author":{"gitId":"-"},"content":"      octokit.issues.listMilestonesForRepo({"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        state: \u0027all\u0027,"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        headers: GithubService.IF_NONE_MATCH_EMPTY"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":264,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchMilestoneMessage()))"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":273,"author":{"gitId":"-"},"content":"      octokit.issues.listLabelsForRepo({"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        headers: GithubService.IF_NONE_MATCH_EMPTY"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":280,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchLabelsMessage()))"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":288,"author":{"gitId":"-"},"content":"   * Checks if the given list of users are allowed to be assigned to an issue."},{"lineNumber":289,"author":{"gitId":"-"},"content":"   * @param assignees - GitHub usernames to be checked"},{"lineNumber":290,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  areUsersAssignable(assignees: string[]): Observable\u003cvoid\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":293,"author":{"gitId":"-"},"content":"      octokit.issues.listAssignees({"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        repo: REPO"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":298,"author":{"gitId":"-"},"content":"      map(({ data }: { data: { login: string }[] }) \u003d\u003e data.map(({ login }) \u003d\u003e login)),"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      map((assignables: string[]) \u003d\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assignees.forEach((assignee) \u003d\u003e {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"          if (!assignables.includes(assignee)) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            throw new Error(ErrorMessageService.usersUnassignableMessage(assignee));"},{"lineNumber":303,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"  getUsersAssignable(): Observable\u003cGithubUser[]\u003e {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":311,"author":{"gitId":"-"},"content":"      octokit.issues.listAssignees({"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        repo: REPO"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":316,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchUsersMessage()))"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"  fetchEventsForRepo(): Observable\u003cany[]\u003e {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    return from(octokit.issues.listEventsForRepo({ owner: ORG_NAME, repo: REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":325,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchEventsMessage()))"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"  fetchEventsForRepoCall(pageNumber: number): Observable\u003cGithubResponse\u003cany[]\u003e\u003e {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    return \u003cObservable\u003cGithubResponse\u003cany[]\u003e\u003e\u003efrom("},{"lineNumber":334,"author":{"gitId":"-"},"content":"      octokit.activity.listRepoEvents({"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        page: pageNumber"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    ).pipe(catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchActivityEventsMessage())));"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":343,"author":{"gitId":"-"},"content":"   * Fetches all events of current repository for Activity Dashboard."},{"lineNumber":344,"author":{"gitId":"-"},"content":"   * Adapted from getIssueApiCalls()."},{"lineNumber":345,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":346,"author":{"gitId":"-"},"content":"   * @returns GithubEvents observable"},{"lineNumber":347,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  fetchAllEventsForRepo(): Observable\u003cGithubEvent[]\u003e {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubEvent[]\u003e;"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    return this.fetchEventsForRepoCall(1).pipe("},{"lineNumber":351,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubEvent[]\u003e) \u003d\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      flatMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubEvent[]\u003e\u003e[] \u003d [];"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"          apiCalls.push(this.fetchEventsForRepoCall(i));"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      map((responseArray) \u003d\u003e responseArray.map((x) \u003d\u003e x[\u0027data\u0027]))"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":364,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":367,"author":{"gitId":"-"},"content":"   * Not in use. Fetches data csv file from Organization repository."},{"lineNumber":368,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  fetchDataFile(): Observable\u003c{}\u003e {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":371,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":373,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        return { data: atob(rawData[\u0027data\u0027][\u0027content\u0027]) };"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchDataFileMessage()))"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":378,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":381,"author":{"gitId":"-"},"content":"   * Gets information of latest release of WATcher."},{"lineNumber":382,"author":{"gitId":"-"},"content":"   * @returns GithubRelease observable"},{"lineNumber":383,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  fetchLatestRelease(): Observable\u003cGithubRelease\u003e {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":386,"author":{"gitId":"-"},"content":"      octokit.repos.getLatestRelease({ owner: WATCHER_ORG, repo: WATCHER_REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":388,"author":{"gitId":"-"},"content":"      map((res) \u003d\u003e res[\u0027data\u0027]),"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchLatestReleaseMessage()))"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":391,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":394,"author":{"gitId":"-"},"content":"   * Fetches the data file that is regulates session information."},{"lineNumber":395,"author":{"gitId":"-"},"content":"   * @return Observable\u003cSessionData\u003e representing session information."},{"lineNumber":396,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  fetchSettingsFile(): Observable\u003cSessionData\u003e {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":399,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027settings.json\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":401,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e JSON.parse(atob(rawData[\u0027data\u0027][\u0027content\u0027]))),"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchSettingsFileMessage()))"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"  fetchAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    return from(octokit.users.getAuthenticated()).pipe("},{"lineNumber":408,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(ErrorMessageService.unableToFetchAuthenticatedUsersMessage()))"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":414,"author":{"gitId":"-"},"content":""},{"lineNumber":415,"author":{"gitId":"-"},"content":"  getRepoURL(): string {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    return ORG_NAME.concat(\u0027/\u0027).concat(REPO);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"  viewIssueInBrowser(id: number, event: Event) {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    if (id) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      window.open(\u0027https://github.com/\u0027.concat(this.getRepoURL()).concat(\u0027/issues/\u0027).concat(String(id)));"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(new Error(ErrorMessageService.unableToOpenInBrowserMessage()));"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":426,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    this.logger.info(`GithubService: Resetting issues cache`);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    this.issuesCacheManager.clear();"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    this.issuesLastModifiedManager.clear();"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    this.issueQueryRefs.clear();"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"  getProfilesData(): Promise\u003cResponse\u003e {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    return fetch(AppConfig.clientDataUrl);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   * Performs an API call to fetch a page of filtered issues with a given pageNumber."},{"lineNumber":441,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   * The request is sent with the ETag of the latest cached HTTP response."},{"lineNumber":443,"author":{"gitId":"-"},"content":"   * If page requested has the same ETag, or the request results in an error,"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   * then the cached page is returned instead."},{"lineNumber":445,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   * @param pageNumber - The page to be fetched"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   * @returns An observable representing the response containing a single page of filtered issues"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  private getIssuesAPICall(filter: RestGithubIssueFilter, pageNumber: number): Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    const apiCall: Promise\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e \u003d octokit.issues.listForRepo({"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      ...filter,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      owner: ORG_NAME,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      repo: REPO,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      sort: \u0027created\u0027,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      direction: \u0027desc\u0027,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      per_page: 100,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      page: pageNumber,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      headers: { \u0027If-None-Match\u0027: this.issuesCacheManager.getEtagFor(pageNumber) },"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      state: \u0027all\u0027"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    const apiCall$ \u003d from("},{"lineNumber":463,"author":{"gitId":"-"},"content":"      apiCall.catch((err) \u003d\u003e {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        return this.issuesCacheManager.get(pageNumber);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"    return apiCall$.pipe("},{"lineNumber":469,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        // catchError does not appear to catch an error on an observable created from a promise..."},{"lineNumber":471,"author":{"gitId":"-"},"content":"        this.logger.info(`GithubService: Error caught in getIssuesAPICall`);"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        return of(this.issuesCacheManager.get(pageNumber));"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":475,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   * Fetches a list of items using a GraphQL query that queries for paginated data."},{"lineNumber":479,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":480,"author":{"gitId":"-"},"content":"   * @param query - The GraphQL query that queries for paginated data."},{"lineNumber":481,"author":{"gitId":"-"},"content":"   * @param variables - Additional variables for the GraphQL query."},{"lineNumber":482,"author":{"gitId":"-"},"content":"   * @callback pluckEdges A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":483,"author":{"gitId":"-"},"content":"   * @callback Model Constructor for the item model."},{"lineNumber":484,"author":{"gitId":"-"},"content":"   * @returns A list of items from the query."},{"lineNumber":485,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":486,"author":{"gitId":"-"},"content":"  private fetchGraphqlList\u003cT, M\u003e("},{"lineNumber":487,"author":{"gitId":"-"},"content":"    query: DocumentNode,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    variables: {},"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e,"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    Model: new (data) \u003d\u003e M"},{"lineNumber":491,"author":{"gitId":"-"},"content":"  ): Observable\u003cArray\u003cM\u003e\u003e {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    return this.withPagination\u003cT\u003e(pluckEdges, query, variables, false).pipe("},{"lineNumber":493,"author":{"gitId":"-"},"content":"      map((results: ApolloQueryResult\u003cT\u003e[]) \u003d\u003e {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        const issues \u003d results.reduce((accumulated, current) \u003d\u003e accumulated.concat(pluckEdges(current)), []);"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        return issues.map((issue) \u003d\u003e new Model(issue.node));"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        return new HttpErrorResponse({ status: 304 });"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   * Returns an observable that will continually emit the currently accumulated results, until a page that has less"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   * than 100 items is found, after which it performs a final emit with the full results array, and completes."},{"lineNumber":506,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   * If `shouldAccumulate` is false, the observable will emit only the latest result, it will still complete on the"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   * same condition."},{"lineNumber":509,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   * @callback pluckEdges - A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":511,"author":{"gitId":"-"},"content":"   * @params query - The query to be performed."},{"lineNumber":512,"author":{"gitId":"-"},"content":"   * @params variables - The variables for the query."},{"lineNumber":513,"author":{"gitId":"-"},"content":"   * @params shouldAccumulate - Whether the observable should accumulate the results."},{"lineNumber":514,"author":{"gitId":"-"},"content":"   * @returns an observable"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":516,"author":{"gitId":"-"},"content":"  private withPagination\u003cT\u003e("},{"lineNumber":517,"author":{"gitId":"-"},"content":"    pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    query: DocumentNode,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    variables: { [key: string]: any } \u003d {},"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    shouldAccumulate: boolean \u003d true"},{"lineNumber":521,"author":{"gitId":"-"},"content":"  ): Observable\u003cApolloQueryResult\u003cT\u003e[]\u003e {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    const maxResultsCount \u003d 100;"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    const apollo \u003d this.apollo;"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"    let accumulatedResults: ApolloQueryResult\u003cT\u003e[] \u003d [];"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    const behaviorSubject: BehaviorSubject\u003cApolloQueryResult\u003cT\u003e[]\u003e \u003d new BehaviorSubject(accumulatedResults);"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"    async function queryWith(cursor: string): Promise\u003cvoid\u003e {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      const graphqlQuery \u003d apollo.watchQuery\u003cT\u003e({ query, variables: { ...variables, cursor } });"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"      await graphqlQuery.refetch().then(async (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        const intermediate \u003d Array.isArray(results) ? results : [results];"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        const edges \u003d pluckEdges(results);"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        const nextCursor \u003d edges.length \u003d\u003d\u003d 0 ? null : edges[edges.length - 1].cursor;"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"        if (shouldAccumulate) {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"          accumulatedResults \u003d accumulatedResults.concat(intermediate);"},{"lineNumber":538,"author":{"gitId":"-"},"content":"          behaviorSubject.next(accumulatedResults);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"          behaviorSubject.next(intermediate);"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        if (edges.length \u003c maxResultsCount || !nextCursor) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"          // No more queries to perform."},{"lineNumber":544,"author":{"gitId":"-"},"content":"          behaviorSubject.complete();"},{"lineNumber":545,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"        // Use a chain of await to ensure that all recursive queries are completed before `complete` is called."},{"lineNumber":549,"author":{"gitId":"-"},"content":"        await queryWith(nextCursor);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"    queryWith(null);"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"    return behaviorSubject.asObservable();"},{"lineNumber":556,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":557,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MadLamprey":2,"-":555}},{"path":"src/app/core/services/phase.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"import { BehaviorSubject, Observable, of, Subject } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { STORAGE_KEYS } from \u0027../constants/storage-keys.constants\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { Repo } from \u0027../models/repo.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ErrorMessageService } from \u0027./error-message.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { RepoUrlCacheService } from \u0027./repo-url-cache.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"export const SESSION_AVALIABILITY_FIX_FAILED \u003d \u0027Session Availability Fix failed.\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The title of each phase that appears in the header bar."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export const PhaseDescription \u003d {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  [Phase.issuesViewer]: \u0027Issues Dashboard\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  [Phase.activityDashboard]: \u0027Activity Dashboard\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"};"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * All data of the session."},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Add accessible phases here."},{"lineNumber":27,"author":{"gitId":"-"},"content":" */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export const STARTING_SESSION_DATA: SessionData \u003d {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  sessionRepo: ["},{"lineNumber":30,"author":{"gitId":"-"},"content":"    { phase: Phase.issuesViewer, repos: [] }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // { phase: Phase.activityDashboard, repos: [] }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":33,"author":{"gitId":"-"},"content":"};"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"export const STARTING_PHASE \u003d Phase.issuesViewer;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":39,"author":{"gitId":"-"},"content":"})"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Responsible for managing the current selected feature of WATcher as well as the"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * current session data and repository details related to the session."},{"lineNumber":44,"author":{"gitId":"-"},"content":" *"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * A phase is terminology from CATcher, in WATcher it refers to a feature of WATcher."},{"lineNumber":46,"author":{"gitId":"-"},"content":" */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"export class PhaseService {"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":"  public static readonly REPO_QUERY_PARAM_KEY \u003d \u0027repo\u0027;"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  public currentPhase: Phase \u003d STARTING_PHASE;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  public currentRepo: Repo; // current or main repository of current phase"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  public otherRepos: Repo[]; // more repositories relevant to this phase"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  repoSetSource \u003d new BehaviorSubject(false);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  repoSetState \u003d this.repoSetSource.asObservable();"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Expose an observable to track changes to currentRepo"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * TODO - replace all references to currentRepo to have"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * dependencies subscribe to this observable?"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  public repoChanged$: Subject\u003cRepo | null\u003e \u003d new Subject();"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /** Whether the PhaseService is changing the repository */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  public isChangingRepo \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  public sessionData \u003d STARTING_SESSION_DATA; // stores session data for the session"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"  constructor("},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"    private githubService: GithubService,"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"    private repoUrlCacheService: RepoUrlCacheService,"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"    public logger: LoggingService,"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"    private router: Router"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":"  ) {}"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   * Sets the current main repository and additional repos if any."},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * Updates session data in Phase Service and local storage."},{"lineNumber":80,"author":{"gitId":"-"},"content":"   * Updates Github Service with current repository."},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * @param repo Main current repository"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * @param repos Additional repositories"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  setRepository(repo: Repo, repos?: Repo[]): void {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.currentRepo \u003d repo;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.otherRepos \u003d repos ? repos : [];"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    this.sessionData.sessionRepo.find((x) \u003d\u003e x.phase \u003d\u003d\u003d this.currentPhase).repos \u003d this.getRepository();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.githubService.storePhaseDetails(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    localStorage.setItem(\u0027sessionData\u0027, JSON.stringify(this.sessionData));"},{"lineNumber":90,"author":{"gitId":"nknguyenhc"},"content":"    this.router.navigate([\u0027issuesViewer\u0027], {"},{"lineNumber":91,"author":{"gitId":"nknguyenhc"},"content":"      queryParams: {"},{"lineNumber":92,"author":{"gitId":"nknguyenhc"},"content":"        [PhaseService.REPO_QUERY_PARAM_KEY]: repo.toString()"},{"lineNumber":93,"author":{"gitId":"nknguyenhc"},"content":"      }"},{"lineNumber":94,"author":{"gitId":"nknguyenhc"},"content":"    });"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * Changes current respository to a new repository."},{"lineNumber":99,"author":{"gitId":"-"},"content":"   * @param repo New current repository"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  private changeCurrentRepository(repo: Repo): void {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    this.logger.info(`PhaseService: Changing current repository to \u0027${repo}\u0027`);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    if (this.currentPhase \u003d\u003d\u003d Phase.issuesViewer) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      /** Adds past repositories to phase */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      (this.otherRepos || []).push(this.currentRepo);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    this.setRepository(repo, this.otherRepos);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.repoUrlCacheService.cache(repo.toString());"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    this.repoChanged$.next(repo);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   * Change repository if a valid repository is provided"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   * @param repo New repository"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  async changeRepositoryIfValid(repo: Repo) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    this.isChangingRepo.next(true);"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    const isValidRepository \u003d await this.githubService.isRepositoryPresent(repo.owner, repo.name).toPromise();"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    if (!isValidRepository) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      this.isChangingRepo.next(false);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      throw new Error(ErrorMessageService.repositoryNotPresentMessage());"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    this.changeCurrentRepository(repo);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    this.isChangingRepo.next(false);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"-"},"content":"   * Returns the full repository array of the current feature."},{"lineNumber":134,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  getRepository(): Repo[] {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return [this.currentRepo].concat(this.otherRepos);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   * Retrieves the repository url from local storage and sets to current repository."},{"lineNumber":141,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  async initializeCurrentRepository() {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    const org \u003d window.localStorage.getItem(STORAGE_KEYS.ORG);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    const repoName \u003d window.localStorage.getItem(STORAGE_KEYS.DATA_REPO);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    this.logger.info(`PhaseService: received initial org (${org}) and initial name (${repoName})`);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    let repo: Repo;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    if (!org || !repoName) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      repo \u003d Repo.ofEmptyRepo();"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      repo \u003d new Repo(org, repoName);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const isValidRepository \u003d await this.githubService.isRepositoryPresent(repo.owner, repo.name).toPromise();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    if (!isValidRepository) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      throw new Error(ErrorMessageService.repositoryNotPresentMessage());"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    this.logger.info(`PhaseService: Repo is ${repo}`);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    this.setRepository(repo);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    this.repoSetSource.next(true);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":162,"author":{"gitId":"nknguyenhc"},"content":"   * Set items in the local storage corresponding to the next URL."},{"lineNumber":163,"author":{"gitId":"nknguyenhc"},"content":"   * This includes checking if the phase is valid, and if the repo is of the correct format."},{"lineNumber":164,"author":{"gitId":"nknguyenhc"},"content":"   * @param url The partial URL without the host, e.g. `/issuesViewer?repo\u003dCATcher%2FWATcher."},{"lineNumber":165,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":166,"author":{"gitId":"nknguyenhc"},"content":"  setupFromUrl(url: string): Observable\u003cvoid\u003e {"},{"lineNumber":167,"author":{"gitId":"nknguyenhc"},"content":"    return of(this.getPhaseAndRepoFromUrl(url)).pipe("},{"lineNumber":168,"author":{"gitId":"nknguyenhc"},"content":"      map(([phaseName, repoName]) \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"nknguyenhc"},"content":"        if (!this.isPhaseAllowed(phaseName)) {"},{"lineNumber":170,"author":{"gitId":"nknguyenhc"},"content":"          throw new Error(ErrorMessageService.invalidUrlMessage());"},{"lineNumber":171,"author":{"gitId":"nknguyenhc"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":173,"author":{"gitId":"nknguyenhc"},"content":"        if (repoName \u003d\u003d\u003d null) {"},{"lineNumber":174,"author":{"gitId":"nknguyenhc"},"content":"          throw new Error(ErrorMessageService.invalidUrlMessage());"},{"lineNumber":175,"author":{"gitId":"nknguyenhc"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":177,"author":{"gitId":"nknguyenhc"},"content":"        const newRepo \u003d Repo.of(repoName);"},{"lineNumber":178,"author":{"gitId":"nknguyenhc"},"content":"        if (newRepo) {"},{"lineNumber":179,"author":{"gitId":"nknguyenhc"},"content":"          window.localStorage.setItem(STORAGE_KEYS.ORG, newRepo.owner);"},{"lineNumber":180,"author":{"gitId":"nknguyenhc"},"content":"          window.localStorage.setItem(STORAGE_KEYS.DATA_REPO, newRepo.name);"},{"lineNumber":181,"author":{"gitId":"nknguyenhc"},"content":"          this.repoUrlCacheService.cache(newRepo.toString());"},{"lineNumber":182,"author":{"gitId":"nknguyenhc"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"nknguyenhc"},"content":"      })"},{"lineNumber":184,"author":{"gitId":"nknguyenhc"},"content":"    );"},{"lineNumber":185,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":186,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":187,"author":{"gitId":"nknguyenhc"},"content":"  getPhaseAndRepoFromUrl(url: string): [string, string] {"},{"lineNumber":188,"author":{"gitId":"nknguyenhc"},"content":"    const urlObject \u003d new URL(`${location.protocol}//${location.host}${url}`);"},{"lineNumber":189,"author":{"gitId":"nknguyenhc"},"content":"    const pathname \u003d urlObject.pathname;"},{"lineNumber":190,"author":{"gitId":"nknguyenhc"},"content":"    const reponame \u003d urlObject.searchParams.get(PhaseService.REPO_QUERY_PARAM_KEY);"},{"lineNumber":191,"author":{"gitId":"nknguyenhc"},"content":"    return [pathname, reponame];"},{"lineNumber":192,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":193,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":194,"author":{"gitId":"nknguyenhc"},"content":"  isPhaseAllowed(phaseName: string) {"},{"lineNumber":195,"author":{"gitId":"nknguyenhc"},"content":"    return phaseName \u003d\u003d\u003d \u0027/\u0027 + Phase.issuesViewer;"},{"lineNumber":196,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  isRepoSet(): boolean {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    return this.repoSetSource.getValue();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   * Changes phase and updates Phase Service\u0027s properties."},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * @param phase New phase"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  changePhase(phase: Phase) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d phase;"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    // For now, assumes repository stays the same"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    this.githubService.storePhaseDetails(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"  public getCurrentRepositoryURL() {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return this.currentRepo.owner.concat(\u0027/\u0027).concat(this.currentRepo.name);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d STARTING_PHASE;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":53,"-":167}},{"path":"src/app/issues-viewer/card-view/card-view.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card-column\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"column-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-card\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cmat-card-header [ngStyle]\u003d\"{ height: \u002740px\u0027 }\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        \u003cdiv"},{"lineNumber":6,"author":{"gitId":"-"},"content":"          mat-card-avatar"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"this.assignee\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"          [ngStyle]\u003d\"{"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            background: \u0027url(\u0027 + this.assignee.avatar_url + \u0027)\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            \u0027background-size\u0027: \u002740px\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          }\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003e\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cmat-card-title\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          {{ this.assignee !\u003d\u003d undefined ? this.assignee.login : \u0027Unassigned Issues\u0027 }}"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/mat-card-title\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row-count\"\u003e{{ this.issues.count }}\u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/mat-card-header\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/mat-card\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"scrollable-container-wrapper\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"scrollable-container\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"issue-pr-cards\" *ngFor\u003d\"let issue of this.issues$ | async; index as i\"\u003e"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"        \u003capp-issue-pr-card [issue]\u003d\"issue\" [filter]\u003d\"issues.filter\"\u003e\u003c/app-issue-pr-card\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cmat-card class\u003d\"loading-spinner\" *ngIf\u003d\"this.issues.isLoading$ | async\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/mat-card\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Arif-Khalid":1,"-":31}},{"path":"src/app/issues-viewer/card-view/card-view.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { FilterableComponent, FilterableSource } from \u0027../../shared/issue-tables/filterableTypes\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  selector: \u0027app-card-view\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./card-view.component.html\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./card-view.component.css\u0027]"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Displays issues as Cards."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class CardViewComponent implements OnInit, AfterViewInit, OnDestroy, FilterableComponent {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @Input() headers: string[];"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() assignee?: GithubUser \u003d undefined;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @Input() filters?: any \u003d undefined;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  issues: IssuesDataTable;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  issues$: Observable\u003cIssue[]\u003e;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"  isLoading \u003d true;"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"  issueLength \u003d 0;"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"  @Output() issueLengthChange: EventEmitter\u003cNumber\u003e \u003d new EventEmitter\u003cNumber\u003e();"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"  constructor(public element: ElementRef, public issueService: IssueService) {}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"    this.issues \u003d new IssuesDataTable(this.issueService, this.paginator, this.headers, this.assignee, this.filters);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      this.issues.loadIssues();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      this.issues$ \u003d this.issues.connect();"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"      // Emit event when issues change"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"      this.issues$.subscribe((issues) \u003d\u003e {"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"        this.issueLength \u003d issues.length;"},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":"        this.issueLengthChange.emit(this.issueLength);"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"      });"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"      // Emit event when loading state changes"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"      this.issues.isLoading$.subscribe((isLoadingUpdate) \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"        this.isLoading \u003d isLoadingUpdate;"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"      });"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      this.issues.disconnect();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  retrieveFilterable(): FilterableSource {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    return this.issues;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":4,"Arif-Khalid":15,"-":49}},{"path":"src/app/issues-viewer/hidden-users/hidden-users.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":".hidden-users {"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"  margin: 8px;"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"  min-width: 150px;"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"  max-width: 300px;"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":".row-count {"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"  background-color: rgb(222, 222, 222);"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"  border-radius: 3px;"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"  cursor: default;"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"  padding: 6px;"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"  color: rgb(0, 0, 0);"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"  font-weight: 410;"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"  display: inline-flex;"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"  font-size: 14px;"},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":".mat-card-header {"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"  display: flex;"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"  flex-direction: row;"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"  align-items: center;"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"  width: 100%;"},{"lineNumber":23,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":24,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":25,"author":{"gitId":"nknguyenhc"},"content":".mat-card {"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"  margin: 8px 0px;"},{"lineNumber":27,"author":{"gitId":"nknguyenhc"},"content":"  height: 40px;"},{"lineNumber":28,"author":{"gitId":"nknguyenhc"},"content":"  padding: 10px;"},{"lineNumber":29,"author":{"gitId":"nknguyenhc"},"content":"  display: flex;"},{"lineNumber":30,"author":{"gitId":"nknguyenhc"},"content":"  align-items: center;"},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"  justify-content: center;"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"  flex-direction: row;"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":34,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":35,"author":{"gitId":"nknguyenhc"},"content":".mat-card-title {"},{"lineNumber":36,"author":{"gitId":"nknguyenhc"},"content":"  font-size: 14px;"},{"lineNumber":37,"author":{"gitId":"nknguyenhc"},"content":"  text-align: center;"},{"lineNumber":38,"author":{"gitId":"nknguyenhc"},"content":"  margin: 0;"},{"lineNumber":39,"author":{"gitId":"nknguyenhc"},"content":"  flex-grow: 1;"},{"lineNumber":40,"author":{"gitId":"nknguyenhc"},"content":"  margin: 2px;"},{"lineNumber":41,"author":{"gitId":"nknguyenhc"},"content":"  word-break: break-word;"},{"lineNumber":42,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":44,"author":{"gitId":"nknguyenhc"},"content":".mat-card-avatar {"},{"lineNumber":45,"author":{"gitId":"nknguyenhc"},"content":"  height: 30px;"},{"lineNumber":46,"author":{"gitId":"nknguyenhc"},"content":"  width: 30px;"},{"lineNumber":47,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":48,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":49,"author":{"gitId":"nknguyenhc"},"content":".mat-card-header .mat-card-title {"},{"lineNumber":50,"author":{"gitId":"nknguyenhc"},"content":"  font-size: 12px;"},{"lineNumber":51,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":52,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":53,"author":{"gitId":"nknguyenhc"},"content":".scrollable-container {"},{"lineNumber":54,"author":{"gitId":"nknguyenhc"},"content":"  height: 67vh;"},{"lineNumber":55,"author":{"gitId":"nknguyenhc"},"content":"  overflow: auto;"},{"lineNumber":56,"author":{"gitId":"nknguyenhc"},"content":"  scrollbar-width: none;"},{"lineNumber":57,"author":{"gitId":"nknguyenhc"},"content":"  -ms-overflow-style: none;"},{"lineNumber":58,"author":{"gitId":"nknguyenhc"},"content":"  position: relative;"},{"lineNumber":59,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":60,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":61,"author":{"gitId":"nknguyenhc"},"content":".scrollable-containers::-webkit-scrollbar {"},{"lineNumber":62,"author":{"gitId":"nknguyenhc"},"content":"  display: none;"},{"lineNumber":63,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":64,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":65,"author":{"gitId":"nknguyenhc"},"content":".scrollable-container::before,"},{"lineNumber":66,"author":{"gitId":"nknguyenhc"},"content":".scrollable-container::after {"},{"lineNumber":67,"author":{"gitId":"nknguyenhc"},"content":"  pointer-events: none;"},{"lineNumber":68,"author":{"gitId":"nknguyenhc"},"content":"  content: \u0027\u0027;"},{"lineNumber":69,"author":{"gitId":"nknguyenhc"},"content":"  z-index: 2;"},{"lineNumber":70,"author":{"gitId":"nknguyenhc"},"content":"  height: 6px;"},{"lineNumber":71,"author":{"gitId":"nknguyenhc"},"content":"  width: 100%;"},{"lineNumber":72,"author":{"gitId":"nknguyenhc"},"content":"  display: block;"},{"lineNumber":73,"author":{"gitId":"nknguyenhc"},"content":"  background-image: linear-gradient(to bottom, white 66%, transparent);"},{"lineNumber":74,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":75,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":".scrollable-container::before {"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"  position: absolute;"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"}"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":".scrollable-container::after {"},{"lineNumber":81,"author":{"gitId":"nknguyenhc"},"content":"  position: sticky;"},{"lineNumber":82,"author":{"gitId":"nknguyenhc"},"content":"}"}],"authorContributionMap":{"nknguyenhc":82}},{"path":"src/app/issues-viewer/hidden-users/hidden-users.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"\u003cdiv *ngIf\u003d\"users.length \u003e 0\" class\u003d\"hidden-users\"\u003e"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"  \u003cmat-card\u003e"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":"    \u003cmat-card-title\u003eHidden users\u003c/mat-card-title\u003e"},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"    \u003cdiv class\u003d\"row-count\"\u003e{{ users.length }}\u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"  \u003c/mat-card\u003e"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"  \u003cdiv class\u003d\"scrollable-container\"\u003e"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"    \u003cdiv *ngFor\u003d\"let user of users\"\u003e"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"      \u003cmat-card\u003e"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"        \u003cmar-card-header class\u003d\"mat-card-header\"\u003e"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"          \u003cdiv"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"            mat-card-avatar"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"            [ngStyle]\u003d\"{"},{"lineNumber":13,"author":{"gitId":"nknguyenhc"},"content":"              background: \u0027url(\u0027 + user.avatar_url + \u0027)\u0027,"},{"lineNumber":14,"author":{"gitId":"nknguyenhc"},"content":"              \u0027background-size\u0027: \u002730px\u0027"},{"lineNumber":15,"author":{"gitId":"nknguyenhc"},"content":"            }\""},{"lineNumber":16,"author":{"gitId":"nknguyenhc"},"content":"          \u003e\u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"          \u003cmat-card-title\u003e{{ user.login }}\u003c/mat-card-title\u003e"},{"lineNumber":18,"author":{"gitId":"nknguyenhc"},"content":"        \u003c/mar-card-header\u003e"},{"lineNumber":19,"author":{"gitId":"nknguyenhc"},"content":"      \u003c/mat-card\u003e"},{"lineNumber":20,"author":{"gitId":"nknguyenhc"},"content":"    \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"nknguyenhc"},"content":"  \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"nknguyenhc"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"nknguyenhc":22}},{"path":"src/app/issues-viewer/hidden-users/hidden-users.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"nknguyenhc"},"content":"import { Component, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":3,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":4,"author":{"gitId":"nknguyenhc"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"nknguyenhc"},"content":"  selector: \u0027app-hidden-users\u0027,"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"  templateUrl: \u0027./hidden-users.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"nknguyenhc"},"content":"  styleUrls: [\u0027./hidden-users.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"nknguyenhc"},"content":"})"},{"lineNumber":9,"author":{"gitId":"nknguyenhc"},"content":"export class HiddenUsersComponent {"},{"lineNumber":10,"author":{"gitId":"nknguyenhc"},"content":"  @Input() users: GithubUser[] \u003d [];"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"}"}],"authorContributionMap":{"nknguyenhc":11}},{"path":"src/app/issues-viewer/issues-viewer.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"loading-spinner\" *ngIf\u003d\"this.phaseService.isChangingRepo | async; else elseBlock\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e \u003c/mat-progress-spinner\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cng-template #elseBlock\u003e"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    \u003capp-filter-bar [views$]\u003d\"views\"\u003e\u003c/app-filter-bar\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"wrapper\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003capp-card-view"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        *ngFor\u003d\"let assignee of assignees\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"        class\u003d\"issue-table\""},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"        #card"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"        [ngStyle]\u003d\"{ display: card.isLoading || card.issueLength \u003e 0 ? \u0027initial\u0027 : \u0027none\u0027 }\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"        [assignee]\u003d\"assignee\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        [headers]\u003d\"this.displayedColumns\""},{"lineNumber":17,"author":{"gitId":"nknguyenhc"},"content":"        (issueLengthChange)\u003d\"updateHiddenUsers($event, assignee)\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003e\u003c/app-card-view\u003e"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"      \u003capp-card-view"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"        class\u003d\"issue-table\""},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"        #card"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"        [ngStyle]\u003d\"{ display: card.isLoading || card.issueLength \u003e 0 ? \u0027initial\u0027 : \u0027none\u0027 }\""},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"        [headers]\u003d\"this.displayedColumns\""},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"      \u003e"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"      \u003c/app-card-view\u003e"},{"lineNumber":26,"author":{"gitId":"nknguyenhc"},"content":"      \u003capp-hidden-users [users]\u003d\"hiddenAssignees\"\u003e\u003c/app-hidden-users\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"nknguyenhc":2,"Arif-Khalid":10,"-":17}},{"path":"src/app/issues-viewer/issues-viewer.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { BehaviorSubject, of, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Repo } from \u0027../core/models/repo.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorMessageService } from \u0027../core/services/error-message.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../core/services/github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../core/services/label.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { MilestoneService } from \u0027../core/services/milestone.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../core/services/phase.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { CardViewComponent } from \u0027./card-view/card-view.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  selector: \u0027app-issues-viewer\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issues-viewer.component.html\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issues-viewer.component.css\u0027]"},{"lineNumber":18,"author":{"gitId":"-"},"content":"})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export class IssuesViewerComponent implements OnInit, AfterViewInit, OnDestroy {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  readonly displayedColumns \u003d [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE, TABLE_COLUMNS.ASSIGNEE, TABLE_COLUMNS.LABEL];"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  /** Observes for any change in repo*/"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  repoChangeSubscription: Subscription;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  /** Observes for any change in the cardviews */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  viewChange: Subscription;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  /** Users to show as columns */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  assignees: GithubUser[];"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"nknguyenhc"},"content":"  /** The list of users with 0 issues (hidden) */"},{"lineNumber":32,"author":{"gitId":"nknguyenhc"},"content":"  hiddenAssignees: GithubUser[] \u003d [];"},{"lineNumber":33,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  @ViewChildren(CardViewComponent) cardViews: QueryList\u003cCardViewComponent\u003e;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  views \u003d new BehaviorSubject\u003cQueryList\u003cCardViewComponent\u003e\u003e(undefined);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public githubService: GithubService,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public issueService: IssueService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public milestoneService: MilestoneService"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    this.repoChangeSubscription \u003d this.phaseService.repoChanged$.subscribe((newRepo) \u003d\u003e {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      this.issueService.reset(false);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      this.labelService.reset();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      this.initialize();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.initialize();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.viewChange \u003d this.cardViews.changes.subscribe((x) \u003d\u003e this.views.next(x));"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.repoChangeSubscription.unsubscribe();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.viewChange.unsubscribe();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * Fetch and initialize all information from repository to populate Issue Dashboard."},{"lineNumber":67,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  private initialize() {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.checkIfValidRepository().subscribe((isValidRepository) \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      if (!isValidRepository) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        throw new Error(ErrorMessageService.repositoryNotPresentMessage());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    // Fetch assignees"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.assignees \u003d [];"},{"lineNumber":77,"author":{"gitId":"nknguyenhc"},"content":"    this.hiddenAssignees \u003d [];"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    this.githubService.getUsersAssignable().subscribe((x) \u003d\u003e (this.assignees \u003d x));"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    // Fetch issues"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    this.issueService.reloadAllIssues();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"   * Checks if our current repository available on phase service is indeed a valid repository"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  private checkIfValidRepository() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const currentRepo \u003d this.phaseService.currentRepo;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    if (Repo.isInvalidRepoName(currentRepo)) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      return of(false);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    return this.githubService.isRepositoryPresent(currentRepo.owner, currentRepo.name);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"  /**"},{"lineNumber":99,"author":{"gitId":"nknguyenhc"},"content":"   * Update the list of hidden user based on the new info."},{"lineNumber":100,"author":{"gitId":"nknguyenhc"},"content":"   * @param issueLength The number of issues assigned to this user."},{"lineNumber":101,"author":{"gitId":"nknguyenhc"},"content":"   * @param assignee The assignee."},{"lineNumber":102,"author":{"gitId":"nknguyenhc"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"nknguyenhc"},"content":"  updateHiddenUsers(issueLength: number, assignee: GithubUser) {"},{"lineNumber":104,"author":{"gitId":"nknguyenhc"},"content":"    if (issueLength \u003d\u003d\u003d 0) {"},{"lineNumber":105,"author":{"gitId":"nknguyenhc"},"content":"      this.updateHiddenUser(assignee);"},{"lineNumber":106,"author":{"gitId":"nknguyenhc"},"content":"    } else {"},{"lineNumber":107,"author":{"gitId":"nknguyenhc"},"content":"      this.removeHiddenUser(assignee);"},{"lineNumber":108,"author":{"gitId":"nknguyenhc"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":111,"author":{"gitId":"nknguyenhc"},"content":"  private updateHiddenUser(assignee: GithubUser) {"},{"lineNumber":112,"author":{"gitId":"nknguyenhc"},"content":"    if (!this.hiddenAssignees.includes(assignee)) {"},{"lineNumber":113,"author":{"gitId":"nknguyenhc"},"content":"      this.hiddenAssignees.push(assignee);"},{"lineNumber":114,"author":{"gitId":"nknguyenhc"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"nknguyenhc"},"content":""},{"lineNumber":117,"author":{"gitId":"nknguyenhc"},"content":"  private removeHiddenUser(assignee: GithubUser) {"},{"lineNumber":118,"author":{"gitId":"nknguyenhc"},"content":"    this.hiddenAssignees \u003d this.hiddenAssignees.filter((user) \u003d\u003e user !\u003d\u003d assignee);"},{"lineNumber":119,"author":{"gitId":"nknguyenhc"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":27,"-":93}},{"path":"src/app/issues-viewer/issues-viewer.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FilterBarModule } from \u0027../shared/filter-bar/filter-bar.module\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { IssuesPrCardModule } from \u0027../shared/issue-pr-card/issue-pr-card.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { CardViewComponent } from \u0027./card-view/card-view.component\u0027;"},{"lineNumber":6,"author":{"gitId":"nknguyenhc"},"content":"import { HiddenUsersComponent } from \u0027./hidden-users/hidden-users.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssuesViewerRoutingModule } from \u0027./issues-viewer-routing.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssuesViewerComponent } from \u0027./issues-viewer.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  imports: [FilterBarModule, IssuesViewerRoutingModule, IssuesPrCardModule, SharedModule],"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"  declarations: [IssuesViewerComponent, CardViewComponent, HiddenUsersComponent],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  exports: [IssuesViewerComponent, CardViewComponent]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class IssuesViewerModule {}"}],"authorContributionMap":{"nknguyenhc":2,"-":13}},{"path":"src/app/shared/filter-bar/filter-bar.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cmat-grid-list cols\u003d\"7\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-grid-tile colspan\u003d\"3\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-form-field class\u003d\"search-bar\"\u003e"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"      \u003cinput matInput (keyup)\u003d\"this.filtersService.updateFilters({ title: $event.target.value })\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/mat-form-field\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-tile\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cmat-grid-tile colspan\u003d\"3\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"dropdown-filters\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cmat-label\u003eStatus\u003c/mat-label\u003e"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"        \u003cmat-select [value]\u003d\"this.filter.status\" (selectionChange)\u003d\"this.filtersService.updateFilters({ status: $event.value })\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"all\"\u003eAll\u003c/mat-option\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"open\"\u003eOpen\u003c/mat-option\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"closed\"\u003eClosed\u003c/mat-option\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"merged\" *ngIf\u003d\"isNotFilterIssue()\"\u003eMerged\u003c/mat-option\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/mat-select\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cmat-label\u003eType\u003c/mat-label\u003e"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"        \u003cmat-select [value]\u003d\"this.filter.type\" (selectionChange)\u003d\"this.filtersService.updateFilters({ type: $event.value })\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"all\"\u003eAll\u003c/mat-option\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"issue\"\u003eIssue\u003c/mat-option\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"pullrequest\"\u003ePull Request\u003c/mat-option\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/mat-select\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"      \u003cmat-form-field"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"        appearance\u003d\"standard\""},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"        matSort"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"        [matSortDisableClear]\u003d\"true\""},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"        (matSortChange)\u003d\"this.filtersService.updateFilters({ sort: $event })\""},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"      \u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cmat-label\u003eSort\u003c/mat-label\u003e"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"        \u003cmat-select [value]\u003d\"this.filter.sort.active\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"id\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cspan mat-sort-header\u003d\"id\"\u003eID\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/mat-option\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"title\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cspan mat-sort-header\u003d\"title\"\u003eTitle\u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/mat-option\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cmat-option value\u003d\"date\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cspan mat-sort-header\u003d\"date\"\u003eDate Updated\u003c/span\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/mat-option\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/mat-select\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cmat-label\u003eMilestone\u003c/mat-label\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cmat-select"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          #milestoneSelectorRef"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"          [value]\u003d\"this.filter.milestones\""},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"          (selectionChange)\u003d\"this.filtersService.updateFilters({ milestones: $event.value })\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"this.milestoneService.hasNoMilestones\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"          multiple"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cmat-select-trigger *ngIf\u003d\"this.milestoneService.hasNoMilestones\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cspan\u003eNo Milestones\u003c/span\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/mat-select-trigger\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cmat-option *ngFor\u003d\"let milestone of this.milestoneService.milestones\" [value]\u003d\"milestone.number\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            {{ milestone.title }}"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/mat-option\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/mat-select\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-tile\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003cmat-grid-tile class\u003d\"label-filter-grid-tile\" colspan\u003d\"1\"\u003e"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"    \u003capp-label-filter-bar\u003e\u003c/app-label-filter-bar\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-tile\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/mat-grid-list\u003e"}],"authorContributionMap":{"Arif-Khalid":13,"-":56}},{"path":"src/app/shared/filter-bar/filter-bar.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Input, OnDestroy, OnInit, QueryList, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatSelect } from \u0027@angular/material/select\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BehaviorSubject, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"import { DEFAULT_FILTER, Filter, FiltersService } from \u0027../../core/services/filters.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { MilestoneService } from \u0027../../core/services/milestone.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { FilterableComponent } from \u0027../issue-tables/filterableTypes\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LabelFilterBarComponent } from \u0027./label-filter-bar/label-filter-bar.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * This component is abstracted out filterbar used by both detailed-viewer page"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * and Issues-viewer"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  selector: \u0027app-filter-bar\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./filter-bar.component.html\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./filter-bar.component.css\u0027]"},{"lineNumber":19,"author":{"gitId":"-"},"content":"})"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class FilterBarComponent implements OnInit, AfterViewInit, OnDestroy {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @Input() views$: BehaviorSubject\u003cQueryList\u003cFilterableComponent\u003e\u003e;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  repoChangeSubscription: Subscription;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  /** Selected dropdown filter value */"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"  filter: Filter \u003d DEFAULT_FILTER;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  /** Milestone subscription */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  milestoneSubscription: Subscription;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @ViewChild(LabelFilterBarComponent, { static: true }) labelFilterBar: LabelFilterBarComponent;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027milestoneSelectorRef\u0027, { static: false }) milestoneSelectorRef: MatSelect;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"  constructor("},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"    public milestoneService: MilestoneService,"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"    public filtersService: FiltersService,"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"    private phaseService: PhaseService,"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"    private logger: LoggingService"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"  ) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.repoChangeSubscription \u003d this.phaseService.repoChanged$.subscribe((newRepo) \u003d\u003e this.initialize());"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    this.initialize();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"    this.filtersService.filter$.subscribe((dropdownFilter) \u003d\u003e {"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"      this.filter \u003d dropdownFilter;"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"      this.applyFilter();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.milestoneSubscription.unsubscribe();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.repoChangeSubscription.unsubscribe();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * Signals to IssuesDataTable that a change has occurred in filter."},{"lineNumber":62,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"  applyFilter() {"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"    this.views$?.value?.forEach((v) \u003d\u003e (v.retrieveFilterable().filter \u003d this.filter));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * Checks if program is filtering by type issue."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  isNotFilterIssue() {"},{"lineNumber":71,"author":{"gitId":"Arif-Khalid"},"content":"    return this.filter.type !\u003d\u003d \u0027issue\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Fetch and initialize all information from repository to populate Issue Dashboard."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  private initialize() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // Fetch milestones and update dropdown filter"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    this.milestoneSubscription \u003d this.milestoneService.fetchMilestones().subscribe("},{"lineNumber":80,"author":{"gitId":"-"},"content":"      (response) \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.logger.debug(\u0027IssuesViewerComponent: Fetched milestones from Github\u0027);"},{"lineNumber":82,"author":{"gitId":"Arif-Khalid"},"content":"        this.milestoneService.milestones.forEach((milestone) \u003d\u003e this.filter.milestones.push(milestone.number));"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      (err) \u003d\u003e {},"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      () \u003d\u003e {}"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":15,"-":73}},{"path":"src/app/shared/filter-bar/label-filter-bar/label-filter-bar.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cbutton mat-stroked-button *ngIf\u003d\"loaded\" [matMenuTriggerFor]\u003d\"menu\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  {{ selectedLabelNames.length \u003d\u003d 0 ? \u0027All\u0027 : selectedLabelNames.length }} Selected | {{ hiddenLabelNames?.size || 0 }} Hidden ▾"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/button\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cbutton mat-stroked-button disabled *ngIf\u003d\"!loaded\" color\u003d\"accent\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cmat-progress-bar mode\u003d\"query\"\u003e\u003c/mat-progress-bar\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cmat-menu #menu\u003d\"matMenu\" class\u003d\"popupmenu\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv (click)\u003d\"$event.stopPropagation()\" class\u003d\"popup-container\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cmat-form-field appearance\u003d\"standard\" class\u003d\"input-field\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cmat-label\u003eLabels\u003c/mat-label\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cinput #input matInput placeholder\u003d\"Find labels\" /\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/mat-form-field\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cbutton mat-button (click)\u003d\"removeAllSelection()\"\u003eRemove all\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!hasLabels(input.value)\" class\u003d\"no-labels\"\u003eNo Labels Found!\u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"scroll-container-wrapper\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"scroll-container\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cmat-selection-list [(ngModel)]\u003d\"selectedLabelNames\" (selectionChange)\u003d\"updateSelection()\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cmat-list-option"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            #option"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            *ngFor\u003d\"let label of this.labels$ | async\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"            [value]\u003d\"label.name\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"            [selected]\u003d\"selectedLabelNames.includes(label.name)\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"            class\u003d\"list-option\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"            [class.hidden]\u003d\"filter(input.value, label.name)\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"flexbox-container\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cbutton mat-icon-button *ngIf\u003d\"!hiddenLabelNames.has(label.name)\" (click)\u003d\"hide(label.name); $event.stopPropagation()\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003cmat-icon\u003evisibility\u003c/mat-icon\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003cbutton mat-icon-button *ngIf\u003d\"hiddenLabelNames.has(label.name)\" (click)\u003d\"show(label.name); $event.stopPropagation()\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cmat-icon\u003evisibility_off\u003c/mat-icon\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cmat-chip"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                [ngStyle]\u003d\"labelService.setLabelStyle(label.color)\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"hiddenLabelNames.has(label.name)\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                (click)\u003d\"simulateClick(option); $event.stopPropagation()\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003e"},{"lineNumber":43,"author":{"gitId":"nknguyenhc"},"content":"                {{ label.name }}"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003c/mat-chip\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/mat-list-option\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/mat-selection-list\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/mat-menu\u003e"}],"authorContributionMap":{"nknguyenhc":1,"-":50}},{"path":"src/app/shared/filter-bar/label-filter-bar/label-filter-bar.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatListOption, MatSelectionList } from \u0027@angular/material/list\u0027;"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import { Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SimpleLabel } from \u0027../../../core/models/label.model\u0027;"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import { FiltersService } from \u0027../../../core/services/filters.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../core/services/label.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../../core/services/logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-label-filter-bar\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./label-filter-bar.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./label-filter-bar.component.css\u0027]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class LabelFilterBarComponent implements OnInit, AfterViewInit, OnDestroy {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @ViewChild(MatSelectionList) matSelectionList;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  labels$: Observable\u003cSimpleLabel[]\u003e;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  allLabels: SimpleLabel[];"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  selectedLabelNames: string[] \u003d [];"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  hiddenLabelNames: Set\u003cstring\u003e \u003d new Set();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  loaded \u003d false;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  labelSubscription: Subscription;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"  constructor(private labelService: LabelService, private logger: LoggingService, private filtersService: FiltersService) {}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    this.loaded \u003d false;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      this.load();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      this.labels$ \u003d this.labelService.connect();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      this.labels$.subscribe((labels) \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.allLabels \u003d labels;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    this.labelSubscription?.unsubscribe();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  hide(label: string): void {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    if (this.hiddenLabelNames.has(label)) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.hiddenLabelNames.add(label);"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"    this.filtersService.updateFilters({ hiddenLabels: this.hiddenLabelNames });"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /** Show labels that were hidden */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  show(label: string): void {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    if (!this.hiddenLabelNames.has(label)) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.hiddenLabelNames.delete(label);"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":"    this.filtersService.updateFilters({ hiddenLabels: this.hiddenLabelNames });"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * chip as of the current project version consumes click events"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * this method is used as an workaround the issue."},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * https://github.com/angular/components/issues/19759"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  simulateClick(el: MatListOption): void {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    if (el.disabled) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    el.toggle();"},{"lineNumber":73,"author":{"gitId":"Arif-Khalid"},"content":"    this.updateSelection();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  /** loads in the labels in the repository */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  public load() {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    this.labelService.startPollLabels();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    this.labelSubscription \u003d this.labelService.fetchLabels().subscribe("},{"lineNumber":80,"author":{"gitId":"-"},"content":"      (response) \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.logger.debug(\u0027LabelFilterBarComponent: Fetched labels from Github\u0027);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      (err) \u003d\u003e {},"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      () \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.loaded \u003d true;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  filter(filter: string, target: string): boolean {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    return !target.toLowerCase().includes(filter.toLowerCase());"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  hasLabels(filter: string): boolean {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    if (this.allLabels \u003d\u003d\u003d undefined || this.allLabels.length \u003d\u003d\u003d 0) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"nknguyenhc"},"content":"    return this.allLabels.some((label) \u003d\u003e !this.filter(filter, label.name));"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  updateSelection(): void {"},{"lineNumber":102,"author":{"gitId":"Arif-Khalid"},"content":"    this.filtersService.updateFilters({ labels: this.selectedLabelNames });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  removeAllSelection(): void {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    this.matSelectionList.deselectAll();"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.updateSelection();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":1,"Arif-Khalid":8,"-":100}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-labels/issue-pr-card-labels.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"nknguyenhc"},"content":"import { GithubLabel } from \u0027../../../core/models/github/github-label.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../core/services/label.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-pr-card-labels\u0027,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue-pr-card-labels.component.html\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue-pr-card-labels.component.css\u0027]"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class IssuePrCardLabelsComponent {"},{"lineNumber":11,"author":{"gitId":"nknguyenhc"},"content":"  @Input() labels: GithubLabel[];"},{"lineNumber":12,"author":{"gitId":"nknguyenhc"},"content":"  @Input() labelSet: Set\u003cstring\u003e;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  constructor(public labelService: LabelService) {}"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":3,"-":11}},{"path":"src/app/shared/issue-pr-card/issue-pr-card.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cmat-card class\u003d\"card\" [ngClass]\u003d\"getIssueOpenOrCloseColorCSSClass()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ca class\u003d\"no-underline link-grey-dark\" (click)\u003d\"viewIssueInBrowser($event)\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cspan [matTooltip]\u003d\"this.issue.updated_at\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003capp-issue-pr-card-header [issue]\u003d\"issue\"\u003e\u003c/app-issue-pr-card-header\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cmat-card-content\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003capp-issue-pr-card-milestone [milestone]\u003d\"issue.milestone\"\u003e\u003c/app-issue-pr-card-milestone\u003e"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"        \u003capp-issue-pr-card-labels [labels]\u003d\"issue.githubLabels\" [labelSet]\u003d\"filter?.hiddenLabels\"\u003e\u003c/app-issue-pr-card-labels\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003c/mat-card-content\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/a\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/mat-card\u003e"}],"authorContributionMap":{"Arif-Khalid":1,"-":10}},{"path":"src/app/shared/issue-pr-card/issue-pr-card.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"import { Filter } from \u0027../../core/services/filters.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  selector: \u0027app-issue-pr-card\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issue-pr-card.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issue-pr-card.component.css\u0027]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class IssuePrCardComponent {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"  @Input() filter?: Filter;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor(private logger: LoggingService, private githubService: GithubService, public labelService: LabelService) {}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  /** Opens issue in new window */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  viewIssueInBrowser(event: Event) {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    this.logger.info(`CardViewComponent: Opening Issue ${this.issue.id} on Github`);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    this.githubService.viewIssueInBrowser(this.issue.id, event);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  /** Returns CSS class for border color */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  getIssueOpenOrCloseColorCSSClass() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    if (this.issue.state \u003d\u003d\u003d \u0027OPEN\u0027) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      if (this.issue.isDraft) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return \u0027grey\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return \u0027border-green\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    } else if (this.issue.issueOrPr \u003d\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 this.issue.state \u003d\u003d\u003d \u0027CLOSED\u0027) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      return \u0027border-red\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    } else if (this.issue.issueOrPr \u003d\u003d\u003d \u0027Issue\u0027 \u0026\u0026 this.issue.stateReason \u003d\u003d\u003d \u0027NOT_PLANNED\u0027) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      return \u0027border-gray\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      return \u0027border-purple\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * Truncates description to fit in card content."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * @param description - Description of Issue that is to be displayed."},{"lineNumber":45,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  fitDescriptionText(): string {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":48,"author":{"gitId":"-"},"content":"    const MAX_CHARACTER_LENGTH \u003d 72;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return this.issue.description.slice(0, MAX_CHARACTER_LENGTH) + ELLIPSES;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":2,"-":51}},{"path":"src/app/shared/issue-tables/IssuesDataTable.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DataSource } from \u0027@angular/cdk/table\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BehaviorSubject, merge, Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"import { DEFAULT_FILTER, Filter } from \u0027../../core/services/filters.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"import { applyDropdownFilter } from \u0027./dropdownfilter\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FilterableSource } from \u0027./filterableTypes\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { paginateData } from \u0027./issue-paginator\u0027;"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"import { applySort } from \u0027./issue-sorter\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { applySearchFilter } from \u0027./search-filter\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class IssuesDataTable extends DataSource\u003cIssue\u003e implements FilterableSource {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  public count \u003d 0;"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"  private filterChange \u003d new BehaviorSubject(DEFAULT_FILTER);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  private issuesSubject \u003d new BehaviorSubject\u003cIssue[]\u003e([]);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  private issueSubscription: Subscription;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  public isLoading$ \u003d this.issueService.isLoading.asObservable();"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private paginator: MatPaginator,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private displayedColumn: string[],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private assignee?: GithubUser,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private defaultFilter?: (issue: Issue) \u003d\u003e boolean"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  connect(): Observable\u003cIssue[]\u003e {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    return this.issuesSubject.asObservable();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  disconnect() {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    this.filterChange.complete();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    this.issuesSubject.complete();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.issueSubscription.unsubscribe();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.issueService.stopPollIssues();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  loadIssues() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    let page;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      page \u003d this.paginator.page;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"    const displayDataChanges \u003d [this.issueService.issues$, page, this.filterChange].filter((x) \u003d\u003e x !\u003d\u003d undefined);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.issueService.startPollIssues();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.issueSubscription \u003d merge(...displayDataChanges)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // maps each change in display value to new issue ordering or filtering"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        map(() \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          let data \u003d \u003cIssue[]\u003eObject.values(this.issueService.issues$.getValue()).reverse();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          if (this.defaultFilter) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            data \u003d data.filter(this.defaultFilter);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          // Filter by assignee of issue"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          if (this.assignee) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            data \u003d data.filter((issue) \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              if (issue.issueOrPr \u003d\u003d\u003d \u0027PullRequest\u0027) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                return issue.author \u003d\u003d\u003d this.assignee.login;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              } else if (!issue.assignees) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                return issue.assignees.includes(this.assignee.login);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            data \u003d data.filter((issue) \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"              return issue.issueOrPr !\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 issue.assignees.length \u003d\u003d\u003d 0;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"Arif-Khalid"},"content":"          // Apply Filters"},{"lineNumber":79,"author":{"gitId":"Arif-Khalid"},"content":"          data \u003d applyDropdownFilter(this.filter, data);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"Arif-Khalid"},"content":"          data \u003d applySearchFilter(this.filter.title, this.displayedColumn, this.issueService, data);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          this.count \u003d data.length;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Arif-Khalid"},"content":"          data \u003d applySort(this.filter.sort, data);"},{"lineNumber":85,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"          if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            data \u003d paginateData(this.paginator, data);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"          return data;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .subscribe((issues) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.issuesSubject.next(issues);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"Arif-Khalid"},"content":"  get filter(): Filter {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    return this.filterChange.value;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"Arif-Khalid"},"content":"  set filter(filter: Filter) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    this.filterChange.next(filter);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":12,"-":92}},{"path":"src/app/shared/issue-tables/dropdownfilter.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"import { Filter } from \u0027../../core/services/filters.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * This module serves to improve separation of concerns in IssuesDataTable.ts and IssueList.ts module by containing the logic for"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * applying dropdownFilter to the issues data table in this module."},{"lineNumber":7,"author":{"gitId":"-"},"content":" * This module exports a single function applyDropDownFilter which is called by IssueList."},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":" * This functions returns the data passed in after all the filters of dropdownFilters are applied"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"export function applyDropdownFilter(filter: Filter, data: Issue[]): Issue[] {"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"  const filteredData: Issue[] \u003d data.filter((issue) \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    let ret \u003d true;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"    if (filter.status \u003d\u003d\u003d \u0027open\u0027) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      ret \u003d ret \u0026\u0026 issue.state \u003d\u003d\u003d \u0027OPEN\u0027;"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    } else if (filter.status \u003d\u003d\u003d \u0027closed\u0027) {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      // there is apparently also a status called \u0027all\u0027 based on github api"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      ret \u003d ret \u0026\u0026 issue.state \u003d\u003d\u003d \u0027CLOSED\u0027;"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"    } else if (filter.status \u003d\u003d\u003d \u0027merged\u0027) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      ret \u003d ret \u0026\u0026 issue.state \u003d\u003d\u003d \u0027MERGED\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"    if (filter.type \u003d\u003d\u003d \u0027issue\u0027) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      ret \u003d ret \u0026\u0026 issue.issueOrPr \u003d\u003d\u003d \u0027Issue\u0027;"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"    } else if (filter.type \u003d\u003d\u003d \u0027pullrequest\u0027) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      ret \u003d ret \u0026\u0026 issue.issueOrPr \u003d\u003d\u003d \u0027PullRequest\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"    ret \u003d ret \u0026\u0026 filter.milestones.some((milestone) \u003d\u003e issue.milestone.number \u003d\u003d\u003d milestone);"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"    return ret \u0026\u0026 filter.labels.every((label) \u003d\u003e issue.labels.includes(label));"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"  });"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"  return filteredData;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":13,"-":21}},{"path":"src/app/shared/issue-tables/filterableTypes.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * This module aims to abstract out classes that can be filtered"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import { Filter } from \u0027../../core/services/filters.service\u0027;"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * FilterableSource is an interface that contains a source that can be filtered"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * by a string filter or dropdownFilter."},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The source should set filter and dropdownFilter as a getter and setter"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * and applies the filter when these variables are changed."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export interface FilterableSource {"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"  filter: Filter;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * FilterComponent is a component that contains a FilterableSource"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export interface FilterableComponent {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  retrieveFilterable: () \u003d\u003e FilterableSource;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":3,"-":19}},{"path":"src/app/shared/issue-tables/issue-sorter.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"import { Sort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"export function applySort(sort: Sort, data: Issue[]): Issue[] {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  if (!sort.active) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    return data;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  const direction: number \u003d sort.direction \u003d\u003d\u003d \u0027asc\u0027 ? 1 : -1;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  return data.sort((a, b) \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    switch (sort.active) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      case \u0027assignees\u0027:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a.assignees.join(\u0027, \u0027), b.assignees.join(\u0027, \u0027));"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      case \u0027id\u0027:"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return direction * compareByIntegerValue(a.id, b.id);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      case \u0027date\u0027:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return direction * compareByDateValue(a.updated_at, b.updated_at);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // title, responseTag are string values"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a[sort.active], b[sort.active]);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"function compareByStringValue(valueA: string, valueB: string): number {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  const orderA \u003d String(valueA || \u0027\u0027).toUpperCase();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  const orderB \u003d String(valueB || \u0027\u0027).toUpperCase();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  return orderA \u003c orderB ? -1 : 1;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"function compareByIntegerValue(valueA: number, valueB: number): number {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  return valueA \u003c valueB ? -1 : 1;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"function compareByDateValue(valueA: string, valueB: string): number {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  return moment(valueA).isBefore(valueB) ? -1 : 1;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Arif-Khalid":2,"-":37}},{"path":"src/app/shared/layout/header.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cmat-toolbar color\u003d\"primary\" style\u003d\"position: sticky; position: -webkit-sticky; top: 0; z-index: 1000\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"isBackButtonShown()\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"    mat-icon-button"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    class\u003d\"mat-toolbar mat-primary back-button\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    style\u003d\"transform: scale(0.9)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    (click)\u003d\"goBack()\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003earrow_back_ios\u003c/mat-icon\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"MadLamprey"},"content":"  \u003ca"},{"lineNumber":12,"author":{"gitId":"MadLamprey"},"content":"    class\u003d\"mat-toolbar mat-primary\""},{"lineNumber":13,"author":{"gitId":"MadLamprey"},"content":"    style\u003d\"text-decoration: none\""},{"lineNumber":14,"author":{"gitId":"MadLamprey"},"content":"    [routerLink]\u003d\"phaseService.isRepoSet() ? phaseService.currentPhase : null\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003eWATcher v{{ this.getVersion() }}\u003c/a"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cspan id\u003d\"phase-descriptor\" *ngIf\u003d\"auth.isAuthenticated()\" style\u003d\"margin-left: 10px\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ({{ this.getPhaseDescription(phaseService.currentPhase) }})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 this.phaseService.sessionData.sessionRepo.length \u003e 1\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cbutton mat-button [matMenuTriggerFor]\u003d\"menu\"\u003e\u003cmat-icon style\u003d\"color: white\"\u003eexpand_more\u003c/mat-icon\u003e\u003c/button\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cmat-menu #menu\u003d\"matMenu\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        mat-menu-item"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        *ngFor\u003d\"let sessionRepo of this.phaseService.sessionData.sessionRepo\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        (click)\u003d\"this.routeToSelectedPhase(sessionRepo.phase)\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cspan\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cmat-icon [ngStyle]\u003d\"{ color: \u0027green\u0027, visibility: this.phaseService.currentPhase \u003d\u003d\u003d sessionRepo.phase ? \u0027visible\u0027 : \u0027hidden\u0027 }\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003edone\u003c/mat-icon"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          {{ this.getPhaseDescription(sessionRepo.phase) }}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/mat-menu\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c!-- everything else --\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 phaseService.isRepoSet()\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cspan id\u003d\"phase-descriptor\" style\u003d\"margin-left: 10px\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      {{ this.currentRepo || \u0027No Repository Set\u0027 }}"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/span\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003cbutton"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      mat-button"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      matTooltip\u003d\"{{ phaseService.isRepoSet() ? \u0027Change Repository\u0027 : \u0027Select Repository\u0027 }}\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"      (click)\u003d\"this.openChangeRepoDialog()\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003cmat-icon\u003eedit\u003c/mat-icon\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cbutton mat-button matTooltip\u003d\"Download WATcher Log\" (click)\u003d\"this.exportLogFile()\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003ereceipt\u003c/mat-icon\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003cbutton mat-button matTooltip\u003d\"Give feedback about WATcher\" (click)\u003d\"openIssueTracker()\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003email\u003c/mat-icon\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 phaseService.isRepoSet() \u0026\u0026 isOpenUrlButtonShown()\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    mat-button"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    matTooltip\u003d\"View current page on GitHub\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    (click)\u003d\"viewBrowser()\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eopen_in_new\u003c/mat-icon\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"sync-spinner\" *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 (this.isLoading$ | async); else notLoading\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003cmat-spinner class\u003d\"white-spinner\" [diameter]\u003d\"20\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003cng-template #notLoading\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003cbutton"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 phaseService.isRepoSet() \u0026\u0026 isReloadButtonShown() \u0026\u0026 !this.isReloadButtonDisabled\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"      mat-button"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      matTooltip\u003d\"Synchronize with Github data\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"      (click)\u003d\"reload()\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    \u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      Sync"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003cmat-icon\u003erefresh\u003c/mat-icon\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"sync-spinner\" *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 this.isReloadButtonDisabled\"\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cspan style\u003d\"font-size: 14px; margin-right: 7px\"\u003eSync\u003c/span\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003cmat-spinner class\u003d\"white-spinner\" [diameter]\u003d\"20\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003cbutton *ngIf\u003d\"auth.isAuthenticated()\" mat-button matTooltip\u003d\"Log out\" (click)\u003d\"openLogOutDialog(); $event.stopPropagation()\"\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    ({{ userService.currentUser.loginId }})"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003cmat-icon style\u003d\"margin-left: 2px\"\u003eexit_to_app\u003c/mat-icon\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/mat-toolbar\u003e"}],"authorContributionMap":{"MadLamprey":4,"-":94}},{"path":"src/app/shared/layout/header.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Location } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Router, RoutesRecognized } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { filter, pairwise, switchMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { STORAGE_KEYS } from \u0027../../core/constants/storage-keys.constants\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../core/models/phase.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Repo } from \u0027../../core/models/repo.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../../core/services/dialog.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"import { FiltersService } from \u0027../../core/services/filters.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { PhaseDescription, PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { RepoSessionStorageService } from \u0027../../core/services/repo-session-storage.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { RepoUrlCacheService } from \u0027../../core/services/repo-url-cache.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"const ISSUE_TRACKER_URL \u003d \u0027https://github.com/CATcher-org/WATcher/issues\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  selector: \u0027app-layout-header\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./header.component.html\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class HeaderComponent implements OnInit {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  private prevUrl;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  isReloadButtonDisabled \u003d false;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  ISSUE_FILTER \u003d \u0027/issues?q\u003dis:issue+is:all\u0027; // the filtered list must be an issue and must be open"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  TUTORIAL_LABEL \u003d \u0027+label:tutorial.\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  TEAM_LABEL \u003d \u0027+label:team.\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  EXCLUDE_DUPLICATE \u003d \u0027+-label:duplicate\u0027; // exclude duplicate issues"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  public isLoading$: Observable\u003cboolean\u003e;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  // Messages for the modal popup window upon logging out"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  private readonly logOutDialogMessages \u003d [\u0027Do you wish to log out?\u0027];"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  private readonly yesButtonDialogMessage \u003d \u0027Yes, I wish to log out\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  private readonly noButtonDialogMessage \u003d \"No, I don\u0027t wish to log out\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  /** Model for the displayed repository name */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  currentRepo \u003d \u0027\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public auth: AuthService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public logger: LoggingService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private location: Location,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private repoUrlCacheService: RepoUrlCacheService,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private labelService: LabelService,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private dialogService: DialogService,"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"    private repoSessionStorageService: RepoSessionStorageService,"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"    private filtersService: FiltersService"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    router.events"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":67,"author":{"gitId":"-"},"content":"        filter((e: any) \u003d\u003e e instanceof RoutesRecognized),"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        pairwise()"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      .subscribe((e) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.prevUrl \u003d e[0].urlAfterRedirects;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    this.auth.currentAuthState.subscribe(() \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      if (auth.isAuthenticated() \u0026\u0026 !repoSessionStorageService.hasRepoLocation()) {"},{"lineNumber":76,"author":{"gitId":"nknguyenhc"},"content":"        if (!this.auth.hasNext()) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          this.openChangeRepoDialog();"},{"lineNumber":78,"author":{"gitId":"nknguyenhc"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"nknguyenhc"},"content":"          this.auth.redirectToNext();"},{"lineNumber":80,"author":{"gitId":"nknguyenhc"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    this.phaseService.repoSetState.subscribe((state) \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      if (auth.isAuthenticated() \u0026\u0026 phaseService.isRepoSet()) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.initializeRepoNameInTitle();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.isLoading$ \u003d this.issueService.isLoading.asObservable();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * Replaces and resets the current phase data and routes the app to the"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * newly selected phase."},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * @param openPhase - Open Phase that is selected by the user."},{"lineNumber":99,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  routeToSelectedPhase(openPhase: string): void {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    // Do nothing if the selected phase is the current phase."},{"lineNumber":102,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase[openPhase]) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    // Replace Current Phase Data."},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.phaseService.changePhase(Phase[openPhase]);"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    // Remove current phase issues and load selected phase issues."},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.issueService.reset(false);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    this.labelService.reset();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    this.reload();"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    // Route app to new phase."},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  isBackButtonShown(): boolean {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    return `/${this.phaseService.currentPhase}` !\u003d\u003d this.router.url \u0026\u0026 this.router.url !\u003d\u003d \u0027/\u0027 \u0026\u0026 !this.router.url.startsWith(\u0027/?code\u0027);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"  isReloadButtonShown(): boolean {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    return this.router.url !\u003d\u003d \u0027/phaseBugReporting/issues/new\u0027;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  isOpenUrlButtonShown(): boolean {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    return this.phaseService.currentPhase \u003d\u003d\u003d Phase.issuesViewer || this.phaseService.currentPhase \u003d\u003d\u003d Phase.activityDashboard;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  getVersion(): string {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    return AppConfig.version;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  getPhaseDescription(openPhase: string): string {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return PhaseDescription[openPhase];"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  goBack() {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    if (this.prevUrl \u003d\u003d\u003d `/${this.phaseService.currentPhase}/issues/new`) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      this.location.back();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  viewBrowser() {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.activityDashboard) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      window.open(`https://github.com/${this.phaseService.currentRepo.owner}/${this.phaseService.currentRepo.name}/pulse`);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    const routerUrl \u003d this.router.url.substring(1); // remove the first \u0027/\u0027 from string"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    const issueUrlIndex \u003d routerUrl.indexOf(\u0027/\u0027); // find the index of second \u0027/\u0027"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    let issueUrl: string;"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    // If can\u0027t find the index of second \u0027/\u0027, then router is at the /issues (table list) page"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    if (issueUrlIndex \u003c 0) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      // Apply filters to the issueUrl"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      issueUrl \u003d this.ISSUE_FILTER;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      // issueUrl will be from the second \u0027/\u0027"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      issueUrl \u003d routerUrl.substring(issueUrlIndex);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    // Open the url in user\u0027s preferred browser"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    window.open(\u0027https://github.com/\u0027.concat(this.githubService.getRepoURL()).concat(issueUrl));"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  openIssueTracker() {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    window.open(ISSUE_TRACKER_URL);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  reload() {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    this.isReloadButtonDisabled \u003d true;"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    this.githubEventService.reloadPage().subscribe("},{"lineNumber":177,"author":{"gitId":"-"},"content":"      (success) \u003d\u003e success,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error, () \u003d\u003e this.githubEventService.reloadPage());"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    this.labelService.fetchLabels().subscribe("},{"lineNumber":184,"author":{"gitId":"-"},"content":"      (success) \u003d\u003e success,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error, () \u003d\u003e this.labelService.fetchLabels());"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    // Prevent user from spamming the reload button"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      this.isReloadButtonDisabled \u003d false;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }, 3000);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"  logOut() {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    this.auth.logOut();"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"  openLogOutDialog() {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":202,"author":{"gitId":"-"},"content":"      this.logOutDialogMessages,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      this.yesButtonDialogMessage,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      this.noButtonDialogMessage"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      if (res) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        this.logger.info(`HeaderComponent: Logging out from ${this.userService.currentUser.loginId}`);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        this.logOut();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"  exportLogFile() {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    this.logger.exportLogFile();"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"  initializeRepoNameInTitle() {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    if (Repo.isInvalidRepoName(this.phaseService.currentRepo)) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    const currentRepoString \u003d this.phaseService.currentRepo.toString();"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    this.logger.info(`HeaderComponent: initializing current repository name as ${currentRepoString}`);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    this.currentRepo \u003d currentRepoString;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Change repository viewed on Issue Dashboard, if a valid repository is provided."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   * Re-open dialog to prompt for another repository if an invalid one is provided."},{"lineNumber":231,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  changeRepositoryIfValid(repo: Repo, newRepoString: string) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    if (newRepoString \u003d\u003d\u003d this.currentRepo) {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":237,"author":{"gitId":"Arif-Khalid"},"content":"    this.filtersService.clearFilters();"},{"lineNumber":238,"author":{"gitId":"Arif-Khalid"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    this.phaseService"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      .changeRepositoryIfValid(repo)"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      .then(() \u003d\u003e {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        this.auth.setTitleWithPhaseDetail();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        this.currentRepo \u003d newRepoString;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      .catch((error) \u003d\u003e {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        this.openChangeRepoDialog();"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  openChangeRepoDialog() {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    const dialogRef \u003d this.dialogService.openChangeRepoDialog(this.currentRepo);"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      if (!res) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      const newRepo \u003d Repo.of(res);"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"      if (this.phaseService.isRepoSet()) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        this.changeRepositoryIfValid(newRepo, newRepo.toString());"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":264,"author":{"gitId":"-"},"content":"         * From session-selection.component.ts"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":266,"author":{"gitId":"-"},"content":"         * Persist repo information in local browser storage"},{"lineNumber":267,"author":{"gitId":"-"},"content":"         * To retrieve after authentication redirects back to WATcher"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * Since localStorage::setItem with an undefined value can result in"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         * the subsequent value being stored as a string being \u0027undefined\u0027, check"},{"lineNumber":271,"author":{"gitId":"-"},"content":"         * if undefined before storing it. Let\u0027s reset the items before setting them."},{"lineNumber":272,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        window.localStorage.removeItem(STORAGE_KEYS.ORG);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        window.localStorage.removeItem(STORAGE_KEYS.DATA_REPO);"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        if (newRepo) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"          window.localStorage.setItem(STORAGE_KEYS.ORG, newRepo.owner);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"          window.localStorage.setItem(STORAGE_KEYS.DATA_REPO, newRepo.name);"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"          this.repoUrlCacheService.cache(newRepo.toString());"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        this.auth.setRepo().subscribe();"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nknguyenhc":4,"Arif-Khalid":6,"-":276}},{"path":"src/test.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// This file is required by karma.conf.js and loads recursively all the .spec and framework files"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"// tslint:disable:ordered-imports"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"// Ordered-imports rule is disabled here because the import statement for \u0027zone-testing\u0027 must be"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"// at the top to prevent test setup breakage in \u0027npm run test\u0027."},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"import \u0027zone.js/dist/zone-testing\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { getTestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from \u0027@angular/platform-browser-dynamic/testing\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"declare const require: any;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"// First, initialize the Angular testing environment."},{"lineNumber":13,"author":{"gitId":"-"},"content":"getTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting());"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Then we find all the tests."},{"lineNumber":15,"author":{"gitId":"-"},"content":"const context \u003d require.context(\u0027../tests\u0027, true, /\\.spec\\.ts$/);"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// And load the modules."},{"lineNumber":17,"author":{"gitId":"-"},"content":"context.keys().map(context);"}],"authorContributionMap":{"NereusWB922":4,"-":13}},{"path":"tests/app/auth/login/login.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { LoginComponent } from \u0027../../../../src/app/auth/login/login.component\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { AuthService, AuthState } from \u0027../../../../src/app/core/services/auth.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../../src/app/core/services/error-handling.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../../../src/app/core/services/logging.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"describe(\u0027LoginComponent\u0027, () \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"  let authServiceSpy: jasmine.SpyObj\u003cAuthService\u003e;"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"  let errorHandlingServiceSpy: jasmine.SpyObj\u003cErrorHandlingService\u003e;"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"  let loggingServiceSpy: jasmine.SpyObj\u003cLoggingService\u003e;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  let component: LoginComponent;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cLoginComponent\u003e;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  beforeEach("},{"lineNumber":15,"author":{"gitId":"-"},"content":"    waitForAsync(() \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"      authServiceSpy \u003d jasmine.createSpyObj\u003cAuthService\u003e(\u0027AuthService\u0027, [\u0027startOAuthProcess\u0027, \u0027changeAuthState\u0027]);"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"      loggingServiceSpy \u003d jasmine.createSpyObj\u003cLoggingService\u003e(\u0027LoggingService\u0027, [\u0027info\u0027]);"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"      errorHandlingServiceSpy \u003d jasmine.createSpyObj\u003cErrorHandlingService\u003e(\u0027ErrorHandlingService\u0027, [\u0027handleError\u0027]);"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"      TestBed.configureTestingModule({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        providers: ["},{"lineNumber":22,"author":{"gitId":"NereusWB922"},"content":"          { provide: AuthService, useValue: authServiceSpy },"},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"          { provide: LoggingService, useValue: loggingServiceSpy },"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"          { provide: ErrorHandlingService, useValue: errorHandlingServiceSpy }"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        declarations: [LoginComponent]"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      }).compileComponents();"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"      fixture \u003d TestBed.createComponent(LoginComponent);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      component \u003d fixture.componentInstance;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      fixture.detectChanges();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  );"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027startPublicOnlyLoginProcess should call startLoginProcess with false\u0027, () \u003d\u003e {"},{"lineNumber":40,"author":{"gitId":"NereusWB922"},"content":"    spyOn(component, \u0027startLoginProcess\u0027);"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"NereusWB922"},"content":"    component.startPublicOnlyLoginProcess();"},{"lineNumber":43,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":44,"author":{"gitId":"NereusWB922"},"content":"    expect(component.startLoginProcess).toHaveBeenCalledWith(false);"},{"lineNumber":45,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":47,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027startIncludePrivateLoginProcess should call startLoginProcess with true\u0027, () \u003d\u003e {"},{"lineNumber":48,"author":{"gitId":"NereusWB922"},"content":"    spyOn(component, \u0027startLoginProcess\u0027);"},{"lineNumber":49,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":50,"author":{"gitId":"NereusWB922"},"content":"    component.startIncludePrivateLoginProcess();"},{"lineNumber":51,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":52,"author":{"gitId":"NereusWB922"},"content":"    expect(component.startLoginProcess).toHaveBeenCalledWith(true);"},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":55,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should call authService.startOAuthProcess on startLoginProcess\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"NereusWB922"},"content":"    const hasPrivateConsent \u003d false;"},{"lineNumber":57,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":58,"author":{"gitId":"NereusWB922"},"content":"    component.startLoginProcess(hasPrivateConsent);"},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"    expect(authServiceSpy.startOAuthProcess).toHaveBeenCalledWith(hasPrivateConsent);"},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":"    expect(loggingServiceSpy.info).toHaveBeenCalledWith(\u0027LoginComponent: Beginning login process\u0027);"},{"lineNumber":62,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":63,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should call error handling methods when error is thrown\u0027, () \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"NereusWB922"},"content":"    const hasPrivateConsent \u003d false;"},{"lineNumber":66,"author":{"gitId":"NereusWB922"},"content":"    const errorMessage \u003d \u0027Error!\u0027;"},{"lineNumber":67,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":68,"author":{"gitId":"NereusWB922"},"content":"    const error: Error \u003d new Error(errorMessage);"},{"lineNumber":69,"author":{"gitId":"NereusWB922"},"content":"    authServiceSpy.startOAuthProcess.and.throwError(error);"},{"lineNumber":70,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":71,"author":{"gitId":"NereusWB922"},"content":"    component.startLoginProcess(hasPrivateConsent);"},{"lineNumber":72,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":73,"author":{"gitId":"NereusWB922"},"content":"    expect(authServiceSpy.changeAuthState).toHaveBeenCalledWith(AuthState.NotAuthenticated);"},{"lineNumber":74,"author":{"gitId":"NereusWB922"},"content":"    expect(errorHandlingServiceSpy.handleError).toHaveBeenCalledWith(error);"},{"lineNumber":75,"author":{"gitId":"NereusWB922"},"content":"    expect(loggingServiceSpy.info.calls.allArgs()).toEqual(["},{"lineNumber":76,"author":{"gitId":"NereusWB922"},"content":"      [\u0027LoginComponent: Beginning login process\u0027],"},{"lineNumber":77,"author":{"gitId":"NereusWB922"},"content":"      [`LoginComponent: Login process failed with an error: ${error}`]"},{"lineNumber":78,"author":{"gitId":"NereusWB922"},"content":"    ]);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":80,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":49,"-":31}},{"path":"tests/app/core/models/session-model.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"import { Phase } from \u0027../../../../src/app/core/models/phase.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  assertSessionDataIntegrity,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  NO_VALID_OPEN_PHASES,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  OPENED_PHASE_REPO_UNDEFINED,"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"  SESSION_DATA_MISSING_FIELDS,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  SESSION_DATA_UNAVAILABLE"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../../../../src/app/core/models/session.model\u0027;"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"import { VALID_SESSION_DATA, WATCHER_REPO } from \u0027../../../constants/session.constants\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"describe(\u0027Session Model\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  describe(\u0027assertSessionDataIntegrity()\u0027, () \u003d\u003e {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    it(\u0027should throw error on unavailable session\u0027, () \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      of(undefined)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(SESSION_DATA_UNAVAILABLE))"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error on session data with invalid session\u0027, () \u003d\u003e {"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: null })"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(SESSION_DATA_MISSING_FIELDS))"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: [] })"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"        .subscribe({"},{"lineNumber":33,"author":{"gitId":"NereusWB922"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":34,"author":{"gitId":"NereusWB922"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(SESSION_DATA_MISSING_FIELDS))"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: \u0027repo\u0027 })"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":40,"author":{"gitId":"NereusWB922"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(SESSION_DATA_MISSING_FIELDS))"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error on session with invalid phases\u0027, () \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: [{ phase: \u0027invalidPhase\u0027 as Phase, repos: [WATCHER_REPO] }] })"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(NO_VALID_OPEN_PHASES))"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error on session data with invalid repo\u0027, () \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: [{ phase: Phase.issuesViewer, repo: undefined }] })"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: [{ phase: Phase.issuesViewer, repo: null }] })"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":66,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: [{ phase: Phase.issuesViewer, repo: \u0027\u0027 }] })"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":72,"author":{"gitId":"NereusWB922"},"content":"      of({ sessionRepo: [{ phase: Phase.issuesViewer, repo: [] }] })"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":75,"author":{"gitId":"NereusWB922"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":76,"author":{"gitId":"NereusWB922"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should pass for valid session data\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"NereusWB922"},"content":"      of(VALID_SESSION_DATA)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":83,"author":{"gitId":"NereusWB922"},"content":"        .subscribe((el) \u003d\u003e expect(el).toEqual(VALID_SESSION_DATA));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":86,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":25,"-":61}},{"path":"tests/app/shared/filter-bar/label-filter-bar/label-filter-bar.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"import { NO_ERRORS_SCHEMA } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"import { ComponentFixture, fakeAsync, TestBed, tick } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { MatSelectionList } from \u0027@angular/material/list\u0027;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"import { MatMenuModule } from \u0027@angular/material/menu\u0027;"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"import { BehaviorSubject, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"import { SimpleLabel } from \u0027../../../../../src/app/core/models/label.model\u0027;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"import { FiltersService } from \u0027../../../../../src/app/core/services/filters.service\u0027;"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"import { LabelService } from \u0027../../../../../src/app/core/services/label.service\u0027;"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"import { LoggingService } from \u0027../../../../../src/app/core/services/logging.service\u0027;"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"import { LabelFilterBarComponent } from \u0027../../../../../src/app/shared/filter-bar/label-filter-bar/label-filter-bar.component\u0027;"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"import { LABEL_NAME_SEVERITY_HIGH, LABEL_NAME_SEVERITY_LOW, SEVERITY_SIMPLE_LABELS } from \u0027../../../../constants/label.constants\u0027;"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"describe(\u0027LabelFilterBarComponent\u0027, () \u003d\u003e {"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"  let component: LabelFilterBarComponent;"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  let fixture: ComponentFixture\u003cLabelFilterBarComponent\u003e;"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"  let labelServiceSpy: jasmine.SpyObj\u003cLabelService\u003e;"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"  let loggingServiceSpy: jasmine.SpyObj\u003cLoggingService\u003e;"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"  let filtersServiceSpy: jasmine.SpyObj\u003cFiltersService\u003e;"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"  let labelsSubject: BehaviorSubject\u003cSimpleLabel[]\u003e;"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":21,"author":{"gitId":"NereusWB922"},"content":"  beforeEach(async () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"NereusWB922"},"content":"    labelServiceSpy \u003d jasmine.createSpyObj(\u0027LabelService\u0027, [\u0027connect\u0027, \u0027startPollLabels\u0027, \u0027fetchLabels\u0027]);"},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"    loggingServiceSpy \u003d jasmine.createSpyObj(\u0027LoggingService\u0027, [\u0027info\u0027, \u0027debug\u0027]);"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"    filtersServiceSpy \u003d jasmine.createSpyObj(\u0027FiltersService\u0027, [\u0027updateFilters\u0027]);"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":26,"author":{"gitId":"NereusWB922"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":27,"author":{"gitId":"NereusWB922"},"content":"      providers: ["},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"        { provide: LabelService, useValue: labelServiceSpy },"},{"lineNumber":29,"author":{"gitId":"NereusWB922"},"content":"        { provide: LoggingService, useValue: loggingServiceSpy },"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"        { provide: FiltersService, useValue: filtersServiceSpy }"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"      ],"},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"      imports: [MatMenuModule],"},{"lineNumber":33,"author":{"gitId":"NereusWB922"},"content":"      declarations: [LabelFilterBarComponent],"},{"lineNumber":34,"author":{"gitId":"NereusWB922"},"content":"      schemas: [NO_ERRORS_SCHEMA]"},{"lineNumber":35,"author":{"gitId":"NereusWB922"},"content":"    }).compileComponents();"},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":37,"author":{"gitId":"NereusWB922"},"content":"    fixture \u003d TestBed.createComponent(LabelFilterBarComponent);"},{"lineNumber":38,"author":{"gitId":"NereusWB922"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":39,"author":{"gitId":"NereusWB922"},"content":"    fixture.detectChanges();"},{"lineNumber":40,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":41,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":42,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":43,"author":{"gitId":"NereusWB922"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":44,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":45,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027ngAfterViewInit\u0027, () \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"NereusWB922"},"content":"    beforeEach(() \u003d\u003e {"},{"lineNumber":48,"author":{"gitId":"NereusWB922"},"content":"      // Setup labels observable"},{"lineNumber":49,"author":{"gitId":"NereusWB922"},"content":"      labelsSubject \u003d new BehaviorSubject\u003cSimpleLabel[]\u003e([]);"},{"lineNumber":50,"author":{"gitId":"NereusWB922"},"content":"      labelServiceSpy.fetchLabels.and.returnValue(of([]));"},{"lineNumber":51,"author":{"gitId":"NereusWB922"},"content":"      labelServiceSpy.connect.and.returnValue(labelsSubject.asObservable());"},{"lineNumber":52,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":54,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should update allLabels with latest emmitted value after ngAfterViewInit\u0027, fakeAsync(() \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"NereusWB922"},"content":"      component.ngAfterViewInit();"},{"lineNumber":56,"author":{"gitId":"NereusWB922"},"content":"      labelsSubject.next(SEVERITY_SIMPLE_LABELS);"},{"lineNumber":57,"author":{"gitId":"NereusWB922"},"content":"      tick();"},{"lineNumber":58,"author":{"gitId":"NereusWB922"},"content":"      expect(component.allLabels).toEqual(SEVERITY_SIMPLE_LABELS);"},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":"    }));"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":62,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027hide(label)\u0027, () \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should add label to hidden labels set and update filter\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"      const label \u003d LABEL_NAME_SEVERITY_HIGH;"},{"lineNumber":65,"author":{"gitId":"NereusWB922"},"content":"      expect(component.hiddenLabelNames).not.toContain(label);"},{"lineNumber":66,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":67,"author":{"gitId":"NereusWB922"},"content":"      component.hide(label);"},{"lineNumber":68,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":69,"author":{"gitId":"NereusWB922"},"content":"      expect(component.hiddenLabelNames).toContain(label);"},{"lineNumber":70,"author":{"gitId":"NereusWB922"},"content":"      expect(filtersServiceSpy.updateFilters).toHaveBeenCalledWith({ hiddenLabels: component.hiddenLabelNames });"},{"lineNumber":71,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":72,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":73,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":74,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027show(label)\u0027, () \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should remove label from hidden labels set and update filter\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"NereusWB922"},"content":"      const label \u003d LABEL_NAME_SEVERITY_HIGH;"},{"lineNumber":77,"author":{"gitId":"NereusWB922"},"content":"      component.hide(label);"},{"lineNumber":78,"author":{"gitId":"NereusWB922"},"content":"      expect(component.hiddenLabelNames).toContain(label);"},{"lineNumber":79,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":80,"author":{"gitId":"NereusWB922"},"content":"      component.show(label);"},{"lineNumber":81,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":82,"author":{"gitId":"NereusWB922"},"content":"      expect(component.hiddenLabelNames).not.toContain(label);"},{"lineNumber":83,"author":{"gitId":"NereusWB922"},"content":"      expect(filtersServiceSpy.updateFilters).toHaveBeenCalledWith({ hiddenLabels: component.hiddenLabelNames });"},{"lineNumber":84,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":85,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":86,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":87,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027hasLabels\u0027, () \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"NereusWB922"},"content":"    beforeEach(() \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"NereusWB922"},"content":"      component.allLabels \u003d SEVERITY_SIMPLE_LABELS;"},{"lineNumber":90,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":91,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":92,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should return true if any label match the filter\u0027, () \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"NereusWB922"},"content":"      const filter \u003d \u0027low\u0027;"},{"lineNumber":94,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":95,"author":{"gitId":"NereusWB922"},"content":"      const result \u003d component.hasLabels(filter);"},{"lineNumber":96,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":97,"author":{"gitId":"NereusWB922"},"content":"      expect(result).toBeTrue();"},{"lineNumber":98,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":99,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":100,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should return false if no label match the filter\u0027, () \u003d\u003e {"},{"lineNumber":101,"author":{"gitId":"NereusWB922"},"content":"      const filter \u003d \u0027priority\u0027;"},{"lineNumber":102,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":103,"author":{"gitId":"NereusWB922"},"content":"      const result \u003d component.hasLabels(filter);"},{"lineNumber":104,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":105,"author":{"gitId":"NereusWB922"},"content":"      expect(result).toBeFalse();"},{"lineNumber":106,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":107,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":108,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should return false if no label exists\u0027, () \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"NereusWB922"},"content":"      const filter \u003d \u0027low\u0027;"},{"lineNumber":110,"author":{"gitId":"NereusWB922"},"content":"      component.allLabels \u003d [];"},{"lineNumber":111,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":112,"author":{"gitId":"NereusWB922"},"content":"      const result \u003d component.hasLabels(filter);"},{"lineNumber":113,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":114,"author":{"gitId":"NereusWB922"},"content":"      expect(result).toBeFalse();"},{"lineNumber":115,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":116,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":117,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":118,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027updateSelection\u0027, () \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should update filters service with selected labels\u0027, () \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"NereusWB922"},"content":"      const selectedLabels \u003d [LABEL_NAME_SEVERITY_HIGH, LABEL_NAME_SEVERITY_LOW];"},{"lineNumber":121,"author":{"gitId":"NereusWB922"},"content":"      component.selectedLabelNames \u003d selectedLabels;"},{"lineNumber":122,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":123,"author":{"gitId":"NereusWB922"},"content":"      component.updateSelection();"},{"lineNumber":124,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":125,"author":{"gitId":"NereusWB922"},"content":"      expect(filtersServiceSpy.updateFilters).toHaveBeenCalledWith({ labels: selectedLabels });"},{"lineNumber":126,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":127,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":128,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":129,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027removeAllSelection\u0027, () \u003d\u003e {"},{"lineNumber":130,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should deselect all labels and update the filter\u0027, () \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"NereusWB922"},"content":"      const matSelectionListSpy \u003d jasmine.createSpyObj\u003cMatSelectionList\u003e(\u0027MatSelectionList\u0027, [\u0027deselectAll\u0027]);"},{"lineNumber":132,"author":{"gitId":"NereusWB922"},"content":"      component.matSelectionList \u003d matSelectionListSpy;"},{"lineNumber":133,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":134,"author":{"gitId":"NereusWB922"},"content":"      component.removeAllSelection();"},{"lineNumber":135,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":136,"author":{"gitId":"NereusWB922"},"content":"      expect(matSelectionListSpy.deselectAll).toHaveBeenCalled();"},{"lineNumber":137,"author":{"gitId":"NereusWB922"},"content":"      expect(filtersServiceSpy.updateFilters).toHaveBeenCalledWith({ labels: [] });"},{"lineNumber":138,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":139,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":140,"author":{"gitId":"NereusWB922"},"content":"});"}],"authorContributionMap":{"NereusWB922":140}},{"path":"tests/app/shared/issue-tables/issue-paginator.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { paginateData } from \u0027../../../../src/app/shared/issue-tables/issue-paginator\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  ISSUE_WITH_ASSIGNEES,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../../../constants/githubissue.constants\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"describe(\u0027issue-paginator\u0027, () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  describe(\u0027paginateData()\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    let dataSet_7: Issue[];"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    let paginator: MatPaginator;"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"    const mediumSeverityIssueWithResponse: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"    const mediumSeverityIssueWithAssigneee: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_ASSIGNEES);"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"    const lowSeverityFeatureFlawIssue: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY);"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"    const highSeverityDocumentationBugIssue: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY);"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    beforeEach(() \u003d\u003e {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      dataSet_7 \u003d ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithResponse,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithAssigneee,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        lowSeverityFeatureFlawIssue,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithResponse,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithAssigneee,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        lowSeverityFeatureFlawIssue,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        highSeverityDocumentationBugIssue"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      paginator \u003d { pageSize: 3 } as MatPaginator;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    it(\u0027should set the length of paginator to the length of data\u0027, () \u003d\u003e {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      paginateData(paginator, dataSet_7);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      expect(paginator.length).toEqual(7);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    it(\u0027should return list of issues according to page index\u0027, () \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      paginator.pageIndex \u003d 0;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"      // Returns issues index 0 to 2"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      const returnedList \u003d paginateData(paginator, dataSet_7);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      expect(returnedList).toEqual([mediumSeverityIssueWithResponse, mediumSeverityIssueWithAssigneee, lowSeverityFeatureFlawIssue]);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    it(\u0027should return list of issues in the previous page if there are no issues on the current page\u0027, () \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      paginator.pageIndex \u003d 3;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"      // Returns issues index 6 on page 2"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      const returnedList \u003d paginateData(paginator, dataSet_7);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      expect(returnedList).toEqual([highSeverityDocumentationBugIssue]);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":4,"-":50}},{"path":"tests/app/shared/issue-tables/issue-sorter.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { applySort } from \u0027../../../../src/app/shared/issue-tables/issue-sorter\u0027;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"  ISSUE_UPDATED_EARLIER,"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"  ISSUE_UPDATED_LATER,"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"  ISSUE_WITH_ASSIGNEES,"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"} from \u0027../../../constants/githubissue.constants\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"describe(\u0027issuer-sorter\u0027, () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027applySort()\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"    const dummyIssue: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"    const otherDummyIssue: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_ASSIGNEES);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    const issuesList: Issue[] \u003d [dummyIssue, otherDummyIssue];"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"    const issueUpdatedEarlier: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_UPDATED_EARLIER);"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"    const issueUpdatedLater: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_UPDATED_LATER);"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"    const issuesWithDifferentUpdatedDate: Issue[] \u003d [issueUpdatedEarlier, issueUpdatedLater];"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    const matSort: MatSort \u003d new MatSort();"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should return the same data if sort.active is not set\u0027, () \u003d\u003e {"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"      const sortedData \u003d applySort(matSort, issuesList);"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"      expect(sortedData).toEqual(issuesList);"},{"lineNumber":26,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":27,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    it(\u0027sorts issues based on their assignees correctly\u0027, () \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      matSort.active \u003d \u0027assignees\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuesByAssigneesAsc \u003d applySort(matSort, issuesList);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByAssigneesAsc, dummyIssue, otherDummyIssue);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":35,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuesByAssigneesDesc \u003d applySort(matSort, issuesList);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByAssigneesDesc, otherDummyIssue, dummyIssue);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    it(\u0027sorts issues based on their string fields correctly\u0027, () \u003d\u003e {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      matSort.active \u003d \u0027title\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":42,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuesByTitleAsc \u003d applySort(matSort, issuesList);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByTitleAsc, dummyIssue, otherDummyIssue);"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuesByTitleDesc \u003d applySort(matSort, issuesList);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByTitleDesc, otherDummyIssue, dummyIssue);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027sorts issues based on their id fields correctly\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      matSort.active \u003d \u0027id\u0027;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuedByIdAsc \u003d applySort(matSort, issuesList);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuedByIdAsc, otherDummyIssue, dummyIssue);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":57,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuedByIdDesc \u003d applySort(matSort, issuesList);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuedByIdDesc, dummyIssue, otherDummyIssue);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027sorts issues based on their updated date fields correctly\u0027, () \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"NereusWB922"},"content":"      matSort.active \u003d \u0027date\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":65,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuedByDateAsc \u003d applySort(matSort, issuesWithDifferentUpdatedDate);"},{"lineNumber":66,"author":{"gitId":"NereusWB922"},"content":"      assertOrder(sortedIssuedByDateAsc, issueUpdatedEarlier, issueUpdatedLater);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":69,"author":{"gitId":"NereusWB922"},"content":"      const sortedIssuedByDateDesc \u003d applySort(matSort, issuesWithDifferentUpdatedDate);"},{"lineNumber":70,"author":{"gitId":"NereusWB922"},"content":"      assertOrder(sortedIssuedByDateDesc, issueUpdatedLater, issueUpdatedEarlier);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":73,"author":{"gitId":"-"},"content":"});"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":76,"author":{"gitId":"-"},"content":" * This helper method helps to check if the sorted issues are in their"},{"lineNumber":77,"author":{"gitId":"-"},"content":" * correct order based on the variable arguments provided."},{"lineNumber":78,"author":{"gitId":"-"},"content":" */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"function assertOrder(sortedIssues: Issue[], ...expectedSortedIssues: Issue[]) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  for (let i \u003d 0; i \u003c sortedIssues.length; i++) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    expect(sortedIssues[i].id).toBe(expectedSortedIssues[i].id);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NereusWB922":33,"-":50}},{"path":"tests/app/shared/issue-tables/search-filter.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../../src/app/core/services/issue.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../../../src/app/shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { applySearchFilter } from \u0027../../../../src/app/shared/issue-tables/search-filter\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { USER_ANUBHAV } from \u0027../../../constants/data.constants\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  ISSUE_WITH_ASSIGNEES,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY"},{"lineNumber":11,"author":{"gitId":"-"},"content":"} from \u0027../../../constants/githubissue.constants\u0027;"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"import { GITHUB_LABEL_FEATURE_FLAW } from \u0027../../../constants/githublabel.constants\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"describe(\u0027search-filter\u0027, () \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  describe(\u0027applySearchFilter()\u0027, () \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    let searchKey: string;"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"    const mediumSeverityIssueWithResponse: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"    const mediumSeverityIssueWithAssigneee: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_ASSIGNEES);"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"    const lowSeverityFeatureFlawIssue: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY);"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":"    const highSeverityDocumentationBugIssue: Issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY);"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    const issuesList: Issue[] \u003d ["},{"lineNumber":23,"author":{"gitId":"-"},"content":"      mediumSeverityIssueWithResponse,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      mediumSeverityIssueWithAssigneee,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      lowSeverityFeatureFlawIssue,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      highSeverityDocumentationBugIssue"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"    const displayedColumns: string[] \u003d [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE, TABLE_COLUMNS.ASSIGNEE, TABLE_COLUMNS.LABEL];"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    const issueService: IssueService \u003d new IssueService(null, null, null);"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    it(\u0027can filter for issues which are assigned to a specific user\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      searchKey \u003d USER_ANUBHAV.loginId;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([mediumSeverityIssueWithAssigneee]);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027can filter for issues using label\u0027, () \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"NereusWB922"},"content":"      searchKey \u003d GITHUB_LABEL_FEATURE_FLAW.name;"},{"lineNumber":38,"author":{"gitId":"NereusWB922"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([lowSeverityFeatureFlawIssue]);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    it(\u0027can filter for issues that contain the search key in any other column\u0027, () \u003d\u003e {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      // Search by id of issue"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      searchKey \u003d mediumSeverityIssueWithResponse.id.toString();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([mediumSeverityIssueWithResponse]);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"      // Search by title of issue"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      searchKey \u003d mediumSeverityIssueWithAssigneee.title;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([mediumSeverityIssueWithAssigneee]);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":51,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":9,"-":42}},{"path":"tests/constants/data.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { UserRole } from \u0027../../src/app/core/models/user.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export const csvString \u003d"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  `"},{"lineNumber":5,"author":{"gitId":"-"},"content":"role,name,team"},{"lineNumber":6,"author":{"gitId":"-"},"content":"student,JunWei96,CS2103T-W12-3"},{"lineNumber":7,"author":{"gitId":"-"},"content":"admin,damithc,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"tutor,anubh-v,CS2103T-W12-3"},{"lineNumber":9,"author":{"gitId":"-"},"content":"admin,geshuming,"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"tutor,jj-lim,CS2103T-W12-3"},{"lineNumber":12,"author":{"gitId":"-"},"content":"tutor,jj-lim,CS2103T-W12-3"},{"lineNumber":13,"author":{"gitId":"-"},"content":"tutor,jj-lim,CS2103T-W12-4"},{"lineNumber":14,"author":{"gitId":"-"},"content":"tutor,q     ,CS2103T-W12-4"},{"lineNumber":15,"author":{"gitId":"-"},"content":"student,003-samuel,CS2103T-W12-3"},{"lineNumber":16,"author":{"gitId":"-"},"content":"student,damithc,CS2103T-W12-3"},{"lineNumber":17,"author":{"gitId":"-"},"content":"student,RonakLakhotia,CS2103T-W12-4"},{"lineNumber":18,"author":{"gitId":"-"},"content":"student,ptvrajsk,CS2103T-W12-3` + `                       `;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"// jsonData is a json representation of csvString"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export const jsonData \u003d {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  roles: {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    students: {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      junwei96: \u0027true\u0027,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u0027003-samuel\u0027: \u0027true\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      damithc: \u0027true\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      ronaklakhotia: \u0027true\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      ptvrajsk: \u0027true\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    tutors: { \u0027anubh-v\u0027: \u0027true\u0027, \u0027jj-lim\u0027: \u0027true\u0027, q: \u0027true\u0027 },"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    admins: { damithc: \u0027true\u0027, geshuming: \u0027true\u0027 }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u0027team-structure\u0027: {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u0027CS2103T-W12-3\u0027: {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      junwei96: \u0027JunWei96\u0027,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u0027003-samuel\u0027: \u0027003-samuel\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      damithc: \u0027damithc\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      ptvrajsk: \u0027ptvrajsk\u0027"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u0027CS2103T-W12-4\u0027: { ronaklakhotia: \u0027RonakLakhotia\u0027 }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u0027students-allocation\u0027: {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    junwei96: { teamId: \u0027CS2103T-W12-3\u0027 },"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u0027003-samuel\u0027: { teamId: \u0027CS2103T-W12-3\u0027 },"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    damithc: { teamId: \u0027CS2103T-W12-3\u0027 },"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ronaklakhotia: { teamId: \u0027CS2103T-W12-4\u0027 },"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ptvrajsk: { teamId: \u0027CS2103T-W12-3\u0027 }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u0027tutors-allocation\u0027: {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u0027anubh-v\u0027: { \u0027CS2103T-W12-3\u0027: \u0027true\u0027 },"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u0027jj-lim\u0027: { \u0027CS2103T-W12-3\u0027: \u0027true\u0027, \u0027CS2103T-W12-4\u0027: \u0027true\u0027 },"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    q: { \u0027CS2103T-W12-4\u0027: \u0027true\u0027 }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u0027admins-allocation\u0027: { damithc: {}, geshuming: {} }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"};"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"export const USER_JUNWEI \u003d {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  loginId: \u0027JunWei96\u0027,"},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":"  role: UserRole.Student"},{"lineNumber":60,"author":{"gitId":"-"},"content":"};"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"export const USER_ANUBHAV \u003d {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  loginId: \u0027anubh-v\u0027,"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"  role: UserRole.Student"},{"lineNumber":65,"author":{"gitId":"-"},"content":"};"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"export const USER_Q \u003d {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  loginId: \u0027q\u0027,"},{"lineNumber":69,"author":{"gitId":"NereusWB922"},"content":"  role: UserRole.Tutor"},{"lineNumber":70,"author":{"gitId":"-"},"content":"};"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"export const USER_SHUMING \u003d {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  loginId: \u0027geshuming\u0027,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  role: UserRole.Admin,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  allocatedTeams: []"},{"lineNumber":76,"author":{"gitId":"-"},"content":"};"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"export const USER_WITH_TWO_ROLES \u003d {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  loginId: \u0027damithc\u0027,"},{"lineNumber":80,"author":{"gitId":"NereusWB922"},"content":"  role: UserRole.Admin"},{"lineNumber":81,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"NereusWB922":4,"-":77}},{"path":"tests/constants/githubissue.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueState, IssueStateReason } from \u0027../../graphql/graphql-types\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../../src/app/core/models/github/github-issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../../src/app/core/models/github/github-label.model\u0027;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"import { USER_ANUBHAV } from \u0027./data.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"import { EMPTY_TEAM_RESPONSE } from \u0027./githubcomment.constants\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_DOCUMENTATION_BUG,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_FEATURE_FLAW,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_FUNCTIONALITY_BUG,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_HIGH_SEVERITY,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_LOW_SEVERITY,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_MEDIUM_SEVERITY,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_TEAM_LABEL,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_TUTORIAL_LABEL"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027./githublabel.constants\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"const randomId: () \u003d\u003e string \u003d () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  return Math.floor(Math.random() * 1000000000).toString();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"};"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"const randomIssueNumber: () \u003d\u003e number \u003d () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  return Math.round(Math.random() * 1000);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"};"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"const randomISODate: (startDate?: Date, endDate?: Date) \u003d\u003e string \u003d ("},{"lineNumber":26,"author":{"gitId":"-"},"content":"  startDate: Date \u003d new Date(2020, 1, 1),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  endDate: Date \u003d new Date()"},{"lineNumber":28,"author":{"gitId":"-"},"content":") \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  return new Date(startDate.getTime() + Math.random() * (startDate.getTime() - endDate.getTime())).toISOString();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"};"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"const USER_ANUBHAV_DETAILS \u003d {"},{"lineNumber":33,"author":{"gitId":"NereusWB922"},"content":"  login: USER_ANUBHAV.loginId"},{"lineNumber":34,"author":{"gitId":"-"},"content":"};"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":"export const MILESTONE_ONE \u003d {"},{"lineNumber":37,"author":{"gitId":"NereusWB922"},"content":"  number: \u00271\u0027,"},{"lineNumber":38,"author":{"gitId":"NereusWB922"},"content":"  title: \u0027Milestone 1\u0027,"},{"lineNumber":39,"author":{"gitId":"NereusWB922"},"content":"  state: \u0027Open\u0027"},{"lineNumber":40,"author":{"gitId":"-"},"content":"};"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_EMPTY_DESCRIPTION \u003d new GithubIssue({"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  id: \u0027574085971\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  number: 92,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  created_at: \u00272020-03-02T16:19:02Z\u0027,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  stateReason: IssueStateReason.Reopened,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  title: \u0027App starts to lag when given large amount of input\u0027,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-03-13T13:37:32Z\u0027,"},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u0027\u0027,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/92\u0027,"},{"lineNumber":55,"author":{"gitId":"NereusWB922"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":56,"author":{"gitId":"NereusWB922"},"content":"  milestone: MILESTONE_ONE,"},{"lineNumber":57,"author":{"gitId":"NereusWB922"},"content":"  comments: [],"},{"lineNumber":58,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"});"},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":62,"author":{"gitId":"NereusWB922"},"content":"export const CLOSED_ISSUE_WITH_EMPTY_DESCRIPTION \u003d new GithubIssue({"},{"lineNumber":63,"author":{"gitId":"NereusWB922"},"content":"  id: \u0027574085971\u0027,"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"  number: 92,"},{"lineNumber":65,"author":{"gitId":"NereusWB922"},"content":"  assignees: [],"},{"lineNumber":66,"author":{"gitId":"NereusWB922"},"content":"  body: \u0027\u0027,"},{"lineNumber":67,"author":{"gitId":"NereusWB922"},"content":"  created_at: \u00272020-03-02T16:19:02Z\u0027,"},{"lineNumber":68,"author":{"gitId":"NereusWB922"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":69,"author":{"gitId":"NereusWB922"},"content":"  state: IssueState.Closed,"},{"lineNumber":70,"author":{"gitId":"NereusWB922"},"content":"  stateReason: IssueStateReason.Completed,"},{"lineNumber":71,"author":{"gitId":"NereusWB922"},"content":"  title: \u0027App starts to lag when given large amount of input\u0027,"},{"lineNumber":72,"author":{"gitId":"NereusWB922"},"content":"  updated_at: \u00272020-03-13T13:37:32Z\u0027,"},{"lineNumber":73,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u00272020-03-22T15:37:32Z\u0027,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/92\u0027,"},{"lineNumber":75,"author":{"gitId":"NereusWB922"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":76,"author":{"gitId":"NereusWB922"},"content":"  milestone: MILESTONE_ONE,"},{"lineNumber":77,"author":{"gitId":"NereusWB922"},"content":"  comments: [],"},{"lineNumber":78,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":79,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":80,"author":{"gitId":"-"},"content":"});"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"NereusWB922"},"content":"export const ISSUE_UPDATED_EARLIER \u003d new GithubIssue({"},{"lineNumber":83,"author":{"gitId":"NereusWB922"},"content":"  id: \u0027000000001\u0027,"},{"lineNumber":84,"author":{"gitId":"NereusWB922"},"content":"  number: 1,"},{"lineNumber":85,"author":{"gitId":"NereusWB922"},"content":"  assignees: [],"},{"lineNumber":86,"author":{"gitId":"NereusWB922"},"content":"  body: \u0027\u0027,"},{"lineNumber":87,"author":{"gitId":"NereusWB922"},"content":"  created_at: \u00272020-09-02T16:19:02Z\u0027,"},{"lineNumber":88,"author":{"gitId":"NereusWB922"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":89,"author":{"gitId":"NereusWB922"},"content":"  state: IssueState.Open,"},{"lineNumber":90,"author":{"gitId":"NereusWB922"},"content":"  stateReason: IssueStateReason.Reopened,"},{"lineNumber":91,"author":{"gitId":"NereusWB922"},"content":"  title: \u0027App starts to lag when given large amount of input\u0027,"},{"lineNumber":92,"author":{"gitId":"NereusWB922"},"content":"  updated_at: \u00272020-09-03T13:37:32Z\u0027,"},{"lineNumber":93,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u0027\u0027,"},{"lineNumber":94,"author":{"gitId":"NereusWB922"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/93\u0027,"},{"lineNumber":95,"author":{"gitId":"NereusWB922"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":96,"author":{"gitId":"NereusWB922"},"content":"  milestone: MILESTONE_ONE,"},{"lineNumber":97,"author":{"gitId":"NereusWB922"},"content":"  comments: [],"},{"lineNumber":98,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":99,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":100,"author":{"gitId":"NereusWB922"},"content":"});"},{"lineNumber":101,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":102,"author":{"gitId":"NereusWB922"},"content":"export const ISSUE_UPDATED_LATER \u003d new GithubIssue({"},{"lineNumber":103,"author":{"gitId":"NereusWB922"},"content":"  id: \u0027000000002\u0027,"},{"lineNumber":104,"author":{"gitId":"NereusWB922"},"content":"  number: 2,"},{"lineNumber":105,"author":{"gitId":"NereusWB922"},"content":"  assignees: [],"},{"lineNumber":106,"author":{"gitId":"NereusWB922"},"content":"  body: \u0027\u0027,"},{"lineNumber":107,"author":{"gitId":"NereusWB922"},"content":"  created_at: \u00272020-10-02T16:19:02Z\u0027,"},{"lineNumber":108,"author":{"gitId":"NereusWB922"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":109,"author":{"gitId":"NereusWB922"},"content":"  state: IssueState.Open,"},{"lineNumber":110,"author":{"gitId":"NereusWB922"},"content":"  stateReason: IssueStateReason.Reopened,"},{"lineNumber":111,"author":{"gitId":"NereusWB922"},"content":"  title: \u0027App starts to lag when given large amount of input\u0027,"},{"lineNumber":112,"author":{"gitId":"NereusWB922"},"content":"  updated_at: \u00272020-10-22T13:37:32Z\u0027,"},{"lineNumber":113,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u0027\u0027,"},{"lineNumber":114,"author":{"gitId":"NereusWB922"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/94\u0027,"},{"lineNumber":115,"author":{"gitId":"NereusWB922"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":116,"author":{"gitId":"NereusWB922"},"content":"  milestone: MILESTONE_ONE,"},{"lineNumber":117,"author":{"gitId":"NereusWB922"},"content":"  comments: [],"},{"lineNumber":118,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":119,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":120,"author":{"gitId":"-"},"content":"});"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY \u003d new GithubIssue({"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  id: \u0027384830567\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  number: 130,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  created_at: \u00272020-03-02T16:19:02Z\u0027,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FEATURE_FLAW, GITHUB_LABEL_LOW_SEVERITY],"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  stateReason: IssueStateReason.Reopened,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  title: \u0027App is sometimes slow\u0027,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-03-13T13:37:32Z\u0027,"},{"lineNumber":133,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u0027\u0027,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/130\u0027,"},{"lineNumber":135,"author":{"gitId":"NereusWB922"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":136,"author":{"gitId":"NereusWB922"},"content":"  milestone: MILESTONE_ONE,"},{"lineNumber":137,"author":{"gitId":"NereusWB922"},"content":"  comments: [],"},{"lineNumber":138,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":139,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":140,"author":{"gitId":"-"},"content":"});"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY \u003d new GithubIssue({"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  id: \u0027573957398\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  number: 32,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  created_at: \u00272010-03-12T19:12:02Z\u0027,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_DOCUMENTATION_BUG, GITHUB_LABEL_HIGH_SEVERITY],"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  stateReason: IssueStateReason.Reopened,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  title: \u0027Too many typos\u0027,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  updated_at: \u00272012-03-12T19:12:02Z\u0027,"},{"lineNumber":153,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u0027\u0027,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/130\u0027,"},{"lineNumber":155,"author":{"gitId":"NereusWB922"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":156,"author":{"gitId":"NereusWB922"},"content":"  milestone: MILESTONE_ONE,"},{"lineNumber":157,"author":{"gitId":"NereusWB922"},"content":"  comments: [],"},{"lineNumber":158,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":159,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":160,"author":{"gitId":"-"},"content":"});"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"NereusWB922"},"content":"export const ISSUE_WITHOUT_MILESTONE \u003d new GithubIssue({"},{"lineNumber":163,"author":{"gitId":"NereusWB922"},"content":"  id: \u0027573957398\u0027,"},{"lineNumber":164,"author":{"gitId":"NereusWB922"},"content":"  number: 32,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":167,"author":{"gitId":"NereusWB922"},"content":"  created_at: \u00272010-03-12T19:12:02Z\u0027,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_DOCUMENTATION_BUG, GITHUB_LABEL_HIGH_SEVERITY],"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  stateReason: IssueStateReason.Reopened,"},{"lineNumber":171,"author":{"gitId":"NereusWB922"},"content":"  title: \u0027Too many typos\u0027,"},{"lineNumber":172,"author":{"gitId":"NereusWB922"},"content":"  updated_at: \u00272012-03-12T19:12:02Z\u0027,"},{"lineNumber":173,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u0027\u0027,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/130\u0027,"},{"lineNumber":175,"author":{"gitId":"NereusWB922"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":176,"author":{"gitId":"NereusWB922"},"content":"  comments: [],"},{"lineNumber":177,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":178,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":179,"author":{"gitId":"-"},"content":"});"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_ASSIGNEES \u003d new GithubIssue({"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  id: \u0027551732011\u0027,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  number: 91,"},{"lineNumber":184,"author":{"gitId":"NereusWB922"},"content":"  assignees: [USER_ANUBHAV_DETAILS],"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  body: \u0027Screen freezes every few minutes\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  created_at: \u00272020-01-18T07:01:45Z\u0027,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  stateReason: IssueStateReason.Reopened,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  title: \u0027Screen freezes\u0027,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-03-02T12:50:02Z\u0027,"},{"lineNumber":192,"author":{"gitId":"NereusWB922"},"content":"  closed_at: \u0027\u0027,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/91\u0027,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":195,"author":{"gitId":"NereusWB922"},"content":"  milestone: MILESTONE_ONE,"},{"lineNumber":196,"author":{"gitId":"NereusWB922"},"content":"  comments: [EMPTY_TEAM_RESPONSE],"},{"lineNumber":197,"author":{"gitId":"NereusWB922"},"content":"  issueOrPr: \u0027Issue\u0027,"},{"lineNumber":198,"author":{"gitId":"NereusWB922"},"content":"  isDraft: false"},{"lineNumber":199,"author":{"gitId":"-"},"content":"});"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"export const generateIssueWithRandomData: () \u003d\u003e GithubIssue \u003d () \u003d\u003e {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  const created_and_updated_date: string \u003d randomISODate();"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  const issueNumber: number \u003d randomIssueNumber();"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  const severityLabels: GithubLabel[] \u003d [GITHUB_LABEL_LOW_SEVERITY, GITHUB_LABEL_MEDIUM_SEVERITY, GITHUB_LABEL_HIGH_SEVERITY];"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  const typeLabels: GithubLabel[] \u003d [GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_FEATURE_FLAW, GITHUB_LABEL_DOCUMENTATION_BUG];"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  return new GithubIssue({"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    id: randomId(),"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    number: issueNumber,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    assignees: [],"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    comments: [],"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    body: `Issue No.: ${issueNumber}\\nSample Content.`,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    created_at: created_and_updated_date,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, typeLabels[issueNumber % 3], severityLabels[issueNumber % 3]],"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    state: IssueState.Open,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    stateReason: IssueStateReason.Reopened,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    title: `Random Issue: ${issueNumber}`,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    updated_at: created_and_updated_date,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    url: `https://api.github.com/repos/CATcher-org/pe-results/issues/${issueNumber}`,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    user: USER_ANUBHAV_DETAILS"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":221,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"NereusWB922":99,"-":122}},{"path":"tests/constants/githublabel.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../../src/app/core/models/github/github-label.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_FUNCTIONALITY_BUG \u003d {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  color: \u00279900cc\u0027,"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027type.FunctionalityBug\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} as GithubLabel;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_FEATURE_FLAW \u003d {"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"  color: \u0027d966ff\u0027,"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027type.FeatureFlaw\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"} as GithubLabel;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_DOCUMENTATION_BUG \u003d {"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"  color: \u0027d966ff\u0027,"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027type.DocumentationBug\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"} as GithubLabel;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_LOW_SEVERITY \u003d {"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"  color: \u0027ffcccc\u0027,"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027severity.Low\u0027"},{"lineNumber":21,"author":{"gitId":"-"},"content":"} as GithubLabel;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_HIGH_SEVERITY \u003d {"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"  color: \u0027ff6666\u0027,"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027severity.High\u0027"},{"lineNumber":26,"author":{"gitId":"-"},"content":"} as GithubLabel;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_MEDIUM_SEVERITY \u003d {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  color: \u0027ff9999\u0027,"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027severity.Medium\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"} as GithubLabel;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_TUTORIAL_LABEL \u003d {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  color: \u0027c2e0c6\u0027,"},{"lineNumber":35,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027tutorial.CS2103T-W12\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"} as GithubLabel;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"export const GITHUB_LABEL_TEAM_LABEL \u003d {"},{"lineNumber":39,"author":{"gitId":"NereusWB922"},"content":"  color: \u0027d4c5f9\u0027,"},{"lineNumber":40,"author":{"gitId":"NereusWB922"},"content":"  name: \u0027team.3\u0027"},{"lineNumber":41,"author":{"gitId":"-"},"content":"} as GithubLabel;"}],"authorContributionMap":{"NereusWB922":13,"-":28}},{"path":"tests/constants/label.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"import { SimpleLabel } from \u0027../../src/app/core/models/label.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Label name constants"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"export const SEVERITY_VERY_LOW \u003d \u0027veryLow\u0027;"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"export const SEVERITY_LOW \u003d \u0027low\u0027;"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"export const SEVERITY_MEDIUM \u003d \u0027medium\u0027;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"export const SEVERITY_HIGH \u003d \u0027high\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"// Label category constants"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"export const CATEGORY_SEVERITY \u003d \u0027severity\u0027;"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"// Label name constants"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"export const LABEL_NAME_SEVERITY_VERY_LOW \u003d CATEGORY_SEVERITY + \u0027.\u0027 + SEVERITY_VERY_LOW;"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"export const LABEL_NAME_SEVERITY_LOW \u003d CATEGORY_SEVERITY + \u0027.\u0027 + SEVERITY_LOW;"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"export const LABEL_NAME_SEVERITY_MEDIUM \u003d CATEGORY_SEVERITY + \u0027.\u0027 + SEVERITY_MEDIUM;"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"export const LABEL_NAME_SEVERITY_HIGH \u003d CATEGORY_SEVERITY + \u0027.\u0027 + SEVERITY_HIGH;"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"// Label definition constants"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"export const DEFINITION_SEVERITY_VERY_LOW \u003d"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cp\u003eA flaw that is \u003cmark\u003epurely cosmetic\u003c/mark\u003e and \u003cmark\u003edoes not affect usage\u003c/mark\u003e. For example, \u0027 +"},{"lineNumber":21,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cul\u003e\u0027 +"},{"lineNumber":22,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cli\u003etypo issues\u003c/li\u003e\u0027 +"},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cli\u003espacing issues\u003c/li\u003e\u0027 +"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cli\u003elayout issues\u003c/li\u003e\u0027 +"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cli\u003ecolor issues\u003c/li\u003e\u0027 +"},{"lineNumber":26,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cli\u003efont issues\u003c/li\u003e\u0027 +"},{"lineNumber":27,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003c/ul\u003e\u0027 +"},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"  \"in the docs or the UI that doesn\u0027t affect usage.\u003c/p\u003e\";"},{"lineNumber":29,"author":{"gitId":"NereusWB922"},"content":"export const DEFINITION_SEVERITY_LOW \u003d"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cp\u003eA flaw that is unlikely to affect normal operations of the product. \u0027 +"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"  \u0027Appears only in very rare situations and causes a minor inconvenience only.\u003c/p\u003e\u0027;"},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"export const DEFINITION_SEVERITY_MEDIUM \u003d"},{"lineNumber":33,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cp\u003eA flaw that causes occasional inconvenience to some users but they can \u0027 + \u0027continue to use the product.\u003c/p\u003e\u0027;"},{"lineNumber":34,"author":{"gitId":"NereusWB922"},"content":"export const DEFINITION_SEVERITY_HIGH \u003d"},{"lineNumber":35,"author":{"gitId":"NereusWB922"},"content":"  \u0027\u003cp\u003eA flaw that affects most users and causes major problems for users.\u0027 + \u0027i.e., makes the product almost unusable for most users.\u003c/p\u003e\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"// Label color constants"},{"lineNumber":38,"author":{"gitId":"-"},"content":"export const COLOR_BLACK \u003d \u0027000000\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"export const COLOR_WHITE \u003d \u0027ffffff\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_VERY_LOW \u003d \u0027ffe0e0\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_LOW \u003d \u0027ffcccc\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_MEDIUM \u003d \u0027ff9999\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_HIGH \u003d \u0027ff6666\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"// CSS style constants"},{"lineNumber":46,"author":{"gitId":"-"},"content":"export const DARK_BG_LIGHT_TEXT \u003d {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u0027background-color\u0027: `#${COLOR_BLACK}`,"},{"lineNumber":48,"author":{"gitId":"NereusWB922"},"content":"  color: `#${COLOR_WHITE}`"},{"lineNumber":49,"author":{"gitId":"-"},"content":"};"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"export const LIGHT_BG_DARK_TEXT \u003d {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u0027background-color\u0027: `#${COLOR_WHITE}`,"},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"  color: `#${COLOR_BLACK}`"},{"lineNumber":54,"author":{"gitId":"-"},"content":"};"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"// Constant array of labels for team response phase and moderation phase to simulate Github response"},{"lineNumber":57,"author":{"gitId":"NereusWB922"},"content":"export const SEVERITY_LABELS \u003d ["},{"lineNumber":58,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":"    name: LABEL_NAME_SEVERITY_VERY_LOW,"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"    color: COLOR_SEVERITY_VERY_LOW,"},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":"    definition: DEFINITION_SEVERITY_VERY_LOW"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"    name: LABEL_NAME_SEVERITY_LOW,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    color: COLOR_SEVERITY_LOW,"},{"lineNumber":66,"author":{"gitId":"NereusWB922"},"content":"    definition: DEFINITION_SEVERITY_LOW"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":69,"author":{"gitId":"NereusWB922"},"content":"    name: LABEL_NAME_SEVERITY_MEDIUM,"},{"lineNumber":70,"author":{"gitId":"NereusWB922"},"content":"    color: COLOR_SEVERITY_MEDIUM,"},{"lineNumber":71,"author":{"gitId":"NereusWB922"},"content":"    definition: DEFINITION_SEVERITY_MEDIUM"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":74,"author":{"gitId":"NereusWB922"},"content":"    name: LABEL_NAME_SEVERITY_HIGH,"},{"lineNumber":75,"author":{"gitId":"NereusWB922"},"content":"    color: COLOR_SEVERITY_HIGH,"},{"lineNumber":76,"author":{"gitId":"NereusWB922"},"content":"    definition: DEFINITION_SEVERITY_HIGH"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"];"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"NereusWB922"},"content":"export const SEVERITY_SIMPLE_LABELS: SimpleLabel[] \u003d SEVERITY_LABELS.map((label) \u003d\u003e ({"},{"lineNumber":81,"author":{"gitId":"NereusWB922"},"content":"  name: label.name,"},{"lineNumber":82,"author":{"gitId":"NereusWB922"},"content":"  color: label.color"},{"lineNumber":83,"author":{"gitId":"NereusWB922"},"content":"}));"}],"authorContributionMap":{"NereusWB922":49,"-":34}},{"path":"tests/constants/session.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../src/app/core/models/phase.model\u0027;"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"import { Repo } from \u0027../../src/app/core/models/repo.model\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { SessionData, SessionRepo } from \u0027../../src/app/core/models/session.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"export const WATCHER_REPO: Repo \u003d Repo.of(\u0027CATcher-org/WATcher\u0027);"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"export const CATCHER_REPO: Repo \u003d Repo.of(\u0027CATcher-org/CATcher\u0027);"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"const ISSUES_VIEWER_SESSION_REPO: SessionRepo \u003d {"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"  phase: Phase.issuesViewer,"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"  repos: [WATCHER_REPO]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"};"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"const ACTIVITY_DASHBOARD_SESSION_REPO: SessionRepo \u003d {"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"  phase: Phase.activityDashboard,"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  repos: [WATCHER_REPO]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"};"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"export const VALID_SESSION_DATA: SessionData \u003d {"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"  sessionRepo: [ISSUES_VIEWER_SESSION_REPO, ACTIVITY_DASHBOARD_SESSION_REPO]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"NereusWB922":12,"-":8}},{"path":"tests/model/issue.model.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../src/app/core/models/issue.model\u0027;"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"import { Milestone } from \u0027../../src/app/core/models/milestone.model\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { USER_ANUBHAV } from \u0027../constants/data.constants\u0027;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"import {"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"  CLOSED_ISSUE_WITH_EMPTY_DESCRIPTION,"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"  ISSUE_WITHOUT_MILESTONE,"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"  ISSUE_WITH_ASSIGNEES,"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION,"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"  MILESTONE_ONE"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"} from \u0027../constants/githubissue.constants\u0027;"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"import {"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"  GITHUB_LABEL_FUNCTIONALITY_BUG,"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"  GITHUB_LABEL_MEDIUM_SEVERITY,"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"  GITHUB_LABEL_TEAM_LABEL,"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"  GITHUB_LABEL_TUTORIAL_LABEL"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"} from \u0027../constants/githublabel.constants\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"describe(\u0027Issue model class\u0027, () \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  describe(\u0027.createPhaseBugReportIssue(githubIssue)\u0027, () \u003d\u003e {"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should correctly create a issue that has an empty description\u0027, async () \u003d\u003e {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      const issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":22,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.globalId).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.id);"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.id).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.number);"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.created_at).toEqual(\u0027Mar 3, 2020 12:19 AM\u0027);"},{"lineNumber":26,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.title).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.title);"},{"lineNumber":27,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.description).toEqual(\u0027No details provided by bug reporter.\u0027);"},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.updated_at).toEqual(\u0027Mar 13, 2020 9:37 PM\u0027);"},{"lineNumber":29,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.closed_at).toEqual(\u0027Invalid date\u0027);"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.milestone).toEqual(new Milestone(MILESTONE_ONE));"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.state).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.state);"},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.stateReason).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.stateReason);"},{"lineNumber":33,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.issueOrPr).toEqual(\u0027Issue\u0027);"},{"lineNumber":34,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.author).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.user.login);"},{"lineNumber":35,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.isDraft).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.isDraft);"},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.assignees).toEqual([]);"},{"lineNumber":37,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.labels).toEqual(["},{"lineNumber":38,"author":{"gitId":"NereusWB922"},"content":"        GITHUB_LABEL_TEAM_LABEL.name,"},{"lineNumber":39,"author":{"gitId":"NereusWB922"},"content":"        GITHUB_LABEL_TUTORIAL_LABEL.name,"},{"lineNumber":40,"author":{"gitId":"NereusWB922"},"content":"        GITHUB_LABEL_FUNCTIONALITY_BUG.name,"},{"lineNumber":41,"author":{"gitId":"NereusWB922"},"content":"        GITHUB_LABEL_MEDIUM_SEVERITY.name"},{"lineNumber":42,"author":{"gitId":"NereusWB922"},"content":"      ]);"},{"lineNumber":43,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.githubLabels).toEqual(ISSUE_WITH_EMPTY_DESCRIPTION.labels);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":45,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set close date correctly for closed issue\u0027, () \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"NereusWB922"},"content":"      const issue \u003d Issue.createPhaseBugReportingIssue(CLOSED_ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":48,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":49,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.closed_at).toEqual(\u0027Mar 22, 2020 11:37 PM\u0027);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":51,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":52,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set milestone to default milestone for issue without milestone\u0027, () \u003d\u003e {"},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"      const issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITHOUT_MILESTONE);"},{"lineNumber":54,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":55,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.milestone).toEqual(Milestone.DefaultMilestone);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":57,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":58,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set assignees correctly for issue with assignees\u0027, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":"      const issue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_ASSIGNEES);"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":"      expect(issue.assignees).toEqual([USER_ANUBHAV.loginId]);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":65,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027.updateDescription(description)\u0027, () \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    it(\u0027correctly clean strings obtained from users\u0027, () \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      const noDetailsFromBugReporter \u003d \u0027No details provided by bug reporter.\u0027;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      expect(Issue.updateDescription(\u0027\u0027)).toBe(noDetailsFromBugReporter);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      expect(Issue.updateDescription(null)).toBe(noDetailsFromBugReporter);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"      const typicalDescription \u003d \u0027The app crashes after parsing config files.\u0027;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      expect(Issue.updateDescription(typicalDescription)).toBe(typicalDescription + \u0027\\n\\n\u0027);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"      const inputWithSpecialChars \u003d \u0027$%^!@\u0026-_test\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      expect(Issue.updateDescription(inputWithSpecialChars)).toBe(inputWithSpecialChars + \u0027\\n\\n\u0027);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":78,"author":{"gitId":"-"},"content":"});"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"describe(\u0027Issue\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  const dummyIssue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_EMPTY_DESCRIPTION);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  const otherDummyIssue \u003d Issue.createPhaseBugReportingIssue(ISSUE_WITH_ASSIGNEES);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  const noReportedDescriptionString \u003d \u0027No details provided by bug reporter.\\n\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  it(\u0027.createGithubIssueDescription() forms the correct GitHub Issue description for the issue\u0027, () \u003d\u003e {"},{"lineNumber":87,"author":{"gitId":"NereusWB922"},"content":"    expect(dummyIssue.createGithubIssueDescription()).toEqual(noReportedDescriptionString);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"NereusWB922"},"content":"    expect(otherDummyIssue.createGithubIssueDescription()).toEqual(`${otherDummyIssue.description}\\n`);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":91,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":57,"-":34}},{"path":"tests/services/label.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../src/app/core/models/label.model\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { GithubService } from \u0027../../src/app/core/services/github.service\u0027;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"import { LabelService } from \u0027../../src/app/core/services/label.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import * as LabelConstant from \u0027../constants/label.constants\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"let labelService: LabelService;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"let labelList: Label[];"},{"lineNumber":9,"author":{"gitId":"NereusWB922"},"content":"let githubServiceSpy: jasmine.SpyObj\u003cGithubService\u003e;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"describe(\u0027LabelService: fetchLabels()\u0027, () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"    githubServiceSpy \u003d jasmine.createSpyObj(\u0027GithubService\u0027, [\u0027fetchAllLabels\u0027]);"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"    labelService \u003d new LabelService(githubServiceSpy);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should fetch labels successfully\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"    const mockLabels \u003d LabelConstant.SEVERITY_LABELS;"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"    const parsedLabels \u003d labelService.parseLabelData(mockLabels);"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"NereusWB922"},"content":"    githubServiceSpy.fetchAllLabels.and.returnValue(of(mockLabels));"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"    labelService.fetchLabels().subscribe((response) \u003d\u003e {"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"      expect(response).toEqual(mockLabels);"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"      expect(labelService.labels).toEqual(parsedLabels);"},{"lineNumber":26,"author":{"gitId":"NereusWB922"},"content":"      expect(labelService.simpleLabels).toEqual(parsedLabels);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"NereusWB922"},"content":"    expect(githubServiceSpy.fetchAllLabels).toHaveBeenCalled();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":31,"author":{"gitId":"-"},"content":"});"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: parseLabelData()\u0027, () \u003d\u003e {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  beforeAll(() \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":"    labelList \u003d labelService.parseLabelData(LabelConstant.SEVERITY_LABELS);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  afterAll(() \u003d\u003e {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should be severity very low label\u0027, () \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[0].name).toBe(LabelConstant.LABEL_NAME_SEVERITY_VERY_LOW);"},{"lineNumber":45,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[0].color).toBe(LabelConstant.COLOR_SEVERITY_VERY_LOW);"},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[0].definition).toBe(LabelConstant.DEFINITION_SEVERITY_VERY_LOW);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should be severity low label\u0027, () \u003d\u003e {"},{"lineNumber":50,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[1].name).toBe(LabelConstant.LABEL_NAME_SEVERITY_LOW);"},{"lineNumber":51,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[1].color).toBe(LabelConstant.COLOR_SEVERITY_LOW);"},{"lineNumber":52,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[1].definition).toBe(LabelConstant.DEFINITION_SEVERITY_LOW);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should be severity medium label\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[2].name).toBe(LabelConstant.LABEL_NAME_SEVERITY_MEDIUM);"},{"lineNumber":57,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[2].color).toBe(LabelConstant.COLOR_SEVERITY_MEDIUM);"},{"lineNumber":58,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[2].definition).toBe(LabelConstant.DEFINITION_SEVERITY_MEDIUM);"},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":"  it(\u0027should be severity high label\u0027, () \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[3].name).toBe(LabelConstant.LABEL_NAME_SEVERITY_HIGH);"},{"lineNumber":63,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[3].color).toBe(LabelConstant.COLOR_SEVERITY_HIGH);"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"    expect(labelList[3].definition).toBe(LabelConstant.DEFINITION_SEVERITY_HIGH);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":66,"author":{"gitId":"-"},"content":"});"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: isDarkColor()\u0027, () \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  it(\u0027should be true for dark color\u0027, () \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    expect(labelService.isDarkColor(LabelConstant.COLOR_BLACK)).toBeTruthy();"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  it(\u0027should be false for light color\u0027, () \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    expect(labelService.isDarkColor(LabelConstant.COLOR_WHITE)).toBeFalsy();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":84,"author":{"gitId":"-"},"content":"});"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: setLabelStyle()\u0027, () \u003d\u003e {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  it(\u0027should be dark color background with light color text\u0027, () \u003d\u003e {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_BLACK)).toEqual(LabelConstant.DARK_BG_LIGHT_TEXT);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  it(\u0027should be light color background with dark color text\u0027, () \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_WHITE)).toEqual(LabelConstant.LIGHT_BG_DARK_TEXT);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":102,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":34,"-":68}},{"path":"tests/services/phase.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"NereusWB922"},"content":"import { STORAGE_KEYS } from \u0027../../src/app/core/constants/storage-keys.constants\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../src/app/core/models/phase.model\u0027;"},{"lineNumber":5,"author":{"gitId":"NereusWB922"},"content":"import { Repo } from \u0027../../src/app/core/models/repo.model\u0027;"},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"import { ErrorMessageService } from \u0027../../src/app/core/services/error-message.service\u0027;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"import { GithubService } from \u0027../../src/app/core/services/github.service\u0027;"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"import { LoggingService } from \u0027../../src/app/core/services/logging.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../src/app/core/services/phase.service\u0027;"},{"lineNumber":10,"author":{"gitId":"NereusWB922"},"content":"import { RepoUrlCacheService } from \u0027../../src/app/core/services/repo-url-cache.service\u0027;"},{"lineNumber":11,"author":{"gitId":"NereusWB922"},"content":"import { CATCHER_REPO, WATCHER_REPO } from \u0027../constants/session.constants\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"let phaseService: PhaseService;"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"let githubServiceSpy: jasmine.SpyObj\u003cGithubService\u003e;"},{"lineNumber":15,"author":{"gitId":"NereusWB922"},"content":"let repoUrlCacheServiceSpy: jasmine.SpyObj\u003cRepoUrlCacheService\u003e;"},{"lineNumber":16,"author":{"gitId":"NereusWB922"},"content":"let loggingServiceSpy: jasmine.SpyObj\u003cLoggingService\u003e;"},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"let routerSpy: jasmine.SpyObj\u003cRouter\u003e;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"describe(\u0027PhaseService\u0027, () \u003d\u003e {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":21,"author":{"gitId":"NereusWB922"},"content":"    githubServiceSpy \u003d jasmine.createSpyObj(\u0027GithubService\u0027, [\u0027isRepositoryPresent\u0027, \u0027storePhaseDetails\u0027]);"},{"lineNumber":22,"author":{"gitId":"NereusWB922"},"content":"    routerSpy \u003d jasmine.createSpyObj(\u0027Router\u0027, [\u0027navigate\u0027]);"},{"lineNumber":23,"author":{"gitId":"NereusWB922"},"content":"    repoUrlCacheServiceSpy \u003d jasmine.createSpyObj(\u0027RepoUrlCacheService\u0027, [\u0027cache\u0027]);"},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"    loggingServiceSpy \u003d jasmine.createSpyObj(\u0027LoggingService\u0027, [\u0027info\u0027]);"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"    phaseService \u003d new PhaseService(githubServiceSpy, repoUrlCacheServiceSpy, loggingServiceSpy, routerSpy);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027setRepository(Repo, Repo[])\u0027, () \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set the current repositories and update session data\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"NereusWB922"},"content":"      const repos: Repo[] \u003d [CATCHER_REPO];"},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"      phaseService.setRepository(WATCHER_REPO, repos);"},{"lineNumber":33,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":34,"author":{"gitId":"NereusWB922"},"content":"      expect(phaseService.currentRepo).toEqual(WATCHER_REPO);"},{"lineNumber":35,"author":{"gitId":"NereusWB922"},"content":"      expect(phaseService.otherRepos).toEqual(repos);"},{"lineNumber":36,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":37,"author":{"gitId":"NereusWB922"},"content":"      const currentSessionRepo \u003d phaseService.sessionData.sessionRepo.find((x) \u003d\u003e x.phase \u003d\u003d\u003d phaseService.currentPhase);"},{"lineNumber":38,"author":{"gitId":"NereusWB922"},"content":"      expect(currentSessionRepo?.repos).toEqual([WATCHER_REPO, CATCHER_REPO]);"},{"lineNumber":39,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":40,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":41,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should store phase details via githubService and update localStorage\u0027, () \u003d\u003e {"},{"lineNumber":42,"author":{"gitId":"NereusWB922"},"content":"      const localStorageSetItem \u003d spyOn(localStorage, \u0027setItem\u0027);"},{"lineNumber":43,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":44,"author":{"gitId":"NereusWB922"},"content":"      phaseService.setRepository(WATCHER_REPO);"},{"lineNumber":45,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":46,"author":{"gitId":"NereusWB922"},"content":"      expect(githubServiceSpy.storePhaseDetails).toHaveBeenCalledWith(WATCHER_REPO.owner, WATCHER_REPO.name);"},{"lineNumber":47,"author":{"gitId":"NereusWB922"},"content":"      expect(localStorageSetItem).toHaveBeenCalledWith(\u0027sessionData\u0027, JSON.stringify(phaseService.sessionData));"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should navigate to the new repository\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"NereusWB922"},"content":"      phaseService.setRepository(WATCHER_REPO);"},{"lineNumber":52,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":53,"author":{"gitId":"NereusWB922"},"content":"      expect(routerSpy.navigate).toHaveBeenCalledWith([\u0027issuesViewer\u0027], {"},{"lineNumber":54,"author":{"gitId":"NereusWB922"},"content":"        queryParams: { repo: WATCHER_REPO.toString() }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":58,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":59,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027changeRepositoryIfValid(Repo)\u0027, () \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set isChangingRepo to true at the start and false at the end\u0027, async () \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"NereusWB922"},"content":"      githubServiceSpy.isRepositoryPresent.and.returnValue(of(true));"},{"lineNumber":62,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":63,"author":{"gitId":"NereusWB922"},"content":"      const isChangingRepoNextSpy \u003d spyOn(phaseService.isChangingRepo, \u0027next\u0027);"},{"lineNumber":64,"author":{"gitId":"NereusWB922"},"content":"      spyOn(phaseService, \u0027setRepository\u0027);"},{"lineNumber":65,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":66,"author":{"gitId":"NereusWB922"},"content":"      await phaseService.changeRepositoryIfValid(WATCHER_REPO);"},{"lineNumber":67,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":68,"author":{"gitId":"NereusWB922"},"content":"      expect(isChangingRepoNextSpy.calls.first().args[0]).toBe(true);"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"NereusWB922"},"content":"      expect(isChangingRepoNextSpy.calls.mostRecent().args[0]).toBe(false);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error if repository is not valid\u0027, async () \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"NereusWB922"},"content":"      githubServiceSpy.isRepositoryPresent.and.returnValue(of(false));"},{"lineNumber":75,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":76,"author":{"gitId":"NereusWB922"},"content":"      await expectAsync(phaseService.changeRepositoryIfValid(WATCHER_REPO)).toBeRejectedWithError("},{"lineNumber":77,"author":{"gitId":"NereusWB922"},"content":"        ErrorMessageService.repositoryNotPresentMessage()"},{"lineNumber":78,"author":{"gitId":"NereusWB922"},"content":"      );"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":80,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":81,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set and navigate to new repo if repo is valid\u0027, async () \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"NereusWB922"},"content":"      githubServiceSpy.isRepositoryPresent.and.returnValue(of(true));"},{"lineNumber":83,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":84,"author":{"gitId":"NereusWB922"},"content":"      const repoChanged$Spy \u003d spyOn(phaseService.repoChanged$, \u0027next\u0027);"},{"lineNumber":85,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":86,"author":{"gitId":"NereusWB922"},"content":"      await phaseService.changeRepositoryIfValid(WATCHER_REPO);"},{"lineNumber":87,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":88,"author":{"gitId":"NereusWB922"},"content":"      expect(loggingServiceSpy.info).toHaveBeenCalledWith(`PhaseService: Changing current repository to \u0027${WATCHER_REPO}\u0027`);"},{"lineNumber":89,"author":{"gitId":"NereusWB922"},"content":"      expect(phaseService.currentRepo).toEqual(WATCHER_REPO);"},{"lineNumber":90,"author":{"gitId":"NereusWB922"},"content":"      expect(routerSpy.navigate).toHaveBeenCalledWith([\u0027issuesViewer\u0027], {"},{"lineNumber":91,"author":{"gitId":"NereusWB922"},"content":"        queryParams: { repo: WATCHER_REPO.toString() }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":93,"author":{"gitId":"NereusWB922"},"content":"      expect(repoUrlCacheServiceSpy.cache).toHaveBeenCalledWith(WATCHER_REPO.toString());"},{"lineNumber":94,"author":{"gitId":"NereusWB922"},"content":"      expect(repoChanged$Spy).toHaveBeenCalledWith(WATCHER_REPO);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027initializeCurrentRepository()\u0027, () \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"NereusWB922"},"content":"    beforeEach(() \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"NereusWB922"},"content":"      const org \u003d WATCHER_REPO.owner;"},{"lineNumber":101,"author":{"gitId":"NereusWB922"},"content":"      const repoName \u003d WATCHER_REPO.name;"},{"lineNumber":102,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":103,"author":{"gitId":"NereusWB922"},"content":"      const localStorageGetItemSpy \u003d spyOn(window.localStorage, \u0027getItem\u0027);"},{"lineNumber":104,"author":{"gitId":"NereusWB922"},"content":"      localStorageGetItemSpy.withArgs(STORAGE_KEYS.ORG).and.returnValue(org);"},{"lineNumber":105,"author":{"gitId":"NereusWB922"},"content":"      localStorageGetItemSpy.withArgs(STORAGE_KEYS.DATA_REPO).and.returnValue(repoName);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set and navigate to new repo if repo is valid\u0027, async () \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"NereusWB922"},"content":"      githubServiceSpy.isRepositoryPresent.and.returnValue(of(true));"},{"lineNumber":110,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":111,"author":{"gitId":"NereusWB922"},"content":"      const repoSetSourceNext \u003d spyOn(phaseService.repoSetSource, \u0027next\u0027);"},{"lineNumber":112,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":113,"author":{"gitId":"NereusWB922"},"content":"      await phaseService.initializeCurrentRepository();"},{"lineNumber":114,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":115,"author":{"gitId":"NereusWB922"},"content":"      expect(loggingServiceSpy.info).toHaveBeenCalledWith(`PhaseService: Repo is ${WATCHER_REPO}`);"},{"lineNumber":116,"author":{"gitId":"NereusWB922"},"content":"      expect(phaseService.currentRepo).toEqual(WATCHER_REPO);"},{"lineNumber":117,"author":{"gitId":"NereusWB922"},"content":"      expect(routerSpy.navigate).toHaveBeenCalledWith([\u0027issuesViewer\u0027], {"},{"lineNumber":118,"author":{"gitId":"NereusWB922"},"content":"        queryParams: { repo: WATCHER_REPO.toString() }"},{"lineNumber":119,"author":{"gitId":"NereusWB922"},"content":"      });"},{"lineNumber":120,"author":{"gitId":"NereusWB922"},"content":"      expect(repoSetSourceNext).toHaveBeenCalledWith(true);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error if repository is invalid\u0027, async () \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"NereusWB922"},"content":"      githubServiceSpy.isRepositoryPresent.and.returnValue(of(false));"},{"lineNumber":125,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":126,"author":{"gitId":"NereusWB922"},"content":"      await expectAsync(phaseService.initializeCurrentRepository()).toBeRejectedWithError("},{"lineNumber":127,"author":{"gitId":"NereusWB922"},"content":"        ErrorMessageService.repositoryNotPresentMessage()"},{"lineNumber":128,"author":{"gitId":"NereusWB922"},"content":"      );"},{"lineNumber":129,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":130,"author":{"gitId":"NereusWB922"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":132,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027changePhase(Phase)\u0027, () \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set current phase\u0027, () \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"NereusWB922"},"content":"      phaseService.setRepository(WATCHER_REPO);"},{"lineNumber":135,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":136,"author":{"gitId":"NereusWB922"},"content":"      expect(phaseService.currentPhase).toEqual(Phase.issuesViewer);"},{"lineNumber":137,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":138,"author":{"gitId":"NereusWB922"},"content":"      phaseService.changePhase(Phase.activityDashboard);"},{"lineNumber":139,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":140,"author":{"gitId":"NereusWB922"},"content":"      expect(phaseService.currentPhase).toEqual(Phase.activityDashboard);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  describe(\u0027.reset()\u0027, () \u003d\u003e {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    it(\u0027should reset the currentPhase of the PhaseService\u0027, () \u003d\u003e {"},{"lineNumber":146,"author":{"gitId":"NereusWB922"},"content":"      phaseService.currentPhase \u003d Phase.activityDashboard;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      phaseService.reset();"},{"lineNumber":148,"author":{"gitId":"NereusWB922"},"content":"      expect(phaseService.currentPhase).toBe(Phase.issuesViewer);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":151,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":152,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027setupFromUrl(url)\u0027, () \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set items in local storage if url is valid\u0027, async () \u003d\u003e {"},{"lineNumber":154,"author":{"gitId":"NereusWB922"},"content":"      const validUrl \u003d `/issuesViewer?repo\u003d${WATCHER_REPO.owner}%2F${WATCHER_REPO.name}`;"},{"lineNumber":155,"author":{"gitId":"NereusWB922"},"content":"      const localStorageSetItemSpy \u003d spyOn(window.localStorage, \u0027setItem\u0027);"},{"lineNumber":156,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":157,"author":{"gitId":"NereusWB922"},"content":"      await phaseService.setupFromUrl(validUrl).toPromise();"},{"lineNumber":158,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":159,"author":{"gitId":"NereusWB922"},"content":"      expect(localStorageSetItemSpy).toHaveBeenCalledWith(STORAGE_KEYS.ORG, WATCHER_REPO.owner);"},{"lineNumber":160,"author":{"gitId":"NereusWB922"},"content":"      expect(localStorageSetItemSpy).toHaveBeenCalledWith(STORAGE_KEYS.DATA_REPO, WATCHER_REPO.name);"},{"lineNumber":161,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":162,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":163,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error for url without repo paramater\u0027, (done) \u003d\u003e {"},{"lineNumber":164,"author":{"gitId":"NereusWB922"},"content":"      const urlWithoutRepo \u003d \u0027/issuesViewer\u0027;"},{"lineNumber":165,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":166,"author":{"gitId":"NereusWB922"},"content":"      phaseService.setupFromUrl(urlWithoutRepo).subscribe({"},{"lineNumber":167,"author":{"gitId":"NereusWB922"},"content":"        error: (err) \u003d\u003e {"},{"lineNumber":168,"author":{"gitId":"NereusWB922"},"content":"          expect(err).toEqual(new Error(ErrorMessageService.invalidUrlMessage()));"},{"lineNumber":169,"author":{"gitId":"NereusWB922"},"content":"          done();"},{"lineNumber":170,"author":{"gitId":"NereusWB922"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"NereusWB922"},"content":"      });"},{"lineNumber":172,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":173,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":174,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error for empty url\u0027, (done) \u003d\u003e {"},{"lineNumber":175,"author":{"gitId":"NereusWB922"},"content":"      const emptyUrl \u003d \u0027\u0027;"},{"lineNumber":176,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":177,"author":{"gitId":"NereusWB922"},"content":"      phaseService.setupFromUrl(emptyUrl).subscribe({"},{"lineNumber":178,"author":{"gitId":"NereusWB922"},"content":"        error: (err) \u003d\u003e {"},{"lineNumber":179,"author":{"gitId":"NereusWB922"},"content":"          expect(err).toEqual(new Error(ErrorMessageService.invalidUrlMessage()));"},{"lineNumber":180,"author":{"gitId":"NereusWB922"},"content":"          done();"},{"lineNumber":181,"author":{"gitId":"NereusWB922"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"NereusWB922"},"content":"      });"},{"lineNumber":183,"author":{"gitId":"NereusWB922"},"content":"    });"},{"lineNumber":184,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":185,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should throw error for url with invalid repo format\u0027, (done) \u003d\u003e {"},{"lineNumber":186,"author":{"gitId":"NereusWB922"},"content":"      const urlWithInvalidRepoFormat \u003d \u0027/issuesViewer?repo\u003dInvalidRepo\u0027;"},{"lineNumber":187,"author":{"gitId":"NereusWB922"},"content":""},{"lineNumber":188,"author":{"gitId":"NereusWB922"},"content":"      phaseService.setupFromUrl(urlWithInvalidRepoFormat).subscribe({"},{"lineNumber":189,"author":{"gitId":"NereusWB922"},"content":"        error: (err) \u003d\u003e {"},{"lineNumber":190,"author":{"gitId":"NereusWB922"},"content":"          expect(err).toEqual(new Error(ErrorMessageService.repositoryNotPresentMessage()));"},{"lineNumber":191,"author":{"gitId":"NereusWB922"},"content":"          done();"},{"lineNumber":192,"author":{"gitId":"NereusWB922"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"NereusWB922"},"content":"      });"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":196,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":158,"-":38}},{"path":"tests/services/user.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"NereusWB922"},"content":"import { GithubService } from \u0027../../src/app/core/services/github.service\u0027;"},{"lineNumber":2,"author":{"gitId":"NereusWB922"},"content":"import { LoggingService } from \u0027../../src/app/core/services/logging.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../src/app/core/services/user.service\u0027;"},{"lineNumber":4,"author":{"gitId":"NereusWB922"},"content":"import { USER_JUNWEI } from \u0027../constants/data.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"NereusWB922"},"content":"let githubServiceSpy: jasmine.SpyObj\u003cGithubService\u003e;"},{"lineNumber":7,"author":{"gitId":"NereusWB922"},"content":"let loggingServiceSpy: jasmine.SpyObj\u003cLoggingService\u003e;"},{"lineNumber":8,"author":{"gitId":"NereusWB922"},"content":"let userService: UserService;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"describe(\u0027UserService\u0027, () \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  beforeAll(() \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"NereusWB922"},"content":"    githubServiceSpy \u003d jasmine.createSpyObj(\u0027GithubService\u0027, [\u0027fetchAuthenticatedUser\u0027]);"},{"lineNumber":13,"author":{"gitId":"NereusWB922"},"content":"    loggingServiceSpy \u003d jasmine.createSpyObj(\u0027LoggingService\u0027, [\u0027info\u0027]);"},{"lineNumber":14,"author":{"gitId":"NereusWB922"},"content":"    userService \u003d new UserService(githubServiceSpy, loggingServiceSpy);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027createUserModel(loginId)\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should create a user correctly\u0027, async () \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"NereusWB922"},"content":"      const createdUser \u003d await userService.createUserModel(USER_JUNWEI.loginId).toPromise();"},{"lineNumber":20,"author":{"gitId":"NereusWB922"},"content":"      expect(createdUser).toEqual(USER_JUNWEI);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"NereusWB922"},"content":"  describe(\u0027reset()\u0027, () \u003d\u003e {"},{"lineNumber":25,"author":{"gitId":"NereusWB922"},"content":"    it(\u0027should set current user as undefined\u0027, async () \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"NereusWB922"},"content":"      await userService.createUserModel(USER_JUNWEI.loginId).toPromise();"},{"lineNumber":27,"author":{"gitId":"NereusWB922"},"content":"      expect(userService.currentUser).toEqual(USER_JUNWEI);"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"NereusWB922"},"content":"      userService.reset();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"NereusWB922"},"content":"      expect(loggingServiceSpy.info).toHaveBeenCalledWith(\u0027UserService: Clearing current user\u0027);"},{"lineNumber":32,"author":{"gitId":"NereusWB922"},"content":"      expect(userService.currentUser).toEqual(undefined);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":35,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"NereusWB922":20,"-":15}}]
